"use strict";(self["webpackChunkfront"]=self["webpackChunkfront"]||[]).push([[546],{72546:function(t,e,i){i.r(e),i.d(e,{default:function(){return I}});var a=function(){var t=this,e=t._self._c;return e("div",{staticClass:"bg2 h100p"},[e("menu-bar-gundam",{attrs:{hide:!0}}),e("game")],1)},r=[],s=i(48110),d=i(64562),n=i(4324),o=function(){var t=this,e=t._self._c;return e("div",{key:t.refreshG,staticClass:"relative w100p h100p mask"},[e("div",{staticClass:"hide"},[t._l(16,(function(i){return e("div",{key:"x"+i,staticClass:"bgYellow absolute w100p",style:{height:t.game?.grid.box.height+"px",top:t.getGridY(i-1)+"px"}})})),t._l(16,(function(i){return e("div",{key:"y"+i,staticClass:"bgRed absolute h100p",style:{width:t.game?.grid.box.width+"px",left:t.getGridX(i-1)+"px"}})}))],2),t._l(t.game?.fields,(function(i){return e("div",{key:i.name,staticClass:"absolute bg",style:t.getFieldStyle(i.x,i.y,i.width,i.height),attrs:{id:i.name},on:{dragover:t.onDragOver,drop:function(e){return t.onDrop(e,i)}}},[t._v(" "+t._s(i.zone)+" ")])})),t.aside?e("div",{staticClass:"flex absolute"},[e("div",{staticClass:"bg",staticStyle:{width:"300px",height:"100%"}},[e("div",{staticClass:"relative"},[e("gameCard",{attrs:{card:t.cardCenter,folder:"Gundam/cards/"}})],1),e("div",{staticStyle:{height:"420px"}}),e(d.Z,{staticClass:"bg m5px",attrs:{target:"_blank",text:""},on:{click:t.start}},[e(n.Z,[t._v("mdi-arrow-right-thin")]),t._v(" Start ")],1),e(d.Z,{staticClass:"bg m5px",attrs:{target:"_blank",text:""},on:{click:t.nextTurn}},[e(n.Z,[t._v("mdi-arrow-right-thin")]),t._v(" End Turn ")],1),e("div",{staticClass:"mp5px",domProps:{innerHTML:t._s(t.game?.logs)}})],1)]):t._e(),t._l(t.cards,(function(i){return e("div",{key:"B"+i.index,on:{dragover:t.onDragOver,drop:function(e){return t.onDrop(e,i)}}},[e("gameCard",{attrs:{id:"C"+i.index,card:i,folder:"Gundam/cards/",shine:i.selectable},on:{mouseover:function(e){return t.showCardMouseOver(i)},click:function(e){return t.showCard(i)},dragover:t.onDragOver,drop:function(e){return t.onDrop(e,i)}}})],1)})),e("div",{staticClass:"absolute bgWhite mask",staticStyle:{top:"80px",width:"100%",height:"0px"},attrs:{id:"divTitleParent"}},[e("div",{staticClass:"relative"},[e("div",{staticClass:"text-center absolute w100p title",staticStyle:{left:"-000px",top:"30px"}},[t._v(t._s(t.title)+" ")])])]),e("gameCard",{attrs:{id:"cardCenter",card:t.cardCenter,folder:"Gundam/cards/"},on:{click:function(e){return t.showCard(null)}}}),e("div",{staticClass:"absolute",staticStyle:{right:"100px",bottom:"25px"}},[t._v(" "+t._s(t.$vuetify.breakpoint.width)+" - "+t._s(t.$vuetify.breakpoint.height)+" ")])],2)},h=[],c=i(61711),l=i.n(c),g=i(47327);i(57658);class p{static addTasks(t,e){e.forEach((e=>{this.alreadyInclude(t,e)||t.push(e)}))}static alreadyInclude(t,e){return t.find((t=>this.isEqual(t,e)))}static isEqual(t,e){return t.task===e.task&&t.isPlayer1===t.isPlayer1}static refreshHand(t=!0){return{task:this.task.refreshHand,isPlayer1:t}}static refreshField(t=!0){return{task:this.task.refreshField,isPlayer1:t}}}(0,g.Z)(p,"task",{refreshHand:0,refreshField:1});var u=p;class x{static getLocationArrayProperty(t){return t==this.locationDeck?"deck":t==this.locationShield?"shield":t==this.locationHand?"hand":t==this.locationField?"field":t==this.locationBase?"base":t==this.locationResource?"resource":"trash"}static getNextIndex(){return this.index++,this.index}static removeByIndex(t,e){return t.filter((t=>t.index!==e.index))}static addIn(t,e){if(t&&!t.includes((t=>t.index===e.index)))return t.concat([e])}static sortRandom(t){return t.sort((()=>Math.random()-.5))}static log(t){this.world.logs=t+"<br>"+this.world.logs}static clone(t){return Object.assign({},t)}}(0,g.Z)(x,"game",null),(0,g.Z)(x,"grid",void 0),(0,g.Z)(x,"index",1),(0,g.Z)(x,"isPlayer1Turn",void 0),(0,g.Z)(x,"phase",0),(0,g.Z)(x,"phaseStart",0),(0,g.Z)(x,"phaseDraw",1),(0,g.Z)(x,"phaseResource",2),(0,g.Z)(x,"phaseMain",3),(0,g.Z)(x,"phaseAttack",4),(0,g.Z)(x,"phaseBlock",5),(0,g.Z)(x,"phaseAction",6),(0,g.Z)(x,"phaseDamage",7),(0,g.Z)(x,"phaseEnd",8),(0,g.Z)(x,"locationDeck",0),(0,g.Z)(x,"locationShield",1),(0,g.Z)(x,"locationHand",2),(0,g.Z)(x,"locationField",3),(0,g.Z)(x,"locationBase",4),(0,g.Z)(x,"locationTrash",5),(0,g.Z)(x,"locationResource",6);var f=x;class m{static createGrid(t,e){const i={};i.width=t-15,i.height=e,i.border=5;const a=16;i.widthB=i.width-i.border*(a+1),i.heightB=i.height-i.border*(a+1),i.center={height:i.heightB-2*i.border,y:i.border},i.center.width=107*i.center.height/150,i.center.x=i.widthB/2-i.center.width/2,i.box={height:i.heightB/a},i.box.width=i.widthB/a,i.boxbig={height:2*i.box.height+i.border,width:2*i.box.width+i.border},i.hand={width:(i.box.width+i.border)*a-i.border,height:3*(i.box.height+i.border)-i.border},i.hand.cardWidth=i.hand.width/11,i.hand.cardHeight=150*i.hand.cardWidth/107,i.field={width:i.hand.width-i.box.width-i.border,height:i.hand.height+2*(i.box.height+i.border)},i.field.cardHeight=.75*i.field.height,i.field.cardWidth=107*i.field.cardHeight/150,i.card={height:.75*i.field.height},i.card.width=107*i.card.height/150;for(let r=0;r<a;r++)i["x"+r]=5+r*(i.box.width+5),i["y"+r]=5+r*(i.box.height+5);return i}static getPositions(t,e){const i=this.createPoint(e,t.x15,t.y8,t.x0,t.y7,t.box.width,t.box.height,"base",f.locationBase),a=this.createPoint(e,t.x15,t.y9,t.x0,t.y6,t.box.width,t.box.height,"shield",f.locationShield),r=this.createPoint(e,t.x15,t.y10,t.x0,t.y5,t.box.width,t.box.height,"deck",f.locationDeck),s=this.createPoint(e,t.x15,t.y11,t.x0,t.y4,t.box.width,t.box.height,"trash",f.locationTrash),d=this.createPoint(e,t.x15,t.y12,t.x0,t.y3,t.box.width,t.box.height,"res",f.locationResource),n=this.createPoint(e,t.x0,t.y13,t.x0,t.y0,t.hand.width,t.hand.height,"hand",f.locationHand),o=this.createPoint(e,t.x0,t.y8,t.x1,t.y3,t.field.width,t.field.height,"field",f.locationField);return{deck:r,shield:a,hand:n,resource:d,field:o,trash:s,base:i}}static createPoint(t,e,i,a,r,s,d,n,o){const h=t?"1":"2";return{x:t?e:a,y:t?i:r,zone:n+h,width:s,height:d,location:o}}static createField(t,e){let i=[t.deck,t.trash,t.shield,t.resource,t.hand,t.field,t.base].concat([e.deck,e.trash,e.shield,e.resource,e.hand,e.field,e.base]);return i}static refresh(t,e,i){if(i!==f.locationHand&&i!==f.locationField)return;const a=i===f.locationHand;e.forEach(((i,r)=>{i.position=a?this.getPositionHand(t,r,e.length):this.getPositionField(t,r,e.length),i.to=a?this.getPositionHand(t,r,e.length):this.getPositionField(t,r,e.length)}))}static getPositionHand(t,e,i){return{x:t.positions.hand.x+this.getXCenter(t.positions.hand.width,f.grid.card.width,i,e),y:t.positions.hand.y,width:f.grid.hand.cardWidth,height:f.grid.hand.cardHeight}}static getPositionField(t,e,i){return{x:t.positions.field.x+this.getXCenter(t.positions.field.width,f.grid.card.width,i,e),y:t.positions.field.y,width:f.grid.field.cardWidth,height:f.grid.field.cardHeight}}static getPositionsTest(t,e,i=70,a=100,r=40){const s=(t-1)/2;let d=e*a,n=Math.abs(e-s),o=e-s,h=this.isPair(t)&&e===s||e===s+1?0:Math.round(i*(n/s)),c=this.isPair(t)&&e===s||e===s+1?0:Math.round(r*(o/s));return{x:d,y:h,rotation:c}}static getPosition(t,e,i){return{x:i.x+this.getCenter(i.width,f.grid.card.width,e,t),y:i.y,width:f.grid.card.width,height:f.grid.card.height}}static getPositionHandWithRotation(t,e,i,a){const r=.75*f.grid.card.width,s=r/2,d=i<a/2?-1:1;let n=0,o=a/2,h=0;if(this.isPair(a)){const t=f.grid.hand.width/2-s+s*d;o=i<a/2?Math.floor(a/2)-1:Math.ceil(a/2),h=t+Math.abs(o-i)*r*d}else{const t=f.grid.hand.width/2-s;h=t+Math.abs(o-i)*r*d}const c=t.isPlayer1?1:-1;n=i-o;const l=c*Math.round(n/o*20),g=c*(r/4)*Math.abs(o-i);e.ap=i,e.hp=o;const p={x:t.positions.hand.x+h,y:t.positions.hand.y+g+20,width:f.grid.card.width,height:f.grid.card.height,rotation:l};return p}static isPair(t){return t%2==0}static getCenter(t,e,i,a){const r=t/2,s=i/2,d=s-a;return r-d*e}static getXCenter(t,e,i,a){const r=t/i;return r/2+r*a-e/2}}var y=m;class w{static createGame(t,e,i){f.game={cards:[],tasks:[],popup:[]},f.cards=t.getCards(),u.addTasks(f.game.tasks,[u.refreshHand(!0),u.refreshHand(!1)]),this.nextTurn(),f.grid=y.createGrid(e,i),f.game.grid=f.grid,f.game.player1={deck:[],shield:[],hand:[],field:[],trash:[],isPlayer1:!0},f.game.player2={deck:[],shield:[],hand:[],field:[],trash:[],isPlayer1:!1},f.game.player1.positions=y.getPositions(f.grid,!0),f.game.player2.positions=y.getPositions(f.grid,!1),f.game.fields=y.createField(f.game.player1.positions,f.game.player2.positions);for(let a=0;a<5;a++)this.spawn(f.game.player1,this.createCard("GD01-028"),f.locationDeck,f.locationHand,!1),this.spawn(f.game.player2,this.createCard("GD01-028"),f.locationDeck,f.locationHand,!1),this.spawn(f.game.player2,this.createCard("GD01-028"),f.locationDeck,f.locationField,!1);return this.spawn(f.game.player1,this.createCard("GD01-028"),f.locationDeck,f.locationHand,!1),y.refresh(f.game.player1,f.game.player1.hand,f.locationHand),y.refresh(f.game.player2,f.game.player2.hand,f.locationHand),y.refresh(f.game.player1,f.game.player1.field,f.locationField),y.refresh(f.game.player2,f.game.player2.field,f.locationField),f.game}static createCard(t){const e=f.clone(f.cards.find((e=>e.id===t)));return e.index=f.getNextIndex(),e}static spawn(t,e,i,a,r){const s=f.getLocationArrayProperty(i),d=f.getLocationArrayProperty(a);t[s]=f.removeByIndex(t[s],e.index),t[d]=f.addIn(t[d],e),f.game.cards=f.addIn(f.game.cards,e),r||(y.refresh(t,t[s],i),y.refresh(t,t[d],a))}static nextTurn(){}}var b=w,v=i(37053),C=function(){var t=this,e=t._self._c;return e("div",{staticClass:"absolute bgYellow",style:{left:t.card.position.x+"px",top:t.card.position.y+"px",width:t.card.position.width+"px",height:t.card.position.height+"px",transform:"rotate("+t.card.position.rotation+"deg)","z-index":t.card.zindex,cursor:t.shine?"pointer":""}},[t.card?e("img",{class:{shine:t.shine,w100p:!0,h100p:!0},style:{"object-fit":"cover","object-position":t.card.bgposition},attrs:{src:i(97226)("./"+t.folder+t.card.id+".webp")},on:{mouseover:function(e){return t.$emit("mouseover",t.card)},click:function(e){return t.$emit("click",t.card)},contextmenu:function(e){return e.preventDefault(),t.$emit("clickright",t.card)}}}):e("div",[t._v("No card")]),t.hidestat||!t.card.ap&&!t.card.hp?t._e():e("div",{staticClass:"absolute bg cirlce10px textVerticalCenter",staticStyle:{width:"25px",height:"20px",top:"-5px",right:"-5px","font-size":"8px"}},[t._v(" "+t._s(t.card.ap)+" - "+t._s(t.card.hp)+" ")])])},k=[],P={name:"game-card",props:["card","folder","shine","hidestat"]},Z=P,D=i(1001),_=(0,D.Z)(Z,C,k,!1,null,"08573b8a",null),G=_.exports,T={name:"game-vue",props:[],components:{gameCard:G},data:()=>({refreshG:0,aside:!1,freeze:!1,cards:[],cardCenter:{id:"GD01-028",position:{width:0}},game:null,title:""}),mounted(){window.addEventListener("resize",(()=>{this.refreshG++})),this.start()},methods:{showText(t){alert(t)},getGridX(t){return this.game?.grid["x"+t]},getGridY(t){return this.game?.grid["y"+t]},showCardMouseOver(t){this.aside&&this.showCard(t)},showCard(t){this.cardCenter=t?{id:t.id,position:t.position,to:{x:this.game.grid.center.x,y:this.game.grid.center.y,width:this.game.grid.center.width,height:this.game.grid.center.height}}:{id:this.cardCenter.id,position:this.cardCenter.position,to:{...this.cardCenter.position,height:0}};const e=[{id:"cardCenter",from:this.cardCenter.position,to:this.cardCenter.to,isIncrement:!1}];l().animateMultiple(e,500),setTimeout((()=>{this.cardCenter.position=this.cardCenter.to,delete this.cardCenter.to}),510)},getGridPlace(t,e){return{width:this.game?.grid.box.width+"px",height:this.game?.grid.box.height+"px",left:this.getGridX(t)+"px",top:this.getGridY(e)+"px"}},getFieldStyle(t,e,i,a){return{width:i+"px",height:a+"px",left:t+"px",top:e+"px"}},start(){this.game=b.createGame(v.Z,this.$vuetify.breakpoint.width,this.$vuetify.breakpoint.height),this.refreshGame(),this.showTitle("Draw phase")},showTitle(t){this.title=t;const e=250;setTimeout((()=>{l().animate("divTitleParent",{height:0},{height:100},!1,e)}),10),setTimeout((()=>{l().animate("divTitleParent",{height:100},{height:0},!1,e)}),4.5*(e+10))},refreshGame(){this.cards=this.game.cards,setTimeout((()=>{this.setDrag()}),10),this.refreshG++},beginAnimation(){const t=this.cards.filter((t=>t.to));if(t.length<1)return;this.freeze=!0;const e=500,i=t.map((t=>({id:"C"+t.index,from:t.position,to:t.to,isIncrement:!1})));l().animateMultiple(i,e),setTimeout((()=>{this.endAnimation()}),e+10)},endAnimation(){this.freeze=!1,this.refreshGame(!1)},nextTurn(){},playCardOnZone(t,e){alert(t.name+" in "+e.zone)},playCardOnCard(t,e){alert(t.name+" in "+e.name)},setDrag(){this.cards.forEach((t=>{this.addEvent("C"+t.index,"dragstart",(e=>this.startDrag(e,t)))}))},addEvent(t,e,i){const a=document.getElementById(t);a&&a.addEventListener(e,(t=>i(t)))},startDrag(t,e){t.dataTransfer.dropEffect="move",t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("card",e.index)},onDragOver(t){t.preventDefault()},getCard(t){return this.cards.find((e=>e.index==t))},onDrop(t,e){t.preventDefault();const i=t.dataTransfer.getData("card"),a=this.getCard(i);e.zone?this.playCardOnZone(a,e):this.playCardOnCard(a,e)}}},H=T,F=(0,D.Z)(H,o,h,!1,null,null,null),M=F.exports,B={name:"pageGundamTcgFight",components:{menuBarGundam:s.Z,game:M},data:()=>({}),mounted(){},methods:{}},E=B,S=(0,D.Z)(E,a,r,!1,null,null,null),I=S.exports}}]);
//# sourceMappingURL=546.f9e24c05.js.map