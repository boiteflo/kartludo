{"version":3,"file":"js/655.5671d555.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/cardAttack.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[(!_vm.game)?_c('div',{staticClass:\"flex flex-wrap\"},_vm._l((_vm.deckList),function(deck,index){return _c('img',{key:'Deck' + index,staticClass:\"shine mp5px\",staticStyle:{\"object-fit\":\"cover\",\"width\":\"15%\"},attrs:{\"src\":require('@/assets/Gundam/cards/' + deck.card + '.webp')},on:{\"click\":function($event){return _vm.selectDeckList(deck)}}})}),0):_vm._e(),_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\n        bgYellow2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 'locationHand'\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card2.x, _vm.game.grid.centerMini.card2.y,\n        _vm.game.grid.centerMini.card2.width, _vm.game.grid.centerMini.card2.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgYellow absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.text.x, _vm.game.grid.centerMini.text.y,\n        _vm.game.grid.centerMini.text.width, _vm.game.grid.centerMini.text.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"13\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static handleEffects(player, card1, card2, trigger) {\r\n        const effectsRemainings = this.getEffectsRemaining(trigger, card1, card2);\r\n        if (!effectsRemainings || effectsRemainings.length < 1)\r\n            return {};\r\n\r\n        const text = effectsRemainings.map(x => this.getEffectText(x)).join('<br>');\r\n        const delay = global.delay;\r\n        const isShowingEffect = global.cardHighlight.find(x => x.index === card1.index);\r\n\r\n        if (!isShowingEffect) {\r\n            global.game.tasks = [{ id: gameTask.taskCardsToMiniCenter.name, delay, card1, card2, text }]\r\n                .concat(global.game.tasks);\r\n            return { stop: true };\r\n        } else\r\n            gameTask.addTasks(global.game.tasks, [\r\n                { id: gameTask.taskRefreshField.name, isPlayer1: card1.isPlayer1 },\r\n                { id: gameTask.taskTextHide.name, delay },\r\n                { id: gameTask.taskTextDelete.name },\r\n            ]);\r\n\r\n        return this.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        const result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        card1.effectsRemaining = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                alert('cant do that');\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n\r\n            return this[effect.id](player, card1, card2, effect);\r\n        }\r\n    }\r\n\r\n    static get1ShieldToHand(player, card1, card2, effect) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card = player.shield.splice(0, 1)[0];\r\n        const text = 'Get one shield to hand';\r\n        card.location = player.positions.shield.location;\r\n        gameTask.addTasks(global.game.tasks, [{\r\n            id: gameTask.taskMove.name,\r\n            card1: card,\r\n            to: global.locationHand,\r\n            isPlayer1: player.isPlayer1\r\n        }]);\r\n        global.logEffect(effect, text);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(player, card1, card2, effect) {\r\n        if (!global.game.cardChoice) {\r\n            const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        else {\r\n            const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n            player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n            global.deletePopup();\r\n        }\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(player, card1, card2, effect) {\r\n        if (player.base || card2.index)\r\n            return;\r\n\r\n        const shield = player.shield[0];\r\n        const stop = shield.level < effect.value;\r\n        if (stop)\r\n            global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n        return { stop };\r\n    }\r\n\r\n    static gainThisTurn(player, card1, card2, effect) {\r\n        const effectClone = global.clone(effect);\r\n        delete effectClone.target;\r\n        effectClone.effect = effectClone.effect2;\r\n        global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n        this.applyEffect(player, card2, null, effectClone);\r\n        card2.removeEndTurn = [effectClone];\r\n    }\r\n\r\n    static incruise(player, card1, card2, effect) {\r\n        card1.ap += effect.ap;\r\n        card1.hp += effect.hp;\r\n        global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(player, card1, card2, effect) {\r\n        gameTask.addTasks(global.game.tasks, [\r\n            { id: gameTask.taskCardToCenter.name, card1, isPlayer1: player.isPlayer1 },\r\n            { id: gameTask.taskMove.name, card1, to: global.locationHand, isPlayer1: player.isPlayer1 }\r\n        ]);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return { stop: true };\r\n    }\r\n\r\n    static sendToField(player, card1, card2, effect) {\r\n        global.move(player, card1, global.locationShield, global.locationField);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return { stop: true, cancel: true, refreshHandOpponent: true };\r\n    }\r\n\r\n    static sendToBase(player, card1, card2, effect) {\r\n        card1.location = player.positions.shield.location;\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard.name, card1: card1, zone: player.positions.field }]);\r\n        return { stop: true };\r\n    }\r\n\r\n    static placeExResource(player, card1, card2, effect) {\r\n        player.resourcesEx += effect.value;\r\n        player.resourcesAvailable += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n    }\r\n\r\n    static placeRestedResource(player, card1, card2, effect) {\r\n        player.resourcesMax += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n    }\r\n\r\n    static breach(player, card1, card2, effect) {\r\n        if (!card1.breach || card1.breach < effect.value) {\r\n            card1.breach = effect.value;\r\n            global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static deploy(player, card1, card2, effect) {\r\n        const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n        if (targets.length < 1) return;\r\n        const card = targets[0];\r\n        card.selectable = false;\r\n        card.canAttack = false;\r\n        global.move(player, card, card.location, global.locationField);\r\n        global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n        this.apply(GameGundamEffect.onplay, player, card, null);\r\n    }\r\n\r\n    static attackActiveEnnemy(player, card1, card2, effect) {\r\n        if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n            card1.attackActiveEnnemy = effect.value;\r\n            global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(player, card1, card2, effect) {\r\n        if (card1.breach) {\r\n            if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                card1.immuneAp = effect.value;\r\n                global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n    static cardHighlight = [];\r\n    static needTaskEndRefresh = false;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'locationEmpty';\r\n    static locationTrash = 'locationTrash';\r\n    static locationDeck = 'locationDeck';\r\n    static locationShield = 'locationShield';\r\n    static locationHand = 'locationHand';\r\n    static locationField = 'locationField';\r\n    static locationBase = 'locationBase';\r\n    static locationResource = 'locationResource';\r\n    static locationPair = 'locationPair';\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        else if (location == this.locationPair) return 'pair';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo, ignoreRefresh);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard)\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo, ignoreRefresh);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        if (!ignoreRefresh) {\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField.name, isPlayer1: player.isPlayer1 }]);\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass gameTask {\r\n    static addTasks(list, tasks) {\r\n        global.needTaskEndRefresh = true;\r\n        tasks.forEach(task => list.push(task));\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid) {\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if (task)\r\n            delete (task.delay);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        if (game.end){\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1 : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1 : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n\r\n            const result = this[task.id](game, task, player);\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (global.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        global.needTaskEndRefresh = false;\r\n        global.cardHighlight = [];\r\n        game.manager.refreshFieldAndHand(game.player1);\r\n        game.manager.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static taskRefreshField(game, task, player) {\r\n        game.manager.refreshFieldAndHand(player);\r\n    }\r\n\r\n    static taskTitleShow(game, task, player) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task, player) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: global.clone(global.grid.centerMini.text)\r\n        };\r\n        game.textEffect.to = global.clone(game.textEffect.position);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static taskTextHide(game, task, player) {\r\n        if (!game.textEffect)\r\n            return;\r\n\r\n        game.textEffect.position.height = global.grid.centerMini.text.height;\r\n        game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n        game.refreshOnlyTextEffect = true;\r\n    }\r\n\r\n    static taskTextDelete(game, task, player) {\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n    }\r\n\r\n    static taskMove(game, task, player) {\r\n        global.spawnOrMove(player, task.card1, task.from, task.to, task.ignoreRefresh);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        const card = global.spawnOrMove(player, task.card1, task.from, task.to, task.ignoreRefresh);\r\n        const taskCenter = { id: this.taskCardToCenter.name, card1: card, isPlayer1: task.isPlayer1, delay: global.delay };\r\n        global.game.tasks = global.addListInArrayAfterIndex(global.game.tasks, 1, [taskCenter]);\r\n    }\r\n\r\n    static taskCardsToMiniCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? global.grid.centerMini.card1 : global.grid.centerMini.card3;\r\n        task.card1.to = global.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n\r\n        if (task.card2) {\r\n            global.spawnIfNot(task.card2);\r\n            global.cardHighlight.push(task.card2);\r\n            task.card2.to = global.clone(global.grid.centerMini.card2);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n        }\r\n\r\n        if (task.text) {\r\n            this.taskTextShow(game, task, player);\r\n        }\r\n    }\r\n\r\n    static taskCardToCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        task.card1.to = global.clone(global.grid.center);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n    }\r\n\r\n    static taskAttack(game, task, player) {\r\n        game.taskAttack = task;\r\n        return game.manager.attack(task.player, task.opponent, task.attacker, task.target, task.zone, task.breach);\r\n    }\r\n\r\n    static taskPopup(game, task, player) {\r\n        if (!game.cardChoice && !game.choice) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        }\r\n    }\r\n\r\n    static taskPlayCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, task.regularPlay);\r\n    }\r\n\r\n    static taskPairCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.pair(cardPlayer, task.card1, task.card2);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        // grid.field.cardHeightPercent = 0.54;\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6, grid.field.cardHeightPercent);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width, height, location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = 5; // (height - (grid.centerMini.card1.height * 1)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.card3 = { ...grid.centerMini.card1, x: grid.centerMini.card1.x + (grid.centerMini.card1.width / 2) };\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = global.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!global.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height, decklistPlayer1, decklistPlayer2) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(manager, global.cards, decklistPlayer1, deckLength, true);\r\n        global.game.player2 = this.createPlayer(manager, global.cards, decklistPlayer2, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        const isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n        global.isPlayer1 = isPlayer1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawnOrMove(global.game.player1, null, global.locationDeck, global.locationHand, true);\r\n            global.spawnOrMove(global.game.player2, null, global.locationDeck, global.locationHand, true);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(manager, cards, decklist, length, isPlayer1) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = cards.find(x => x.id == id);\r\n            if(!card)\r\n                throw new Error(\"This card doesn't exist : \" + id); \r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(global.createCard(card.id));\r\n        })\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n\r\n        result = global.sortRandom(result);\r\n\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base: [], empty: [] };\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height, decklistPlayer1, decklistPlayer2) {\r\n        setup.createGame(manager, width, height, decklistPlayer1, decklistPlayer2);\r\n        global.game.manager = manager;\r\n        global.delay = manager.getAnimDuration();\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskTitleShow.name, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskMoveAndShowCenter.name, isPlayer1: global.isPlayer1, from: global.locationDeck, to: global.locationHand, ignoreRefresh: true }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        gameTask.addTasks(game.tasks, [{id:gameTask.taskPlayCard.name,card1, card2, zone, regularPlay:true}]);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.manager.selectChoiceCard(game, card);\r\n        return game;\r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        game.manager.selectChoice(game, choice);\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardPlay {\r\n    static playFromHand(player, card1, card2, zone, regularPlay) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = regularPlay && player.resourcesAvailable < card1.cost;\r\n\r\n        if (!isSamePlayer || zone.location == global.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playCard(player, card1, card2, zone, regularPlay);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, playCost) {\r\n        let isPilot = global.isCardPilot(card1);\r\n        let isCommand = global.isCardCommand(card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(card1, card2);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        global.spawnIfNot(card1);\r\n\r\n        const effectResult = effects.handleEffects(player, card1, card2, effects.onplay);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        if (global.isCardUnit(card1) && player.field.length < 6) {\r\n            card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (global.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskMove.name, card1: player.base[0], to: global.locationTrash, isPlayer1: card1.isPlayer1 }]);\r\n\r\n            global.move(player, card1, card1.location, global.locationBase);\r\n            card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && card2 && global.isCardUnit(card2)) {\r\n            if (card1.pair || card2.pair || card1.isPaired || card2.isPaired) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPairCard.name, card1, card2 }]);\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            const effectResult = effects.handleEffects(player, card1, card2, effects.command);\r\n            if (effectResult.stop)\r\n                return effectResult;\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n\r\n            global.move(player, card1, card1.location, global.locationTrash, true);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static playCardCost(player, card) {\r\n        let costRemaining = card.cost;\r\n        if (player.resourcesEx > 0) {\r\n            costRemaining = Math.max(0, costRemaining - player.resourcesEx);\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - card.cost);\r\n        }\r\n        player.resourcesAvailable -= costRemaining;\r\n    }\r\n\r\n    static askPilotOrCommand(card1, card2) {\r\n        if (!card2 || !global.isCardPilot(card1) || !global.isCardCommand(card1))\r\n            return;\r\n\r\n        if (!global.game.choice) {\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Do you want to play as pilot or command ?',\r\n                choices: [{ text: 'Pilot' }, { text: 'Command' }]\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        } else {\r\n            const isPilot = global.game.choice.text === 'Pilot';\r\n            const isCommand = global.game.choice.text === 'Command';\r\n            global.deletePopup();\r\n            return { isPilot, isCommand };\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardAttack {\r\n    static attack(player, card1, card2, zone, breach) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        const blockers = opponent.field.filter(x => x.block && x.active);\r\n        let selectedAsBlocker = false;\r\n        if (!global.game.blocker && blockers.length > 0) {\r\n            if (!global.game.cardChoice && !global.game.choice) {\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select a blocker ?',\r\n                    cards: blockers,\r\n                    choices: [{ text: 'none' }]\r\n                }\r\n                ].concat(global.game.tasks);\r\n                return { stop: true };\r\n            }\r\n\r\n            card2 = global.game.cardChoice;\r\n            global.game.blocker = card2;\r\n            selectedAsBlocker = true;\r\n        }\r\n\r\n        /*const actionCardResult = cardAction.askForActionCards(player, opponent);\r\n        if (actionCardResult && actionCardResult.stop)\r\n            return actionCardResult;*/\r\n\r\n        delete (global.game.blocker);\r\n        global.deletePopup();\r\n\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            const isValidTarget = card1.attackActiveEnnemy ? card2.level < card1.attackActiveEnnemy : selectedAsBlocker || !card2.active;\r\n            if (!isValidTarget)\r\n                return { sendBack: true };\r\n\r\n            this.startAttackAnimation(player, opponent, card1, card2, zone, breach);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return { end: true, isPlayer1: opponent.isPlayer1 };\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            this.startAttackAnimation(player, opponent, card1, target, zone);\r\n            return;\r\n        }        \r\n        \r\n        global.setActive(card1, false);\r\n        // TO DO : play card effect at center\r\n        let card = opponent.shield.splice(0, 1)[0];\r\n        const effectResult = effects.apply(effects.burst, opponent, card, card1);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        gameTask.addTasks(global.game.tasks, [\r\n            { id: gameTask.taskCardToCenter.name, card1: card, isPlayer1: card.isPlayer1, delay: global.delay },\r\n            { id: gameTask.taskMove.name, card1: card, to: global.locationTrash, isPlayer1: card.isPlayer1 },\r\n        ]);\r\n\r\n        return { sendBack: true };\r\n    }\r\n    \r\n    static startAttackAnimation(player, opponent, attacker, target, zone, breach) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardsToMiniCenter.name, delay: global.delay, card1:attacker, card2: target },\r\n            { id: gameTask.taskAttack.name, player, opponent, attacker, target, delay, zone, breach }\r\n            ]);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return effectResult;\r\n        }\r\n\r\n        const delay = global.delay;\r\n\r\n        let damage = breach ? breach : attacker.ap;\r\n        if (target.immuneAp && damage < target.immuneAp)\r\n            damage = 0;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        if (attacker.immuneAp && attacker < target.immuneAp)\r\n            damage = 0;\r\n        attacker.hp -= damage;\r\n\r\n        const activeBreach = !breach && global.isCardUnit(target) && attacker.breach && target.hp < 1;\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : global.delay;\r\n            tasks.push({ id: gameTask.taskMove.name, delay: delayForTarget, card1: attacker, to: global.locationTrash, isPlayer1: attacker.isPlayer1 });\r\n        }\r\n        else if (!activeBreach)\r\n            tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskMove.name, delay, card1: target, to: global.locationTrash, isPlayer1: target.isPlayer1 });\r\n        }\r\n        else\r\n            tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n\r\n        if (activeBreach)\r\n            this.attack(player, attacker, null, zone, attacker.breach);\r\n    }\r\n}\r\n\r\n\r\nexport default cardAttack;\r\n","import global from '../global';\r\nimport cardPlay from './cardPlay';\r\nimport cardAttack from './cardAttack';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = global.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (global.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, regularPlay) {\r\n        const noDropZone = !card2 && !zone;\r\n        let result = {};\r\n        if (noDropZone)\r\n            result.sendBack = true;\r\n\r\n        else if (card1.location === global.locationHand)\r\n            result = cardPlay.playFromHand(player, card1, card2, zone, regularPlay);\r\n        else if (card1.location === global.locationField)\r\n            result = this.attack(player, card1, card2, zone);\r\n        else\r\n            result = cardPlay.playCard(player, card1, card2, zone, false);   \r\n\r\n        if (result && result.sendBack)\r\n            this.sendCardBackToSquareOne(card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static attack(player, card1, card2, zone, breach) {\r\n        return cardAttack.attack(player, card1, card2, zone, breach);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        return cardAttack.attackCard(player, opponent, attacker, target, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.cardChoice = card;\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.choice = choice;\r\n    }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 500; }\r\n    static getHandStartLength() { return 5; }\r\n    static getDeckList(isPlayer1){ \r\n        const deckList = isPlayer1 ? 'Witch from Mercury' : 'Unicorn';\r\n        return this.getDeckListBySerie(deckList);\r\n    }\r\n\r\n    static getDeckListBySerie(name){\r\n        return name === 'Origin blue' ? '4xST01-001,4xST01-002,4xST01-005,4xST01-010,4xST01-012,4xST01-013,4xST01-015,4xGD01-004,4xGD01-008,4xGD01-009,4xGD01-013,4xGD01-015,4xGD01-099,4xGD01-124'\r\n            : name === 'Origin green' ? '7xST03-007,7xST03-008,6xST03-011,7xST03-016,7xGD01-026,7xGD01-030,6xGD01-031,6xGD01-105'\r\n            : name === 'Unicorn' ? '7xGD01-005,8xGD01-011,7xGD01-016,7xGD01-018,7xGD01-088,7xGD01-089,7xGD01-100'\r\n            : name === 'Seed' ? '5xST04-001,5xST04-002,5xST04-005,5xST04-010,5xST04-013,5xST04-015,4xGD01-068,4xGD01-077,4xGD01-081,4xGD01-118,4xGD01-120'\r\n            : name === 'Witch from Mercury' ? '5xST01-007,5xST01-008,5xST01-011,5xST01-016,5xGD01-070,5xGD01-072,5xGD01-075,5xGD01-076,5xGD01-097,5xGD01-117'\r\n            : name === 'Wing' ? '4xGD01-028,4xGD01-034,4xGD01-040,4xGD01-041,4xGD01-091,3xGD01-107,4xST02-001,4xST02-002,4xST02-005,4xST02-010,4xST02-012,4xST02-013,3xST02-015'\r\n            :  '1xST04-001,1xGD01-004,1xGD01-026,1xGD01-070,1xGD01-088,1xGD01-100,1xGD01-107,1xGD01-118,1xST01-001,1xST01-011,1xST02-001,1xST03-011';\r\n    }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createUniqueRare(game.player1);\r\n        //this.createUniqueRare(game.player2);\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 0; i++) {\r\n            global.move(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.move(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        // game.player1.shield = [global.createCard(\"ST02-013\")].concat(game.player1.shield);\r\n        // game.player2.shield = [global.createCard(\"ST02-013\")].concat(game.player2.shield);\r\n\r\n        const playerOpponent = global.isPlayer1 ? game.player1 : game.player2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        /*gameTask.addTasks(game.tasks, [{\r\n            id: gameTask.taskPopup.name,\r\n            text: 'Muligan ?',\r\n            choices: [{ text: 'yes', id: 'muligan' }, { text: 'no', id: 'muliganNo' }]\r\n        }]);*/\r\n    }\r\n\r\n    static createUniqueRare(player){\r\n        const rareKeyWord = \"_p1\";\r\n        var rareCards = cards.files.split(',').filter(x=> x.includes(rareKeyWord)).map(x=> x = x.replace(rareKeyWord,\"\"));\r\n        rareCards.forEach(rareCard=> {\r\n            const firstCard = player.deck.find(x=> x.id === rareCard);\r\n            if(firstCard)\r\n                firstCard.id+=rareKeyWord;\r\n        });\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXB-001\");\r\n        global.spawnOrMove(player, card, global.locationBase, global.locationBase);\r\n        card.isTemporaryCard = true;\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        if (player.resourcesMax < 10)\r\n            player.resourcesMax += 1;\r\n\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n\r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand, false, 7);\r\n        positioner.refresh(player.field, player.positions.field, false, 3);\r\n        positioner.refresh(player.base, player.positions.base, true);\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        global.game.cards = global.game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, regularPlay) {\r\n        const result = cardHandler.play(player, card1, card2, zone, regularPlay);\r\n\r\n        if (result && result.end)\r\n            global.end(result.isPlayer1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2, zone, breach) {\r\n        cardHandler.attackCard(player, opponent, card1, card2, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        if (choice.id && choice.id.startsWith('muligan')) {\r\n            global.deletePopup();\r\n\r\n            if (choice.id == 'muligan')\r\n                this.doMuligan(game, game.player1);\r\n        }\r\n\r\n        cardHandler.selectChoice(game, choice);\r\n    }\r\n\r\n    static doMuligan(game, player) {\r\n        player.deck = global.sortRandom(player.deck.concat(player.hand));\r\n        const removeIds = player.hand.map(x => x.index);\r\n        game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n        player.hand = [];\r\n\r\n        for (let i = 0; i < this.getHandStartLength(); i++)\r\n            global.spawnOrMove(player, null, global.locationDeck, global.locationHand, true);\r\n\r\n        this.refreshFieldAndHand(player);\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        return global.pair(player, card1, card2);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=9ee1a63e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9ee1a63e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- DeckList -->\r\n        <div class=\"flex flex-wrap\" v-if=\"!game\">\r\n            <img v-for=\"(deck,index) in deckList\" :key=\"'Deck' + index\"\r\n                class=\"shine mp5px\" \r\n                style=\"object-fit: cover; width:15%\"\r\n                :src=\"require('@/assets/Gundam/cards/' + deck.card + '.webp')\"\r\n                @click=\"selectDeckList(deck)\" />\r\n        </div>\r\n\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 'locationHand'\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card2.x, game.grid.centerMini.card2.y,\r\n            game.grid.centerMini.card2.width, game.grid.centerMini.card2.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgYellow absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.text.x, game.grid.centerMini.text.y,\r\n            game.grid.centerMini.text.width, game.grid.centerMini.text.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:13\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n        decklistPlayer1:null,\r\n        decklistPlayer2:null,\r\n        deckList: [\r\n            { name: 'Origin blue', card: 'ST01-001_p1', list: '4xST01-001,4xST01-002,4xST01-005,4xST01-010,4xST01-012,4xST01-013,4xST01-015,4xGD01-004,4xGD01-008,4xGD01-009,4xGD01-013,4xGD01-015,4xGD01-099,4xGD01-124' },\r\n            { name: 'Witch from Mercury', card: 'GD01-070', list: '5xST01-007,5xST01-008,5xST01-011,5xST01-016,5xGD01-070,5xGD01-072,5xGD01-075,5xGD01-076,5xGD01-097,5xGD01-117' },\r\n            { name: 'Origin green', card: 'GD01-026_p1', list: '7xST03-007,7xST03-008,6xST03-011,7xST03-016,7xGD01-026,7xGD01-030,6xGD01-031,6xGD01-105' },\r\n            { name: 'Unicorn', card: 'GD01-005', list: '7xGD01-005,8xGD01-011,7xGD01-016,7xGD01-018,7xGD01-088,7xGD01-089,7xGD01-100' },\r\n            { name: 'Seed', card: 'ST04-001_p1', list: '5xST04-001,5xST04-002,5xST04-005,5xST04-010,5xST04-013,5xST04-015,4xGD01-068,4xGD01-077,4xGD01-081,4xGD01-118,4xGD01-120' },\r\n            { name: 'Wing', card: 'ST02-001_p1', list: '4xGD01-028,4xGD01-034,4xGD01-040,4xGD01-041,4xGD01-091,3xGD01-107,4xST02-001,4xST02-002,4xST02-005,4xST02-010,4xST02-012,4xST02-013,3xST02-015' }]\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n    },\r\n    methods: {\r\n        selectDeckList(decklist) {\r\n            if (!this.decklistPlayer1)\r\n                this.decklistPlayer1 = decklist.list;\r\n            else {\r\n                this.decklistPlayer2 = decklist.list;\r\n                this.start();\r\n            }\r\n        },\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, this.decklistPlayer1, this.decklistPlayer2);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if (this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if (!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=23b3ac82&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=23b3ac82&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23b3ac82\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.delay) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if(duration === -1) \r\n            duration = global.delay;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXB-001.webp\": 43631,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-004.webp\": 19862,\n\t\"./Gundam/cards/GD01-004_p1.webp\": 91962,\n\t\"./Gundam/cards/GD01-005.webp\": 80632,\n\t\"./Gundam/cards/GD01-008.webp\": 13406,\n\t\"./Gundam/cards/GD01-009.webp\": 39343,\n\t\"./Gundam/cards/GD01-011.webp\": 57985,\n\t\"./Gundam/cards/GD01-013.webp\": 25257,\n\t\"./Gundam/cards/GD01-015.webp\": 29370,\n\t\"./Gundam/cards/GD01-016.webp\": 24272,\n\t\"./Gundam/cards/GD01-018.webp\": 62998,\n\t\"./Gundam/cards/GD01-026.webp\": 83759,\n\t\"./Gundam/cards/GD01-026_p1.webp\": 58145,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-030.webp\": 94485,\n\t\"./Gundam/cards/GD01-031.webp\": 38537,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-068.webp\": 46040,\n\t\"./Gundam/cards/GD01-070.webp\": 45504,\n\t\"./Gundam/cards/GD01-070_p1.webp\": 85993,\n\t\"./Gundam/cards/GD01-072.webp\": 8042,\n\t\"./Gundam/cards/GD01-075.webp\": 52313,\n\t\"./Gundam/cards/GD01-076.webp\": 85876,\n\t\"./Gundam/cards/GD01-077.webp\": 97867,\n\t\"./Gundam/cards/GD01-081.webp\": 18546,\n\t\"./Gundam/cards/GD01-088.webp\": 14026,\n\t\"./Gundam/cards/GD01-088_p1.webp\": 68437,\n\t\"./Gundam/cards/GD01-089.webp\": 27418,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-097.webp\": 34893,\n\t\"./Gundam/cards/GD01-099.webp\": 49483,\n\t\"./Gundam/cards/GD01-100.webp\": 93330,\n\t\"./Gundam/cards/GD01-100_p1.webp\": 92990,\n\t\"./Gundam/cards/GD01-105.webp\": 67155,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/GD01-107_p1.webp\": 60768,\n\t\"./Gundam/cards/GD01-117.webp\": 79955,\n\t\"./Gundam/cards/GD01-118.webp\": 70779,\n\t\"./Gundam/cards/GD01-118_p1.webp\": 57707,\n\t\"./Gundam/cards/GD01-120.webp\": 90273,\n\t\"./Gundam/cards/GD01-124.webp\": 8279,\n\t\"./Gundam/cards/R-001.webp\": 96567,\n\t\"./Gundam/cards/R-002.webp\": 38857,\n\t\"./Gundam/cards/ST01-001.webp\": 16906,\n\t\"./Gundam/cards/ST01-001_p1.webp\": 6864,\n\t\"./Gundam/cards/ST01-002.webp\": 23582,\n\t\"./Gundam/cards/ST01-005.webp\": 7162,\n\t\"./Gundam/cards/ST01-007.webp\": 56694,\n\t\"./Gundam/cards/ST01-008.webp\": 70791,\n\t\"./Gundam/cards/ST01-010.webp\": 45022,\n\t\"./Gundam/cards/ST01-011.webp\": 56581,\n\t\"./Gundam/cards/ST01-011_p1.webp\": 1978,\n\t\"./Gundam/cards/ST01-012.webp\": 13866,\n\t\"./Gundam/cards/ST01-013.webp\": 79915,\n\t\"./Gundam/cards/ST01-015.webp\": 51310,\n\t\"./Gundam/cards/ST01-016.webp\": 86882,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-001_p1.webp\": 76074,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./Gundam/cards/ST03-007.webp\": 82235,\n\t\"./Gundam/cards/ST03-008.webp\": 55340,\n\t\"./Gundam/cards/ST03-011.webp\": 56486,\n\t\"./Gundam/cards/ST03-011_p1.webp\": 92329,\n\t\"./Gundam/cards/ST03-016.webp\": 77816,\n\t\"./Gundam/cards/ST04-001.webp\": 22859,\n\t\"./Gundam/cards/ST04-001_p1.webp\": 46858,\n\t\"./Gundam/cards/ST04-002.webp\": 18971,\n\t\"./Gundam/cards/ST04-005.webp\": 54511,\n\t\"./Gundam/cards/ST04-010.webp\": 80363,\n\t\"./Gundam/cards/ST04-013.webp\": 14005,\n\t\"./Gundam/cards/ST04-015.webp\": 81633,\n\t\"./Gundam/cards/T-001.webp\": 32442,\n\t\"./Gundam/cards/T-002.webp\": 46514,\n\t\"./Gundam/cards/T-003.webp\": 88739,\n\t\"./Gundam/cards/T-006.webp\": 17071,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","game","deckList","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize1em","textVerticalCenter","bgYellow2","style","getFieldStyle","grid","centerMini","card2","x","y","_e","text","textEffect","position","domProps","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","GameGundamEffect","static","cards","removeEndTurn","forEach","lost","fx","effect","push","global","log","join","player","card1","trigger","effectsRemainings","getEffectsRemaining","length","map","getEffectText","delay","isShowingEffect","cardHighlight","find","index","gameTask","addTasks","tasks","id","taskRefreshField","isPlayer1","taskTextHide","taskTextDelete","apply","taskCardsToMiniCenter","concat","stop","result","toString","value","target","effect2","ap","hp","multiTriggers","onpair","onlink","effects","includes","effectsRemaining","nothing","toBeRemoved","applyEffect","oneTurn","alert","logEffect","JSON","stringify","shield","splice","location","positions","taskMove","to","locationHand","cardChoice","getAndRemoveFirst","deck","taskPopup","select","bottomCard","popup","deletePopup","base","level","effectClone","clone","taskCardToCenter","move","locationShield","locationField","cancel","refreshHandOpponent","taskPlayCard","zone","field","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","targets","hand","attribute","canAttack","onplay","attackActiveEnnemy","immuneAp","_defineProperty","locationEmpty","locationDeck","locationBase","locationResource","locationPair","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnIfNot","addIn","player1","player2","zindex","from","getLocationArrayProperty","removeByIndex","end","isTemporaryCard","active","hidestat","locationTrash","pair","isPaired","needToRefreshAllField","cardUnit","isCardUnit","cardPilot","isCardPilot","isLink","effectResult","handleEffects","message","getNextIndex","degree","rotation","array","list","slice","sort","Math","random","actionPlayer","actionOpponent","type","isCardCommand","logs","obj","Object","assign","needTaskEndRefresh","task","isEqual","task1","task2","taskid","reverse","t","refresh","wait","taskEndRefresh","manager","refreshFieldAndHand","showTitle","refreshOnlyTextEffect","spawnOrMove","taskCenter","addListInArrayAfterIndex","destination","card3","taskTextShow","center","taskAttack","attack","opponent","attacker","cardPlayer","getPlayer","playCard","regularPlay","positioner","border","border2","divide","widthB","heightB","boxbig","getCardSize","cardHeightPercent","card6","min","createZone","x15","y8","y7","y9","y6","y10","y5","trash","y11","y4","resource","y12","y3","y13","x1","y0","x14","x2","y1","y2","show","p1","p2","useZoneSize","wrapCut","zoneHeight","cardSize","bgposition","getWrapPosition","getPairPosition","count","desiredWidth","desiredHeight","total","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","sizeWidth","gameManager","decklistPlayer1","decklistPlayer2","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","decklist","split","line","info","quantity","parseInt","Error","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","playerId","taskTitleShow","taskMoveAndShowCenter","handleTasks","endAnimation","positionDrag","positionOld","selectChoiceCard","selectChoice","cardPlay","isSamePlayer","wrongCost","cost","sendBack","playCost","isPilot","isCommand","pilotOrCommand","askPilotOrCommand","playCardCost","isCardBase","sendCardBackToSquareOne","taskPairCard","command","costRemaining","max","choices","cardAttack","getPlayerTurnOpponent","blockers","block","selectedAsBlocker","blocker","isValidTarget","startAttackAnimation","setActive","burst","battle","damage","activeBreach","dead","delayForTarget","cardHandler","isCostAvailable","isTurnPlayer","noDropZone","playFromHand","attackCard","getDeckListBySerie","createUniqueRare","createDefaultBase","playerOpponent","rareKeyWord","rareCards","replace","rareCard","firstCard","getPlayerTurn","removeOneTurnEffect","baseText","number","cardsToRemoveIndex","setSelectable","play","startsWith","doMuligan","removeIds","top","transform","cursor","$emit","h100p","folder","preventDefault","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","selectDeckList","start","gundamManager","breakpoint","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}