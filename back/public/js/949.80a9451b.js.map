{"version":3,"file":"js/949.80a9451b.js","mappings":"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","sources":["webpack://front/./src/games/dragDropArrow.vue","webpack://front/./src/games/arrowDiv.vue","webpack://front/src/games/arrowDiv.vue","webpack://front/./src/games/arrowDiv.vue?cb92","webpack://front/./src/games/arrowDiv.vue?dbad","webpack://front/src/games/dragDropArrow.vue","webpack://front/./src/games/dragDropArrow.vue?0b04","webpack://front/./src/games/dragDropArrow.vue?32c4","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effectsLuncher.js","webpack://front/./src/games/gundam/effectsTarget.js","webpack://front/./src/games/gundam/mainEffects.js","webpack://front/./src/games/gundam/positioner.js","webpack://front/./src/games/gundam/selectable.js","webpack://front/./src/games/gundam/cardAction.js","webpack://front/./src/games/gundam/conditions.js","webpack://front/./src/games/gundam/cardMove.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/refresh.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/gundam/attack.js","webpack://front/./src/games/gundam/setup.js","webpack://front/./src/games/gundam/popup.js","webpack://front/./src/games/gundam/tasks.js","webpack://front/./src/games/gundam/utils.js","webpack://front/./src/games/gundam/show.js","webpack://front/./src/games/gundam/turn.js","webpack://front/./src/games/gundam/tuto.js","webpack://front/./src/games/gundam/pair.js","webpack://front/./src/games/gundam/ai.js","webpack://front/./src/games/gundam/aiCombos.js","webpack://front/./src/games/gundam/aiPlay.js","webpack://front/./src/games/gundam/aiStrategy.js","webpack://front/./src/games/gundam/game.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/bananaBars.vue","webpack://front/src/games/bananaBars.vue","webpack://front/./src/games/bananaBars.vue?3eed","webpack://front/./src/games/bananaBars.vue?f664","webpack://front/./src/games/deckIcon.vue","webpack://front/src/games/deckIcon.vue","webpack://front/./src/games/deckIcon.vue?7bc4","webpack://front/./src/games/deckIcon.vue?4c83","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/Gundam/ sync ^\\.\\/.*$","webpack://front/./src/assets/ sync ^\\.\\/.*empty\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nodrag\"},[_vm._l((_vm.sources),function(point,index){return _c('div',{key:'source' + index,class:{ absolute: 1, pointCircle: 1, colorYellow: point.show },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }),attrs:{\"id\":'source' + index},on:{\"mousedown\":function($event){return _vm.drag(point)},\"click\":function($event){return _vm.$emit('click', point)}}})}),_c('div',{style:({ display: _vm.source ? '' : 'none' })},[_vm._l((_vm.targets.filter(x => x)),function(point,index){return _c('div',{key:'target' + index},[_c('div',{class:{ absolute: 1, pointCircle: 1, colorYellow: _vm.target != point, colorGreen: _vm.target == point },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 })}),_c('div',{staticClass:\"absolute text-center textVerticalCenter text-shadow-black colorWhite\",style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 })},[_c('div',[_vm._v(_vm._s(point.text))])])])}),_c('div',{style:({ 'pointer-events': 'none' })},[_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow0' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow1' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1)])],2)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p h100p relative\"},[_c('div',{staticClass:\"arrow absolute\",style:({ top: '0px', left: '0px', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '15%', left: '15%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '30%', left: '30%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '45%', left: '45%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '60%', left: '60%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '75%', left: '75%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"w100p h100p relative\">\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '0px', left: '0px', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '15%', left: '15%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '30%', left: '30%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '45%', left: '45%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '60%', left: '60%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '75%', left: '75%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'arrow-div',\r\n    props: ['color']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./arrowDiv.vue?vue&type=template&id=135b1d42&scoped=true&\"\nimport script from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nexport * from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nimport style0 from \"./arrowDiv.vue?vue&type=style&index=0&id=135b1d42&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"135b1d42\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"nodrag\">\r\n        <div v-for=\"(point, index) in sources\" :key=\"'source' + index\" :id=\"'source' + index\"\r\n            :class=\"{ absolute: 1, pointCircle: 1, colorYellow: point.show }\"\r\n            :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }\"\r\n            @mousedown=\"drag(point)\" @click=\"$emit('click', point)\">\r\n        </div>\r\n\r\n        <div :style=\"{ display: source ? '' : 'none' }\">\r\n            <div class=\"\" v-for=\"(point, index) in targets.filter(x => x)\" :key=\"'target' + index\">\r\n                <div :class=\"{ absolute: 1, pointCircle: 1, colorYellow: target != point, colorGreen: target == point }\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }\">\r\n                </div>\r\n                <div class=\"absolute text-center textVerticalCenter text-shadow-black colorWhite\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }\">\r\n                    <div>{{ point.text }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div :style=\"{ 'pointer-events': 'none' }\">\r\n                <div :id=\"'arrow0' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n                <div :id=\"'arrow1' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport arrowDiv from './arrowDiv.vue';\r\n\r\nexport default {\r\n    name: 'drag-drop-arrow',\r\n    props: ['id', 'sources', 'freeze'],\r\n    components: { arrowDiv },\r\n    data: () => ({\r\n        delay: 1500,\r\n        animations: [],\r\n        mouse: { x: 0, y: 0 },\r\n        color: \"red\",\r\n        targets: [],\r\n        source: null,\r\n        target: null\r\n    }),\r\n    watch: {\r\n        sources() { this.resetSources(); }\r\n    },\r\n    mounted() {\r\n        window.addEventListener('mousemove', this.updateMouse);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('touchmove', this.updateMouse);\r\n        window.addEventListener('touchend', this.mouseUp);\r\n        this.resetSources();\r\n    },\r\n    beforeUnmount() {\r\n        window.removeEventListener('mousemove', this.updateMouse);\r\n        window.removeEventListener('mouseup', this.mouseUp);\r\n        window.removeEventListener('touchmove', this.updateMouse);\r\n        window.removeEventListener('touchend', this.mouseUp);\r\n    },\r\n    methods: {\r\n        updateMouse(e) {\r\n            const touch = e && e.touches && e.touches.length > 0 ? e.touches[0] : {};\r\n            this.mouse.x = e.clientX ? e.clientX : touch.clientX;\r\n            this.mouse.y = e.clientY ? e.clientY : touch.clientY;\r\n            this.updateAnimation();\r\n        },\r\n        resetSources() {\r\n            this.sources.forEach((point, index) => {\r\n                const element = document.getElementById(\"source\" + index);\r\n                element?.addEventListener('touchstart', () => this.drag(point));\r\n            });\r\n            this.animate();\r\n        },\r\n        drag(point) {\r\n            if (this.freeze)\r\n                return;\r\n            this.source = point;\r\n            this.targets = this.source.targets;\r\n            this.animate();\r\n        },\r\n        mouseUp() {\r\n            if (!this.source || !this.animations || this.animations.length < 1 || this.freeze)\r\n                return;\r\n            this.$emit('drop', { mouse: this.mouse, source: this.source, target: this.target });\r\n            this.source = null;\r\n        },\r\n        animate() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            this.updateAnimation();\r\n\r\n            helperAnimation.animateMultiple(this.animations, this.delay - 5);\r\n            setTimeout(() => {\r\n                this.animate();\r\n            }, this.delay + 15);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n        updateAnimation() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            if (!this.animations || this.animations.length < 1) {\r\n                this.animations = [\r\n                    this.createAnimation('arrow0' + this.id, false),\r\n                    this.createAnimation('arrow1' + this.id, true)\r\n                ];\r\n            }\r\n\r\n            this.target = this.targets.find(box => this.isInside(this.mouse.x, this.mouse.y, box));\r\n\r\n            this.color = this.target ? 'green' : 'red';\r\n            const from = { x: this.source.x + (this.source.width / 2), y: this.source.y + (this.source.height / 2) };\r\n            const destination = !this.target ? this.mouse\r\n                : { x: this.target.x + (this.target.width / 2), y: this.target.y + (this.target.height / 2) };\r\n\r\n            this.animations.forEach(animation => {\r\n                const rotation = this.getAngleDeg(from, destination) + 135;\r\n                const width = this.target ? 75 : 75;\r\n                const widthHalf = width / 2\r\n                animation.from.x = from.x;\r\n                animation.from.y = from.y;\r\n                animation.from.rotation = rotation;\r\n                animation.to.rotation = rotation;\r\n                animation.to.x = destination.x;\r\n                animation.to.y = destination.y;\r\n                animation.mid.x = (animation.from.x + (animation.to.x - animation.from.x) / 2) - widthHalf;\r\n                animation.mid.y = (animation.from.y + (animation.to.y - animation.from.y) / 2) - widthHalf;\r\n            });\r\n        },\r\n        createAnimation(id, delay) {\r\n            const width = this.target ? 75 : 75;\r\n            const from = {\r\n                opacity: 1,\r\n                width: 5,\r\n                height: 5\r\n            };\r\n            const mid = {\r\n                opacity: 1,\r\n                width,\r\n                height: width\r\n            };\r\n\r\n            const to = {\r\n                opacity: 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            return { id, from, mid, to, delay, isIncrement: false };\r\n        },\r\n        getAngleDeg(source, target) {\r\n            const angleRad = Math.atan2(target.y - source.y, target.x - source.x);\r\n            return angleRad * (180 / Math.PI);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dragDropArrow.vue?vue&type=template&id=24ad1ef2&\"\nimport script from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nexport * from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dragDropArrow.vue?vue&type=style&index=0&id=24ad1ef2&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p mask bg2\",staticStyle:{\"height\":\"100dvh\"}},[(_vm.game)?_c('span',[_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer2))}),_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.centerZoneP2))}),_c('div',{staticClass:\"absolute bg2\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer1))}),_c('div',{staticClass:\"absolute diagonal-split\",style:(_vm.getFieldStyleObj(_vm.game.grid.resources))}),_c('div',{staticClass:\"absolute text-center textVerticalCenter fontSize075em\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.resources), transform: 'rotate(-45deg)' })},[_vm._v(\" Resources \")]),_c('banana-bars',{style:(_vm.getFieldStyleObj(_vm.game.grid.resources)),attrs:{\"p1yellow\":_vm.game.player1.resourcesAvailable - _vm.game.player1.resourcesEx,\"p1blue\":_vm.game.player1.resourcesEx,\"p1max\":_vm.game.player1.resourcesMax,\"p2yellow\":_vm.game.player2.resourcesAvailable - _vm.game.player2.resourcesEx,\"p2blue\":_vm.game.player2.resourcesEx,\"p2max\":_vm.game.player2.resourcesMax,\"max\":_vm.game.resourcesMax,\"width\":_vm.game.grid.resources.width}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player1.deck.length,\"icon\":_vm.game.player1.deckIcon},on:{\"click\":function($event){return _vm.showLocationCards('deck', true)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player1.trash.length,\"icon\":_vm.game.player1.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', true)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player1.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player1.shield.length,\"icon\":_vm.game.player1.shieldIcon},on:{\"click\":function($event){return _vm.showLocationCards('shield', true)}}}),(_vm.game)?_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Hand))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Field))}):_vm._e(),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player2.deck.length,\"icon\":_vm.game.player2.deckIcon},on:{\"click\":function($event){return _vm.showLocationCards('deck', false)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player2.trash.length,\"icon\":_vm.game.player2.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', false)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player2.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player2.shield.length,\"icon\":_vm.game.player2.shieldIcon},on:{\"click\":function($event){return _vm.showLocationCards('shield', false)}}}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Field))}),_c('div',{staticClass:\"absolute vertical-scroll\",style:(_vm.getFieldStyleObj(_vm.game.grid.logZone)),domProps:{\"innerHTML\":_vm._s(_vm.game.logs)}}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.textZone))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardCenter))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardLeft))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardRight))}),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEffect))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze && _vm.game.player1.hasEffects, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.useEffect}},[_c('span',[_vm._v(\"Use\"),_c('br'),_vm._v(\"Effect\")])])],1),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEndTurn))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[(_vm.game.grid.buttonEndTurn.width > 50)?_c('span',[_vm._v(\"End\"),_c('br'),_vm._v(\"Turn\")]):_c('span',[_vm._v(\"End\")])])],1),_c('div',{staticClass:\"absolute fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonLogs))},[_c('v-btn',{class:{ bg2: true, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" Logs \")])],1)],1):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat},on:{\"click\":function($event){return _vm.showCard(card)}}})],1)}),_c('drag-drop-arrow',{attrs:{\"id\":\"0\",\"sources\":_vm.sources,\"targets\":_vm.targets,\"freeze\":_vm.freeze || _vm.game?.popup},on:{\"drop\":_vm.dropPoint,\"click\":_vm.clickDrop}}),(_vm.game && _vm.game.popup)?_c('div',{staticClass:\"absolute w100p h100p m5px\",staticStyle:{\"top\":\"0px\",\"display\":\"flex\",\"overflow\":\"hidden\",\"flex-direction\":\"column\",\"z-index\":\"80\"}},[_c('div',{staticClass:\"flex-grow\",staticStyle:{\"min-height\":\"10%\"}}),_c('div',{staticClass:\"w100p\"},[_c('div',{staticClass:\"flex flex-wrap w100p\",staticStyle:{\"justify-content\":\"center\"}},[_c('v-btn',{staticClass:\"m10px\",staticStyle:{\"background-color\":\"#FFFF00F0\"},on:{\"click\":function($event){return _vm.showOrHidePopup(false)}}},[(_vm.popupShow)?_c('span',[_vm._v(\"Hide Popup\")]):_c('span',[_vm._v(\"Show Popup\")])]),_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('div',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)})],2)]),(_vm.popupShow)?_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"overflow-y\":\"auto\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),(_vm.game?.popup.cards && _vm.game?.popup.cards.length > 0)?_c('div',{staticClass:\"flex-wrap w100p horizontal-scroll\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\",style:({ width: _vm.game?.grid.card100.height + 'px' })},[_c('div',{staticClass:\"text-center colorBlack\"},[_vm._v(_vm._s(card.location)+\" P\"+_vm._s(card.isPlayer1 ? '1' : '2')+\" \")]),_c('img',{style:({ width: _vm.game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0):_vm._e()]):_vm._e()]):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyleObj(_vm.game.grid.textZone), 'z-index': 11, height: 0\n        }),attrs:{\"id\":\"divTextEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.text)}})]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",style:({ top: '80px', width: '100%', height: '0px', 'z-index': 13 }),attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"70\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),(_vm.game && _vm.game.showTextTuto)?_c('div',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.showTextTuto), 'z-index': 170 })},[_c('div',{staticClass:\"w100p h100p bg3 flex\",staticStyle:{\"flex-direction\":\"column\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.game.showTextTuto.text))]),_c('div',{staticClass:\"m5px bg\",staticStyle:{\"align-self\":\"flex-end\"}},[_c('v-btn',{on:{\"click\":_vm.tutoNext}},[_vm._v(\"Next\")])],1)])]):_vm._e(),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\"}})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class effectsLuncher {\r\n    static trigger_onplay = 'onplay';\r\n    static trigger_onpair = 'onpair';\r\n    static trigger_onlink = 'onlink';\r\n    static trigger_refresh = 'refresh';\r\n    static trigger_battle = 'battle';\r\n    static trigger_burst = 'burst';\r\n    static trigger_command = 'command';\r\n    static trigger_action = 'action';\r\n    static trigger_ondestroyed = 'ondestroyed';\r\n    static trigger_end = 'end';\r\n    static trigger_turn = 'turn';\r\n    static trigger_end = 'end';\r\n    static trigger_main = 'main';\r\n\r\n    static lunchEffectTriggerMultiple(cards, trigger) {\r\n        let isEffectExisting = false;\r\n        cards.forEach(card1 => {\r\n            const result = this.lunchEffectTriggerForOneCard(card1, trigger);\r\n            isEffectExisting = isEffectExisting || result.isEffectExisting;\r\n        });\r\n        return isEffectExisting;\r\n    }\r\n\r\n    static lunchEffectTriggerForOneCard(card1, trigger) {\r\n        const result = { isEffectExisting: false };\r\n        const effects = this.getEffects(card1, trigger);\r\n        if (!effects || effects.length < 1)\r\n            return result;\r\n\r\n        result.isEffectExisting = true;\r\n        result.cancelMoveToTrash = this.getCancelMoveToTrash(effects);\r\n        this.addTaskFirst({ id: this.applyEffectCard.name, card1, trigger });\r\n\r\n        return result;\r\n    }\r\n\r\n    static lunchEffectTriggerForTwoCard(card1, card2, trigger) {\r\n        const isExistingCard1Effect = this.getEffects(card1, trigger);\r\n        const isExistingCard2Effect = this.getEffects(card2, trigger);\r\n        if (!isExistingCard1Effect && !isExistingCard2Effect)\r\n            return false;\r\n\r\n        const tasks = [];\r\n\r\n        if (isExistingCard1Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        if (isExistingCard2Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1: card2, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        this.addTasksFirst(tasks);\r\n        return tasks.length > 0;\r\n    }\r\n\r\n    static getEffects(card, trigger, ignorePair) {\r\n        let result = [];\r\n        if (!card || !card.effects)\r\n            return result;\r\n\r\n        result = card.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card } });\r\n\r\n        if (!ignorePair && card.pair && card.pair.effects)\r\n            result = result.concat(card.pair.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card: card.pair } }));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getCancelMoveToTrash(effects) {\r\n        const effectsThatCancelMoveToTrash = [this.sendToHand.name, this.deploy.name];\r\n        return effects.find(effect => effectsThatCancelMoveToTrash.includes(effect.id)) ? true : false;\r\n    }\r\n\r\n    static applyEffectCard(game, task) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        const effects = this.getEffects(task.card1, task.trigger, true);\r\n        if (effects.length > 0) {\r\n            const text = effects.map(fx => this.getEffectText(fx)).join('<br>');\r\n            let tasks = [];\r\n            let tasksDelay = [];\r\n            const show = effects.filter(fx => !fx.hide).length > 0;\r\n\r\n            if (show)\r\n                tasks.push({ ...task, id: this.showCardsEffect.name, text, delay:this.delay*2 });\r\n\r\n            tasks = tasks.concat(effects.map(effect => { return { ...task, id: this.applyEffect.name, effect }; }));\r\n            tasksDelay = tasks.filter(x => x.effect && x.effect.delay);\r\n            tasks = tasks.filter(x => !x.effect || !x.effect.delay);\r\n\r\n            if (tasks.length > 0) this.addTasksFirst(tasks);\r\n            if (tasksDelay.length > 0) this.addTasks(tasksDelay);\r\n        }\r\n\r\n        if (task.card1.pair)\r\n            this.applyEffectCard(game, { ...task, card1: task.card1.pair });\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if (effect.effects)\r\n            result = result.concat(effect.effects.map(x => this.getEffectText(x)).join(', '));\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static removeOneTurnEffect(game) {\r\n        game.incruises = game.incruises.filter(x => !x.removeEndTurn);\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.incruises = player.incruises.filter(x => !x.removeEndTurn);\r\n            player.field.forEach(card => {\r\n                card.incruises = card.incruises.filter(x => !x.removeEndTurn);\r\n                this.recalculateApHp(game, player, card);\r\n            });\r\n        });\r\n\r\n        game.cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            card.removeEndTurn = [];\r\n            this.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static applyEffect(game, task, player, opponent) {\r\n        const targetResult = this.handleEffectTarget(game, task, player, opponent);\r\n        if (targetResult.stop || targetResult.end)\r\n            return targetResult;\r\n\r\n        if (!this.isEffectMatchConditions(game, task, player, opponent))\r\n            return {};\r\n\r\n        if (task.effect.cost) {\r\n            if (player.resourcesAvailable < task.effect.cost) {\r\n                this.log(`Can't play ${task.effect.card.name} because cost can't be played : ${task.effect.cost}`);\r\n                return {};\r\n            }\r\n\r\n            this.playCardCost(player, task.effect.cost);\r\n        }\r\n\r\n        if (task.effect.oneTurn)\r\n            task.card2.removeEndTurn = !task.card2.removeEndTurn ? [task.effect]\r\n                : task.card2.removeEndTurn.concat([task.effect]);\r\n\r\n        task.isConditionsAfterRespected = this.isConditionsAfterRespected(game, task, player, opponent);\r\n        if (task.card2)\r\n            task.card2.fx = task.isConditionsAfterRespected;\r\n\r\n        if (task.effect.rest)\r\n            this.setActive(game, task.effect.card, false);\r\n\r\n        return this[task.effect.id](game, task, player, opponent);\r\n    }\r\n}\r\n\r\n\r\nexport default effectsLuncher;\r\n","class effectsTarget {\r\n\r\n    static handleEffectTarget(game, task, player, opponent) {\r\n        if (task.effect.target) {\r\n            if (task.choice)\r\n                return { end: true };\r\n            else if (!task.cardChoice)\r\n                return this.popupTargetCards(game, task, player, opponent);\r\n            else\r\n                task.card2 = task.cardChoice;\r\n        }\r\n\r\n        if (!task.card2 && task.effect.card.pairedWith)\r\n            task.cardUnit = game.cards.find(x => x.index === task.effect.card.pairedWith);\r\n\r\n        if (!task.card2 && task.cardUnit)\r\n            task.card2 = task.cardUnit;\r\n\r\n        if (!task.card2)\r\n            task.card2 = task.effect.card;\r\n\r\n        return {};\r\n    }\r\n\r\n    static popupTargetCards(game, task, player, opponent) {\r\n        let cards = [];\r\n        if (task.effect.target === 'opponentUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value);\r\n\r\n        else if (task.effect.target === 'opponentActiveUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value && x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnitRested')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && !x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnit')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnit')\r\n            cards = player.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnitBlocker')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hadBlocker(x));\r\n\r\n        else if (task.effect.target === 'playerCardById')\r\n            cards = player.hand.filter(x => x.id === task.effect.targetId);\r\n\r\n        else if (task.effect.target === 'playerUnitWithAttribute')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && x.attribute.includes(task.effect.targetAttribute));\r\n\r\n        else if (task.effect.target === 'playerUnitWithEffect')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hasEffect(x, task.effect.effect));\r\n\r\n        else if (task.effect.target === 'unit')\r\n            throw new Error(\"Can't handle this tast target : 'unit'\");\r\n\r\n        if (cards.length < 1) {\r\n            this.log(`Can't play ${task.effect.card.name} (${task.effect.id}) because there is no target available`);\r\n            return { end: true };\r\n        }\r\n\r\n        const choices = [];\r\n        if (task.effect.optional)\r\n            choices.push({ text: 'None' });\r\n\r\n        this.game.tasks = [{\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            task,\r\n            text: 'Select available target',\r\n            choices,\r\n            cards\r\n        }].concat(this.game.tasks);\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default effectsTarget;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass mainEffects {\r\n    static handleMainEffectsCard(game, card, active) {\r\n        if (!card || !card.effects || !card.effects.find(x => x.trigger == this.trigger_main))\r\n            return;\r\n\r\n        if (active)\r\n            game.effects = game.effects.concat(card.effects.filter(fx => fx.trigger === this.trigger_main).map(fx => { return { ...fx, card, index: card.index }; }))\r\n        else\r\n            game.effects = game.effects.filter(x => x.index !== card.index);\r\n\r\n        this.refreshPlayersMainEffect(game);\r\n    }\r\n\r\n    static refreshPlayersMainEffect(game) {\r\n        game.player1.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === true).length > 0;\r\n        game.player2.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === false).length > 0;\r\n    }\r\n\r\n    static lunchMainEffectCard(game, task) {\r\n        if (!task) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name });\r\n            return game;\r\n        }\r\n\r\n        if (task.choice)\r\n            return {};\r\n\r\n        if (!task.cardChoice) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                text: `Select a main effect.`,\r\n                cards: game.effects.filter(x => x.card.isPlayer1).map(x => x.card),\r\n                task, isPlayer1: true,\r\n                choices: [{ text: 'cancel' }]\r\n            });\r\n            return { stop: true };\r\n        }\r\n\r\n\r\n        return this.lunchEffectTriggerForOneCard(task.cardChoice, this.trigger_main);\r\n    }\r\n}\r\n\r\n\r\nexport default mainEffects;\r\n","class positioner {\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createGrid(screenWidth, screenHeight) {\r\n        const grid = {};\r\n\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        grid.width = screenWidth;\r\n        grid.height = screenHeight;\r\n        grid.widthMargin = grid.width - (grid.border * 2);\r\n        grid.heightMargin = grid.height - (5 * grid.border);\r\n        grid.boxHeight = (grid.height - (grid.border * 6)) / 5.5;\r\n        grid.boxWidth = grid.boxHeight * 107 / 150;\r\n\r\n        grid.isVertical = grid.height > grid.width;\r\n\r\n        if(grid.boxWidth > grid.widthMargin / 7)\r\n            grid.boxWidth = grid.widthMargin / 7;\r\n        grid.card100 = { width: grid.boxWidth, height: grid.boxHeight };\r\n\r\n        // Player2 - Hand\r\n        let x = grid.border + grid.boxWidth, y = grid.border;\r\n        let width = grid.widthMargin / 2 - grid.boxWidth, height = grid.boxHeight / 2;\r\n        grid.player2Hand = { x, y, width, height, isPlayer1: false, location: this.locationHand };\r\n        y += grid.border + height;\r\n\r\n        // Player2 - Field\r\n        width = grid.widthMargin - grid.border - grid.boxWidth;\r\n        height = grid.boxHeight * 1.5;\r\n        grid.player2Field = { x, y, width, height, isPlayer1: false, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Center Zone\r\n        x = grid.border;\r\n        grid.centerZone = { x, y, width: grid.widthMargin, height: grid.boxHeight };\r\n        y += grid.border + grid.boxHeight;\r\n        grid.centerZoneP2= {...grid.centerZone, x:0, width: (grid.centerZone.width-100 )/2 + grid.border};\r\n\r\n        // Player1 - Field\r\n        grid.player1Field = { x, y, width, height, isPlayer1: true, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Player1 - Hand\r\n        height = grid.boxHeight;\r\n        grid.player1Hand = { x, y, width, height, isPlayer1: true, location: this.locationHand };\r\n\r\n        if(grid.isVertical)\r\n            this.createVerticalGrid(grid);\r\n        else\r\n            this.createHorizontalGrid(grid);\r\n\r\n        grid.player1Field.cardSizeReduce=true;\r\n        grid.player2Field.cardSizeReduce=true;\r\n\r\n        // Buttons\r\n        x = grid.player1Deck.x;\r\n        y = grid.player1Trash.y + grid.player1Trash.height + grid.border;\r\n        height = (grid.height - grid.border2 - y) / 2;\r\n        width = grid.isVertical ? grid.boxWidthVertical : grid.boxWidth;\r\n        grid.buttonEffect = { x, y, width, height };\r\n        y += height + grid.border;\r\n        grid.buttonEndTurn = { x, y, width, height };\r\n\r\n        width = 50;\r\n        x = grid.widthMargin - width;\r\n        y = grid.border;\r\n        height = grid.player2Hand.height;\r\n        grid.buttonLogs = { x, y, width, height };\r\n        \r\n        width = grid.boxHeight;\r\n        height = grid.boxHeight;\r\n        grid.resources = { x: (grid.width / 2) - (width / 2), y: grid.centerZone.y, width, height };\r\n\r\n        grid.halfPlayer1 = { x: 0, y: grid.player1Field.y, width: grid.width, height: grid.height / 2 };\r\n        grid.halfPlayer2 = { x: 0, y: 0, width: grid.width, height: grid.centerZone.y };\r\n\r\n        grid.centerZone.heightQuarter = grid.centerZone.height / 5;\r\n\r\n        // Highlight center cards\r\n        grid.textZone = { ...grid.player2Hand, width: grid.width - grid.border2 };\r\n        grid.logZone = { ...grid.player2Hand, x: grid.width / 2 + grid.border };\r\n        grid.highlightCardCenter = { y: grid.player2Field.y, height: grid.height - grid.player2Field.y };\r\n        grid.highlightCardLeft = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 2, 1), y: grid.highlightCardCenter.y };\r\n        grid.highlightCardRight = { ...grid.highlightCardLeft, x: grid.highlightCardLeft.x + grid.highlightCardLeft.width };\r\n        grid.highlightCardCenter = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 1, 1), y: grid.highlightCardCenter.y };\r\n\r\n        // Drop Points\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Field.drop = {\r\n            x: grid.player1Field.x + (grid.player1Field.width / 2) - (width /2),\r\n            y: grid.player1Field.y + (grid.player1Field.height / 2) - (height /2),\r\n            width, height, text:'Play'\r\n        }\r\n        grid.player2Field.drop = {\r\n            x: grid.player2Field.x + (grid.player2Field.width / 2) - (width /2),\r\n            y: grid.player2Field.y + (grid.player2Field.height / 2) - (height /2),\r\n            width, height, text:'Attack'\r\n        }\r\n\r\n        return grid;\r\n    }\r\n\r\n    static createVerticalGrid(grid){\r\n        grid.boxWidthVertical = (grid.widthMargin - (8* grid.border)) / 6;\r\n        grid.boxHeightVertical = grid.boxWidthVertical * 150/107;\r\n\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidthVertical;\r\n        let height = grid.boxHeightVertical;\r\n\r\n        // Player1 - Shield\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player1 - Deck\r\n        x = grid.player1Shield.x;\r\n        y += height + grid.border;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n\r\n        // Player1 - Trash\r\n        y += height + grid.border;\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = y - height - grid.border;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n\r\n        // Player2 - Trash\r\n        y = y - height - grid.border;\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n    }\r\n\r\n    static createHorizontalGrid(grid){\r\n        // Player1 - Deck\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidth;\r\n        let height = grid.boxHeight;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Trash\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x - width - grid.border;\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = grid.centerZone.y;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Trash\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x + width + grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = this.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.15);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        let x = (width - desiredWidth) / 2;\r\n        let y = (height - desiredHeight) / 2;\r\n\r\n        if (count > 1) {\r\n            x = (width - (count * desiredWidth)) / 2;\r\n        }\r\n\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n\r\n        const totalCards = centerEmptyZone ? total + 1 : total;\r\n        const cardSizeModified = centerEmptyZone ? this.getCardSize(position.width, zoneHeight, totalCards, position.cardHeightPercent) : cardSize;\r\n        let mid = Math.floor(totalCards / 2);\r\n        const indexModified = centerEmptyZone && index >= mid ? index + 1 : index;\r\n        if (totalCards < wrapCut || position.height < cardSizeModified.height * 2)\r\n            return this.getCardPositionXY(position, cardSizeModified, totalCards, indexModified, degree);\r\n\r\n        mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, zoneHeight / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","class selectable {\r\n    static setSelectable(game, player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = game.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (this.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n\r\n    static setSelectableFalse() {\r\n        this.game.cards.forEach(card => card.selectable = false);\r\n    }\r\n}\r\n\r\n\r\nexport default selectable;\r\n","class cardAction {    \r\n    static noActionCard = 'no action card';\r\n\r\n    static askForActionCards(game, task, player, opponent) {\r\n        let result = this.askForActionCardsForThisPlayer(game, task, 'actionCardOpponent', opponent);\r\n        if(result.stop)\r\n            return result;\r\n\r\n        return this.askForActionCardsForThisPlayer(game, task, 'actionCardPlayer', player);\r\n    }\r\n\r\n    static askForActionCardsForThisPlayer(game, task, property, player) {        \r\n        if (task[property]) \r\n            return {};\r\n\r\n        if (task.choice && task.choice.text === this.noActionCard){\r\n            task[property] = task.choice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return {};\r\n        }\r\n\r\n        if (task.cardChoice) {\r\n            this.playCardCost(player, task.cardChoice.cost);\r\n            this.addTasksFirst([\r\n                { id: this.applyEffectCard.name, card1: task.cardChoice, trigger: this.trigger_action, taskAttack:task},\r\n                { id: this.move.name, card1: task.cardChoice, to: this.locationTrash }\r\n            ]);\r\n            task[property] = task.cardChoice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return { stop: true };\r\n        }\r\n        \r\n        const actionCard = player.hand.filter(x => x.effects && x.effects.find(fx => fx.trigger === this.trigger_action) && x.cost <= player.resourcesAvailable);\r\n        if (actionCard.length > 0) {\r\n            const playerIndex = player.isPlayer1 ? '1' : '2';\r\n            game.tasks = [{\r\n                id: this.popup.name,\r\n                text: `Select an action card for player ${playerIndex} ?`,\r\n                cards: actionCard,\r\n                task,  isPlayer1:player.isPlayer1,\r\n                choices: [{ text: this.noActionCard }]\r\n            }].concat(game.tasks);\r\n            return { stop: true };\r\n        }\r\n        \r\n        task[property] = { text: this.noActionCard };\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default cardAction;\r\n","class conditions {\r\n    static isEffectMatchConditions(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditions);\r\n    }\r\n\r\n    static isConditionsAfterRespected(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditionsAfter);\r\n    }\r\n\r\n    static isConditionsRespected(game, task, player, opponent, conditions) {\r\n        if (!conditions || conditions.length < 1)\r\n            return true;\r\n\r\n        let result = true;\r\n        conditions.forEach(condition => {\r\n            if (!result)\r\n                return result;\r\n\r\n            if (condition.id === 'unitHas')\r\n                result = result && this.hasEffect(task.card2, condition.value);\r\n\r\n            else if (condition.id === 'isInHand')\r\n                result = result && task.card2.location === this.locationHand;\r\n\r\n            else if (condition.id === 'isInField')\r\n                result = result && task.card2.location === this.locationField;\r\n\r\n            else if (condition.id === 'isPlayerTurn')\r\n                result = result && game.isPlayer1 === player.isPlayer1;\r\n\r\n            else if (condition.id === 'pilotLevelMin')\r\n                result = result && task.cardPilot && task.cardPilot.level >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXUnitsWithAttribute')\r\n                result = result && player.field.filter(card => this.isCardUnit(card) && this.hasAttribute(card, condition.attribute)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCommandInTrash')\r\n                result = result && player.trash.filter(card => this.isCardCommand(card)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCardsOpponentHand')\r\n                result = result && opponent.hand.length >= condition.value;\r\n\r\n            else if (condition.id === 'pilotHasAttribute')\r\n                result = result && task.cardPilot && this.hasAttribute(task.cardPilot, condition.value);\r\n\r\n            else if (condition.id === 'maximumXUnitsOnField')\r\n                result = result && player.field.length <= condition.value;\r\n\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default conditions;\r\n","class cardMove {\r\n\r\n    static spawnOrMove(game, task, player) {\r\n        const cardSpawn = this.moveCard(game, player, task.card1, task.from, task.to);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static move(game, task, player) {\r\n        return this.moveCard(game, player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!this.game.cards.find(x => x.index === card.index))\r\n            this.game.cards = this.addIn(this.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? this.game.player1 : this.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n        return card;\r\n    }\r\n\r\n    static moveCard(game, player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        let from = locationFrom ? locationFrom : card?.location;\r\n        from = from == \"pair\" ? null : from;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if (from)\r\n            player[from] = this.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        const onField = [this.locationField, this.locationBase];\r\n        if (!card.isTemporaryCard)\r\n            player[to] = this.addIn(player[to], card);\r\n        else {\r\n            if (onField.includes(locationTo))\r\n                player[to] = this.addIn(player[to], card);\r\n            else\r\n                card.fadeOut = true;\r\n        }\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.location = locationTo;\r\n        card.hidestat = !onField.includes(card.location);\r\n        card.verso = card.location === this.locationHand && !card.isPlayer1 && !card.pairedWith && !card.pair;\r\n\r\n        this.handleMainEffectsCard(game, card, onField.includes(card.location));\r\n\r\n        if (card.pair) {\r\n            card.pair.pairedWith = null;\r\n            card.pair.link = false;\r\n            this.moveCard(game, player, card.pair, locationFrom, this.locationTrash);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [this.locationHand, this.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport default cardMove;\r\n","class cardPlay {\r\n    static play(game, task, player) {\r\n        let result = {};\r\n\r\n        if (!task.card2 && !task.zone)\r\n            result.sendBack = true;\r\n\r\n        else if (task.card1.location === this.locationHand)\r\n            result = this.playFromHand(player, task);\r\n\r\n        else if (task.card1.location === this.locationField)\r\n            result = this.prepareAttack(task, player);\r\n\r\n        else\r\n            result = this.playThisCard(player, task, false);\r\n\r\n        if (result && result.sendBack)\r\n            this.sendCardBackToSquareOne(task.card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static prepareAttack(task, player) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer || !task.card1.canAttack) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        this.addTaskPos2({ id: this.attack.name, attacker: task.card1, target: task.card2, isPlayer1: task.card1.isPlayer1, breach: null });\r\n    }\r\n\r\n    static playFromHand(player, task) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = task.regularPlay && player.resourcesAvailable < task.card1.cost;\r\n\r\n        if (!isSamePlayer || task.zone.location == this.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playThisCard(player, task, task.regularPlay);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...this.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        this.game.refresh = true;\r\n        return {};\r\n    }\r\n\r\n    static playThisCard(player, task, playCost) {\r\n        let isPilot = this.isCardPilot(task.card1);\r\n        let isCommand = this.isCardCommand(task.card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(player, task);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        this.spawnIfNot(task.card1);\r\n\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.card1, this.trigger_onplay).isEffectExisting;\r\n        if (isExisting) {\r\n            task.effectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n\r\n        if (this.isCardUnit(task.card1) && player.field.length < 6) {\r\n            task.card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationField });\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(task.card1)) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            if (player.base.length > 0)\r\n                this.addTaskPos2({ id: this.move.name, card1: player.base[0], to: this.locationTrash });\r\n\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationBase });\r\n            task.card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && task.card2 && this.isCardUnit(task.card2)) {\r\n            if (task.card1.pair || task.card2.pair || task.card1.pairedWith || task.card2.pairedWith) {\r\n                this.sendCardBackToSquareOne(task.card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.pair.name, card1: task.card1, card2: task.card2 });\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            this.addTasksPos2([\r\n                { id: this.applyEffectCard.name, card1: task.card1, card2: task.card2, trigger: this.trigger_command },\r\n                { id: this.move.name, card1: task.card1, to: this.locationTrash }\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(task.card1);\r\n    }\r\n\r\n    static playCardCost(player, cost) {\r\n        if (player.resourcesEx > 0)\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - cost);\r\n        player.resourcesAvailable -= cost;\r\n    }\r\n\r\n    static askPilotOrCommand(player, task) {\r\n        if (!task.card2 || !this.isCardPilot(task.card1) || !this.isCardCommand(task.card1))\r\n            return;\r\n\r\n        if (task.card2.pair)\r\n            task.pilotOrCommand = 'Command';\r\n\r\n        if (task.choice)\r\n            task.pilotOrCommand = task.choice.text;\r\n\r\n        if (task.pilotOrCommand) {\r\n            const isPilot = task.pilotOrCommand === 'Pilot';\r\n            const isCommand = task.pilotOrCommand === 'Command';\r\n            return { isPilot, isCommand };\r\n        }\r\n\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            text: 'Do you want to play as pilot or command ?',\r\n            choices: [{ text: 'Pilot' }, { text: 'Command' }],\r\n            task\r\n        });\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","class refresh {\r\n\r\n    static refreshFieldAndHand(game, task, player) {\r\n        this.refreshPlayerArea(player.hand, player.positions.hand, false, 7, false);\r\n        this.refreshPlayerArea(player.field, player.positions.field, false, 3, true);\r\n        this.refreshPlayerArea(player.base, player.positions.base, true);\r\n\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        game.cards = game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        this.setSelectable(game, player);\r\n\r\n        player.resource = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        player.baseIcon = 'deck6.png';\r\n        player.shieldIcon = this.getIcon(player.shield.length);\r\n        player.deckIcon = this.getIcon(player.deck.length);\r\n        player.trashIcon = this.getIcon(player.trash.length);\r\n\r\n        game.textEffect = task.textEffect;\r\n    }\r\n\r\n    static refreshPlayerArea(cards, position, useZoneSize, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.fx = false;\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut, centerEmptyZone);\r\n            card.to = this.adjustRotationSize(card.to, card.active);\r\n            card.location = position.location;\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static adjustRotationSize(to, active, percent = 0.7) {\r\n        if (active)\r\n            return to.previous ? to.previous : to;\r\n\r\n        if (to.previous)\r\n            return to;\r\n\r\n        const reverPercentHalf = (1 - percent) / 2;\r\n        const loseX = to.width * reverPercentHalf;\r\n        const loseY = to.height * reverPercentHalf;\r\n        return { ...to, previous: to, x: to.x + loseX, y: to.y + loseY, width: to.width * percent, height: to.height * percent };\r\n    }\r\n\r\n    static getIcon(length) {\r\n        return length < 1 ? 'deck6.png'\r\n            : length < 2 ? 'deck5.png'\r\n                : length < 7 ? 'deck4.png'\r\n                    : length < 15 ? 'deck3.png'\r\n                        : length < 35 ? 'deck2.png'\r\n                            : 'deck1.png';\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static resetZIndex(game) {\r\n        game.cards.forEach(card => {\r\n            card.zindex = card.pairedWith ? 1 : 2;\r\n        });\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        if (!game.triggerRefreshAlreadyDone) {\r\n            this.lunchEffectTriggerMultiple(game.cards, this.trigger_refresh);\r\n            game.triggerRefreshAlreadyDone = true;\r\n        }\r\n\r\n        this.needTaskEndRefresh = false;\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        this.cardHighlight = [];\r\n\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.field.forEach(card => this.recalculateApHp(game, player, card));\r\n            this.refreshFieldAndHand(game, {}, player);\r\n        });\r\n\r\n        this.refreshDragAndDrop(game);\r\n\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n\r\n    static refreshDragAndDrop(game) {\r\n        const drags = [];\r\n\r\n        // Hand\r\n        const unitWithoutPilots = game.player1.field.filter(x => !x.pair);\r\n        game.player1.hand.forEach(card => {\r\n            let drops = card.active ? [this.game.grid.player1Field.drop] : [];\r\n\r\n            if (card.active) {\r\n                let targets = [];\r\n\r\n                if (this.isCardCommand(card))\r\n                    targets = game.player1.field;\r\n                else if (this.isCardPilot(card))\r\n                    targets = unitWithoutPilots;\r\n\r\n                drops = drops.concat(targets.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Pair' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(card), card, show: false, targets: drops });\r\n        });\r\n\r\n        // Field\r\n        game.player1.field.forEach(attacker => {\r\n            let drops = attacker.active ? [this.game.grid.player2Field.drop] : [];\r\n\r\n            const ennemyTarget = game.player2.field.filter(x => this.isValidTarget(game.player2, attacker, x));\r\n            if (attacker.active && ennemyTarget.length > 0) {\r\n                drops = drops.concat(ennemyTarget.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Attack' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(attacker), card: attacker, show: false, targets: drops });\r\n        });\r\n\r\n\r\n        game.player1.drags = drags;\r\n    }\r\n\r\n    static getPos(card) { return card.to ? card.to : card.position; }\r\n}\r\n\r\n\r\nexport default refresh;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass effects {\r\n    static draw(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        const tasks = [];\r\n        for (let i = 0; i < value; i++)\r\n            tasks.push({\r\n                id: this.spawnOrMove.name,\r\n                isPlayer1: player.isPlayer1,\r\n                from: this.locationDeck,\r\n                to: this.locationHand,\r\n                delay: true\r\n            });\r\n\r\n        this.addTasksFirst(tasks);\r\n    }\r\n\r\n    static setCost(game, task, player, opponent) {\r\n        task.card2.costOrigin = task.card2.costOrigin ? task.card2.costOrigin : task.card2.cost;\r\n        const reduceValue = task.isConditionsAfterRespected ? task.effect.value : 0;\r\n        task.card2.cost = task.card2.costOrigin + reduceValue;\r\n    }\r\n\r\n    static playToken(game, task, player, opponent) {\r\n        if (!task.effect.value)\r\n            throw new Error('Missing effect.value :' + JSON.stringify(task));\r\n        const isPlayer1 = player.isPlayer1;\r\n        this.addTaskFirst({ id: this.spawnOrMove.name, card1: this.createCard(task.effect.value, isPlayer1), to: this.locationField, isPlayer1 });\r\n    }\r\n\r\n    static playTokenByUnitsNumber(game, task, player, opponent) {\r\n        for (let i = 0; i < task.effect.values.length; i++) {\r\n            const value = task.effect.values[i];\r\n            if (value.min !== undefined && player.field.length >= value.min) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n            else if (value.max !== undefined && player.field.length <= value.max) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n        }\r\n    }\r\n\r\n    static dealDamage(game, task, player, opponent) {\r\n        task.card2.hp -= task.effect.value;\r\n        this.log(`${task.card2.name} HP is reduced by ${task.effect.value}`);\r\n        if (task.card2.hp < 1) {\r\n            const tasks = this.destroyUnit(task.card2, false);\r\n            this.addTasksPos2(tasks);\r\n        }\r\n    }\r\n\r\n    static discard(game, task, player, opponent) {\r\n        const card1 = task.cardChoice;\r\n        if (!card1) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        this.log(`${card1.name} discarded`);\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationTrash });\r\n    }\r\n\r\n    static pilotToHand(game, task, player, opponent) {\r\n        if (!task.card2.pair)\r\n            return;\r\n\r\n        const card1 = task.card2.pair;\r\n        delete (task.card2.pair);\r\n        card1.pairedWith = null;\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationHand });\r\n        this.log(`${card1.name} return to hand`);\r\n    }\r\n\r\n    static gainEffects(game, task, player, opponent) {\r\n        task.card2.effects = task.card2.effects.concat(task.effect.effects);\r\n        this.log(`${task.card2.name} gain these effects : ${task.effect.effects.map(x => x.id)}`);\r\n    }\r\n\r\n    static rest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, false);\r\n    }\r\n\r\n    static unrest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n    }\r\n\r\n    static unrestButCantAttack(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n        task.card2.canAttack = false;\r\n    }\r\n\r\n    static repair(game, task, player, opponent) {\r\n        if (task.card2.hp < task.card2.hpMax) {\r\n            this.log(`${task.card2.name} HP is repaired by ${task.effect.value}`);\r\n            task.card2.hpOrigin = Math.min(task.card2.hpOrigin + task.effect.value, task.card2.hpMaxOrigin);\r\n            this.recalculateApHp(game, player, task.card2);\r\n        }\r\n    }\r\n\r\n    static get1ShieldToHand(game, task, player, opponent) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card1 = player.shield.splice(0, 1)[0];\r\n        card1.location = player.positions.shield.location;\r\n        this.addTaskPos2({ id: this.spawnOrMove.name, card1, to: this.locationHand });\r\n        this.log(`One card is move from shield to hand`);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(game, task, player, opponent) {\r\n        if (!task.cardChoice) {\r\n            task.cards = [this.getAndRemoveFirst(player.deck), this.getAndRemoveFirst(player.deck)];\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards: task.cards\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        const bottomCard = task.cards.filter(card => card.index !== task.cardChoice.index);\r\n        player.deck = [task.cardChoice].concat(player.deck).concat(bottomCard);\r\n        this.log(`Deck order have been changed (top and bottom)`);\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(game, task, player, opponent) {\r\n        if (!task.taskAttack || !task.taskAttack.attacker)\r\n            throw new Error('cant handle this effect : ' + JSON.stringify(task.effect));\r\n\r\n        task.taskAttack.shieldProtection = task.taskAttack.attacker.level <= task.effect.value;\r\n        if (task.taskAttack.shieldProtection)\r\n            this.log(`Shield are protected`);\r\n        else\r\n            this.log(`Shield are not protected because attacker is level ${task.taskAttack.attacker.level}`);\r\n    }\r\n\r\n    static gainThisTurn(game, task, player, opponent) {\r\n        const effect = this.clone(task.effect);\r\n        delete effect.target;\r\n        effect.id = effect.effect2;\r\n        effect.oneTurn = true;\r\n        effect.card = task.card2;\r\n        this.log(`${task.card2.name} get ${task.effect.effect2} for this turn`);\r\n        this.applyEffect(game, { id: this.applyEffect.name, effect }, player, opponent)\r\n    }\r\n\r\n    static incruise(game, task, player, opponent) {\r\n        const ap = task.isConditionsAfterRespected ? task.effect.ap : 0;\r\n        const hp = task.isConditionsAfterRespected ? task.effect.hp : 0;\r\n\r\n        task.card2.incruises = task.card2.incruises.filter(x => x.index != task.effect.card.index);\r\n        task.card2.incruises.push({\r\n            ap,\r\n            hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        const cardPlayer = this.getPlayer(task.card2.isPlayer1);\r\n\r\n        this.recalculateApHp(game, cardPlayer, task.card2);\r\n        this.log(`${task.card2.name} have been incruised by AP ${ap} and HP ${hp}`);\r\n    }\r\n\r\n    static incruisePlayerField(game, task, player, opponent) {\r\n        player.incruises = player.incruises.filter(x => x.index != task.effect.card.index);\r\n        player.incruises.push({\r\n            ap: task.effect.ap,\r\n            hp: task.effect.hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        this.log(`Player${player.index} field have been incruised by AP ${task.effect.ap} and HP ${task.effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(game, task, player, opponent) {\r\n        this.log(`${task.card2.name} is send to hand`);\r\n        this.addTaskPos2({ id: this.move.name, card1: task.card2, to: this.locationHand });\r\n    }\r\n\r\n    static unrestResource(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        if (player.resourcesAvailable < player.resourcesMax) {\r\n            player.resourcesAvailable = Math.min(player.resourcesMax, player.resourcesAvailable + value);\r\n            this.log(`Player${player.index} resources have been incruised by ${value}`);\r\n        }\r\n    }\r\n\r\n    static placeExResource(game, task, player, opponent) {\r\n        player.resourcesEx += task.effect.value;\r\n        player.resourcesAvailable += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} ex resource(s)`);\r\n    }\r\n\r\n    static placeRestedResource(game, task, player, opponent) {\r\n        player.resourcesMax += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} rested resource(s)`);\r\n    }\r\n\r\n    static breach(game, task, player, opponent) {\r\n        if (!task.card2.breach || task.card2.breach < task.effect.value) {\r\n            task.card2.breach = task.effect.value;\r\n            this.log(`${task.card2.name} has breach ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static blocker(game, task, player, opponent) {\r\n        const alreadyDone = this.alreadyDone(task.card2.blocker, task.isConditionsAfterRespected);\r\n        if (alreadyDone)\r\n            return;\r\n\r\n        task.card2.blocker = task.isConditionsAfterRespected;\r\n        const text = task.isConditionsAfterRespected ? 'has blocker' : 'don t has blocker';\r\n        this.log(`${task.card2.name} ${text}`);\r\n    }\r\n\r\n    static highManeuver(game, task, player, opponent) {\r\n        if (!task.card2.highManeuver) {\r\n            task.card2.highManeuver = true;\r\n            this.log(`${task.card2.name} has highManeuver`);\r\n        }\r\n    }\r\n\r\n    static deploy(game, task, player, opponent) {\r\n        let card1 = task.card2;\r\n        card1.selectable = false;\r\n        card1.canAttack = false;\r\n        const cardPlayer = this.getPlayer(card1.isPlayer1);\r\n        this.log(`${card1.name} is deployed`);\r\n        this.addTask({ id: this.play.name, card1, zone: cardPlayer.positions.field, regularPlay: false });\r\n    }\r\n\r\n    static attackActiveEnnemy(game, task, player, opponent) {\r\n        if (!task.card2.attackActiveEnnemy || task.card2.attackActiveEnnemy < task.effect.value) {\r\n            task.card2.attackActiveEnnemy = task.effect.value;\r\n            this.log(`${task.card2.name} can now attack unit with AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(game, task, player, opponent) {\r\n        if (!task.card2.immuneAp || task.card2.immuneAp < task.effect.value) {\r\n            task.card2.immuneAp = task.effect.value;\r\n            this.log(`${task.card2.name} is now immune to AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default effects;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass attack {\r\n    static stepSelectBlocker = 'stepSelectBlocker';\r\n    static stepSelectActionCards = 'stepSelectActionCards';\r\n    static stepSelectCardOpponent = 'stepSelectCardOpponent';\r\n    static stepEffectBattle = 'stepEffectBattle';\r\n    static stepShowFight = 'stepShowFight';\r\n    static stepFight = 'stepFight';\r\n    static attackStep = [\r\n        this.stepSelectBlocker,\r\n        this.stepSelectActionCards,\r\n        this.stepSelectCardOpponent,\r\n        this.stepEffectBattle,\r\n        this.stepShowFight,\r\n        this.stepFight\r\n    ];\r\n\r\n    static attack(game, task, player, opponent) {\r\n        game.taskAttack = task;\r\n        let result = {};\r\n        task.step = task.step ? task.step : this.attackStep[0];\r\n\r\n        while (!result.stop && !result.end) {\r\n            if (task.step === this.stepSelectBlocker)\r\n                result = this.selectBlocker(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectActionCards)\r\n                result = this.askForActionCards(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectCardOpponent)\r\n                result = this.selectCardOpponent(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepEffectBattle)\r\n                result = this.effectBattle(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepShowFight)\r\n                result = this.showFight(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepFight)\r\n                result = this.fight(game, task, player, opponent);\r\n\r\n            else\r\n                result.end = true;\r\n\r\n            if (!result || (!result.stop && !result.end))\r\n                this.nextStep(task);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static nextStep(task) {\r\n        const array = this.attackStep;\r\n        const index = array.indexOf(task.step);\r\n        if (index < array.length - 1)\r\n            task.step = array[index + 1];\r\n        else\r\n            task.step = 'end';\r\n        return {};\r\n    }\r\n\r\n    static selectBlocker(game, task, player, opponent) {\r\n        const blockers = opponent.field.filter(x => x.blocker && x.active);\r\n        if (task.attacker.highManeuver || task.blocker || blockers.length < 1)\r\n            return {};\r\n\r\n        if (!task.cardChoice && !task.choice)\r\n            return this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: opponent.isPlayer1,\r\n                task,\r\n                text: 'Select a blocker ?',\r\n                cards: blockers,\r\n                choices: [{ text: 'none' }]\r\n            });\r\n\r\n        task.blocker = task.cardChoice;\r\n        delete (task.cardChoice);\r\n        delete (task.choice);\r\n        return {};\r\n    }\r\n\r\n    static selectCardOpponent(game, task, player, opponent) {\r\n        if(task.attacker.location !== this.locationField){\r\n            this.log(`Attack is canceled because ${task.attacker.name} is no longer on the field.`);\r\n            return {end:true};\r\n        }\r\n\r\n        if (task.blocker) {\r\n            task.target = task.blocker;\r\n            return {};\r\n        }\r\n\r\n        if (task.target) {\r\n            const isValidTarget = this.isValidTarget(opponent, task.attacker, task.target);\r\n            return { end: !isValidTarget };\r\n        }\r\n\r\n        if (opponent.base.length > 0) {\r\n            task.target = opponent.base[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.attacker.ap < 1) {\r\n            this.setActive(game, task.attacker, false);\r\n            return {};\r\n        }\r\n\r\n        if (opponent.shield.length > 0) {\r\n            this.setActive(game, task.attacker, false);\r\n            if (task.shieldProtection)\r\n                return {};\r\n\r\n            const card1 = opponent.shield[0];\r\n            card1.position = this.clone(opponent.positions.shield);\r\n            task.attacker.to = { ...task.attacker.position, x: opponent.positions.shield.x, y: opponent.positions.shield.y };\r\n\r\n            const burstEffect = this.lunchEffectTriggerForOneCard(card1, this.trigger_burst);\r\n            const tasks = [];\r\n            tasks.push({ id: this.showCards.name, card1, delay: 100 });\r\n\r\n            if (!burstEffect.cancelMoveToTrash)\r\n                tasks.push({ id: this.spawnOrMove.name, card1, to: this.locationTrash });\r\n\r\n            this.addTasks(tasks);\r\n            return {};\r\n        }\r\n\r\n        return this.end(player.isPlayer1);\r\n    }\r\n\r\n    static isValidTarget(opponent, attacker, target) {\r\n        return target.isPlayer1 === opponent.isPlayer1\r\n            && (!target.active || (attacker.attackActiveEnnemy && attacker.attackActiveEnnemy > target.level));\r\n    }\r\n\r\n    static effectBattle(game, task, player, opponent) {\r\n        let isExisting = task.battleEffectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.attacker, this.trigger_battle);\r\n        if (isExisting) {\r\n            task.battleEffectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    static showFight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n\r\n        this.addTaskFirst({ id: this.showCards.name, card1: task.attacker, card2: task.target, delay: true });\r\n        this.nextStep(task);\r\n        return { stop: true };\r\n    }\r\n\r\n    static fight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n        \r\n        let damage = task.breach ? task.breach : task.attacker.ap;\r\n        if (task.target.immuneAp && damage < task.target.immuneAp)\r\n            damage = 0;\r\n        task.target.hp -= damage;\r\n        task.target.hpOrigin -= damage;\r\n        \r\n\r\n        damage = task.target.ap;\r\n        if (task.attacker.immuneAp && damage < task.attacker.immuneAp)\r\n            damage = 0;\r\n        task.attacker.hp -= damage;\r\n        task.attacker.hpOrigin -= damage;\r\n\r\n        const activeBreach = !task.breach && this.isCardUnit(task.target) && task.attacker.breach && task.target.hp < 1;\r\n        this.setActive(game, task.attacker, false);\r\n        let tasks = [];\r\n        const delay = activeBreach;\r\n        let tasksAttackerDead = [];\r\n\r\n        if (!task.breach && task.attacker.hp < 1)\r\n            tasksAttackerDead = this.destroyUnit(task.attacker, false);\r\n\r\n        if (task.target.hp < 1)\r\n            tasks = this.destroyUnit(task.target, delay);\r\n\r\n        this.setActive(game, task.attacker, false);\r\n\r\n        if (activeBreach) {\r\n            this.cardHighlight = this.cardHighlight.filter(x => x.index !== task.attacker.index);\r\n            tasks.push({\r\n                id: this.attack.name, step: this.stepSelectCardOpponent,\r\n                attacker: task.attacker, isPlayer1: task.attacker.isPlayer1,\r\n                breach: task.attacker.breach, delay: true\r\n            });\r\n        }\r\n\r\n        if (tasksAttackerDead.length > 0)\r\n            tasks = tasks.concat(tasksAttackerDead);\r\n\r\n        this.addTasks(tasks);\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default attack;\r\n","\r\n\r\nclass setup {\r\n\r\n    static handStartLength = 5;\r\n    static resourceStart = 0;\r\n    static shieldStartLength = 6;\r\n\r\n    static setupGame(game) {\r\n        if (this.quickstart) {\r\n            this.resourceStart = 8;\r\n            this.handStartLength = 15;\r\n        }\r\n\r\n        game.player1 = this.createPlayer(game, true, game.decklistPlayer1);\r\n        game.player2 = this.createPlayer(game, false, game.decklistPlayer2);\r\n        game.isPlayer1 = this.quickstart ? false : Math.floor(Math.random() * 2) == 1;\r\n        game.fields = [game.grid.player1Hand, game.grid.player1Field, game.grid.player2Hand, game.grid.player2Field];\r\n\r\n        const playerOpponent = game.isPlayer1 ? game.player1 : game.player2;\r\n        game.player = playerOpponent;\r\n        game.resourcesMax = 2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        let tasks = [];\r\n        for (let i = 0; i < this.handStartLength; i++) {\r\n            tasks = tasks.concat([\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true },\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: false }]);\r\n        }\r\n\r\n        this.addTasks(tasks);\r\n    }\r\n\r\n    static createPlayer(game, isPlayer1, decklist) {\r\n        const deck = this.createDeck(game, isPlayer1, decklist);\r\n\r\n        const result = {\r\n            isPlayer1, deck, shield: [], hand: [], field: [], trash: [], base: [], empty: [], incruises: [],\r\n            resourcesMax: this.resourceStart, resourcesAvailable: 0, resourcesEx: 0, index: isPlayer1 ? '1' : '2',\r\n            positions: {\r\n                deck: isPlayer1 ? game.grid.player1Deck : game.grid.player2Deck,\r\n                shield: isPlayer1 ? game.grid.player1Shield : game.grid.player2Shield,\r\n                hand: isPlayer1 ? game.grid.player1Hand : game.grid.player2Hand,\r\n                field: isPlayer1 ? game.grid.player1Field : game.grid.player2Field,\r\n                trash: isPlayer1 ? game.grid.player1Trash : game.grid.player2Trash,\r\n                base: isPlayer1 ? game.grid.player1Base : game.grid.player2Base,\r\n                empty: {}\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static createDeck(game, isPlayer1, decklist) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = game.cardList.find(x => x.id == id);\r\n            if (!card)\r\n                throw new Error(\"This card doesn't exist : \" + id);\r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(this.createCard(card.id, isPlayer1));\r\n        })\r\n\r\n        this.createUniqueRare(game, result);\r\n\r\n        result = this.sortRandom(result);\r\n        return result;\r\n    }\r\n\r\n    static createUniqueRare(game, deck) {\r\n        const rareKeyWord = \"_p1\";\r\n        var rareCards = game.gundamCards.files.split(',').filter(x => x.includes(rareKeyWord)).map(x => x = x.replace(rareKeyWord, \"\"));\r\n        rareCards.forEach(rareCard => {\r\n            const firstCard = deck.find(x => x.id === rareCard);\r\n            if (firstCard)\r\n                firstCard.id += rareKeyWord;\r\n        });\r\n    }\r\n\r\n    static sortRandom(cards) {\r\n        return cards.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    static mulligan(game, task) {\r\n        if (this.quickstart)\r\n            task.choice = {};\r\n\r\n        if (!task.choice) {\r\n            return this.addTaskFirst(\r\n                {\r\n                    id: this.popup.name,\r\n                    isPlayer1: true,\r\n                    task,\r\n                    text: 'Do you want to do a mulligan ?',\r\n                    choices: [{ id: 'yes', text: 'yes' }, { text: 'no' }]\r\n                }\r\n            );\r\n        } else {\r\n            let tasks = [];\r\n            if (task.choice.id === 'yes') {\r\n                game.player1.deck = this.sortRandom(game.player1.deck.concat(game.player1.hand));\r\n                const removeIds = game.player1.hand.map(x => x.index);\r\n                game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n                game.player1.hand = [];\r\n\r\n                for (let i = 0; i < this.handStartLength; i++)\r\n                    tasks.push({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true });\r\n            }\r\n\r\n            // if (!this.quickstart)\r\n                tasks = tasks.concat(this.addShielsAndBase(game));\r\n\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: true });\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: false });\r\n\r\n            tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n            this.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static addShielsAndBase(game) {\r\n        let tasks = [];\r\n\r\n        for (let i = 0; i < this.shieldStartLength; i++) {\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: true });\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: false });\r\n        }\r\n\r\n        game.player1.base = [this.spawnIfNot(this.createCard('EXB-001', true, this.locationBase))];\r\n        game.player2.base = [this.spawnIfNot(this.createCard('EXB-001', false, this.locationBase))];\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\r\nexport default setup;\r\n","class popup {\r\n\r\n    static popup(game, task) {\r\n        if(!task.task)\r\n            throw new Error('Il faut préciser la task de la popup !');\r\n        \r\n        if(!task.isPlayer1)\r\n            return this.handleAiPopup(game,task);\r\n        \r\n        if (!game.popup || !game.popup.task || (!game.popup.task.cardChoice && !game.popup.task.choice)) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        } \r\n        \r\n        this.deletePopup();\r\n    }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.cardChoice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n    }\r\n}\r\n\r\n\r\nexport default popup;","/* eslint-disable no-unused-vars */\r\n\r\nclass tasks {    \r\n    static indexTask=1;\r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1\r\n                : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1\r\n                    : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = isPlayer1 ? game.player2 : game.player1;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            if(!this[task.id])\r\n                throw new Error(`Can't handle this tasks : ${JSON.stringify(task)}`);\r\n            const result = this[task.id](game, task, player, opponent);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            game.tasks = game.tasks.filter(x=> x.index !== task.index);\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? this.delay : task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (this.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static addTasksIndex(tasks){\r\n        tasks.forEach(x=> {\r\n            x.index = this.indexTask;\r\n            this.indexTask++;\r\n        });\r\n    }\r\n    \r\n    static addTask(task) { return this.addTasks([task]); }\r\n    static addTasks(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.addTasksIndex(tasks);\r\n        this.game.tasks = this.game.tasks.concat(tasks);\r\n        return {};\r\n    }\r\n\r\n    static addTaskFirst(task) { return this.addTasksFirst([task]); }\r\n    static addTasksFirst(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.game.tasks = tasks.concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static addTaskPos2(task) { return this.addTasksPos2([task]); }\r\n    static addTasksPos2(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        const first = this.game.tasks.splice(0,1)[0];\r\n        this.game.tasks = [first].concat(tasks).concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static startTasks(game){\r\n        game.triggerRefreshAlreadyDone=false;\r\n        this.resetZIndex(game);\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;\r\n","class array {\r\n\r\n    static test(message) {\r\n        alert(message);\r\n    }\r\n\r\n    static wait() { }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static addFunction(cla, obj, useTuto) {\r\n        const ignore = ['length', 'name', 'prototype'];\r\n        cla.forEach(c => {\r\n            Object.getOwnPropertyNames(c).forEach(method => {\r\n                if (!ignore.includes(method)) {\r\n                    if (obj[method] && !useTuto) {\r\n                        throw new Error(`cette fonction existe deja : ${c.name}.${method}`);\r\n                    }\r\n                    else {\r\n                        obj[method] = c[method];\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Log\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n\r\n    // Utils\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static alreadyDone(valueOld, valueNew) {\r\n        if (valueOld === undefined && !valueNew)\r\n            return true;\r\n        return valueOld == valueNew;\r\n    }\r\n}\r\n\r\n\r\nexport default array;\r\n","class title {\r\n\r\n    static showTitle(game, task) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: this.clone(game.grid.textZone)\r\n        };\r\n        game.textEffect.to = this.clone(game.grid.textZone);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static showCards(game, task) {\r\n        if (!task.card1 || this.cardHighlight.find(x => x.index === task.card1.index)) {\r\n            task.delay = null;\r\n            return;\r\n        }\r\n\r\n        this.spawnIfNot(task.card1);\r\n        this.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? game.grid.highlightCardLeft : game.grid.highlightCardCenter;\r\n        task.card1.to = this.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n        task.card1.verso = false;\r\n\r\n        if (task.card2) {\r\n            this.spawnIfNot(task.card2);\r\n            this.cardHighlight.push(task.card2);\r\n            task.card2.to = this.clone(game.grid.highlightCardRight);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n            task.card2.verso = false;\r\n        }\r\n\r\n        if (task.text)\r\n            this.taskTextShow(game, task);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        task.card1 = this.spawnOrMove(game, task, player);\r\n        task.delay = true;\r\n        this.showCards(game, task);\r\n    }\r\n\r\n    static showCardsEffect(game, task) {\r\n        task.card1.fxRed = !task.hideFx;\r\n        task.card1.fxText = task.text;\r\n        task.card1.verso = false;\r\n        if (!task.hideFx) {\r\n            this.log(`Apply effect of ${task.card1.name} : ${task.text}`);\r\n            this.addTaskPos2({ id: this.showCardsEffect.name, card1: task.card1, hideFx: true, delay: true });\r\n        }\r\n        //this.addTaskPos2({ id: this.wait.name, delay: task.delay });\r\n        // task.delay = null;\r\n        //if (task.text) this.taskTextShow(game, task);\r\n    }\r\n}\r\n\r\n\r\nexport default title;\r\n","class turn {\r\n    static getPlayerTurn() { return this.getPlayer(this.game.isPlayer1); }\r\n    static getPlayer(isPlayer1) { return isPlayer1 ? this.game.player1 : this.game.player2; }\r\n    static getPlayerTurnOpponent() { return this.getOpponent(this.game.isPlayer1); }\r\n    static getOpponent(isPlayer1) { return isPlayer1 ? global.game.player2 : global.game.player1; }\r\n\r\n    static turnIndex = 0;\r\n\r\n    static nextTurn(game, task, player) {\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerMultiple(player.field, this.trigger_end);\r\n        task.effectsAlreadyDone = true;\r\n\r\n        if (isExisting) {\r\n            this.addTasks([{ id: this.refreshFieldAndHand.name, isPlayer1: true }, { id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        game.isPlayer1 = !game.isPlayer1;\r\n        game.player = this.getPlayerTurn();\r\n        const playerId = game.isPlayer1 ? '1' : '2';\r\n        this.startTasks(game);\r\n\r\n        const idTask = game.isPlayer1 ? this.taskMoveAndShowCenter.name : this.spawnOrMove.name;\r\n\r\n        const tasks = [\r\n            { id: this.showTitle.name, value: 'New turn for player ' + playerId, isPlayer1: game.isPlayer1, delay: true },\r\n            { id: idTask, isPlayer1: game.isPlayer1, from: this.locationDeck, to: this.locationHand }\r\n        ];\r\n\r\n        this.addTasks(tasks);\r\n\r\n        this.removeOneTurnEffect(game);\r\n\r\n        if (game.player.resourcesMax < 1)\r\n            game.player.resourcesMax = 1;\r\n        else if (game.player.resourcesMax < 10)\r\n            game.player.resourcesMax += 1;\r\n\r\n        game.player.resourcesAvailable = game.player.resourcesMax + game.player.resourcesEx;\r\n        game.resourcesMax = Math.max(game.player1.resourcesAvailable, game.player1.resourcesMax, game.player2.resourcesAvailable, game.player2.resourcesMax) + 1;\r\n\r\n\r\n        game.player.field.concat(game.player.base)\r\n            .forEach(x => this.setActive(game, x, true));\r\n\r\n        this.setSelectableFalse();\r\n\r\n        const baseText = game.player.base.length > 0 ? game.player.base[0].hp + 'hp ' : '-';\r\n        this.turnIndex++;\r\n        this.log(`-- Turn ${this.turnIndex} for player ${playerId}, ${game.player.resourcesAvailable} resources, ${game.player.shield.length} shield, ${baseText} base`);\r\n\r\n        this.lunchEffectTriggerMultiple(game.player.field, this.trigger_turn);\r\n    }\r\n}\r\n\r\n\r\nexport default turn;\r\n","class tuto {\r\n    static handStartLength = 0;\r\n    static tutoFullScreen(game) { return { x: 0, y: 0, width: game.grid.width, height: game.grid.height };}\r\n    static tutoHalfScreen(game) { return { x: 0, y: 0, width: game.grid.width, height: game.grid.centerZoneP2.y };}\r\n    static tutoSmall(game) { return game.grid.resources;}\r\n    static tutoEnnemyFieldPosition(game) {return game.player2.positions.field;}\r\n\r\n    static mulligan(game, task) {\r\n        game.player1.deck = [\r\n            this.createCard('ST03-007', true, this.locationDeck)\r\n        ].concat(game.player1.deck);\r\n\r\n        if (!game.showTextTuto) {\r\n            game.showTextTuto = {\r\n                ...this.tutoFullScreen(game),\r\n                text: 'Welcome to Gundam TCG.'\r\n            };\r\n            task.step=0;\r\n            return { stop: true };\r\n        }\r\n\r\n        if (game.showTextTuto.next){\r\n            task.step++;\r\n            game.showTextTuto.next=false;\r\n        }\r\n\r\n        if(task.step ==1){\r\n            game.showTextTuto = {\r\n                ...this.tutoSmall(game),\r\n                text: 'This button'\r\n            };\r\n            return { stop: true };\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default tuto;\r\n","class pair {\r\n    static pair(game, task, player) {\r\n        const cardUnit = this.isCardUnit(task.card1) ? task.card1 : task.card2;\r\n        const cardPilot = this.isCardPilot(task.card1) ? task.card1 : task.card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n\r\n        const isExistingPairEffects = task.effectsAlreadyDonePair ? false\r\n            : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onpair);\r\n        task.effectsAlreadyDonePair = true;\r\n        if (isExistingPairEffects)\r\n            return { stop: true };\r\n\r\n        if (isLink) {\r\n            const isExistingLinkEffects = task.effectsAlreadyDoneLink ? false\r\n                : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onlink);\r\n            task.effectsAlreadyDoneLink = true;\r\n            if (isExistingLinkEffects)\r\n                return { stop: true };\r\n        }\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = this.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.pairedWith = cardUnit.index;\r\n        cardPilot.location = this.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.apOrigin += cardPilot.ap;\r\n        cardUnit.hpOrigin += cardPilot.hp;\r\n        cardUnit.hpMaxOrigin += cardPilot.hp;\r\n        cardUnit.verso = false;\r\n        cardPilot.verso = false;\r\n        this.handleMainEffectsCard(game, cardPilot, true);\r\n\r\n        if (isLink) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default pair;\r\n","class ai {\r\n    static newTurnForAI(game, task) {\r\n        if (!task.haveBeenRefresh) {\r\n            task.haveBeenRefresh = true;\r\n            game.cards.forEach(card => card.AiUsed = null);\r\n            this.addTaskFirst({ id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true });\r\n            return { stop: true };\r\n        }\r\n\r\n        const result = this.refreshAiTurn(game, task, game.player2);\r\n        if (result && result.taskAdded)\r\n            this.startTasks(game);\r\n\r\n        return result;\r\n    }\r\n\r\n    static refreshAiTurn(game, task, player) {\r\n        /*if (this.quickstart) {\r\n            this.endTurn(game);\r\n            return {};\r\n        }*/\r\n\r\n        const cardsAvailable = player.hand.filter(x => x.selectable);\r\n        const combos = this.getAiCombos(game, task, player, cardsAvailable);\r\n\r\n        let result = this.handleAiHand(game, task, player, cardsAvailable, combos);\r\n        if (result.stop || result.taskAdded)\r\n            return result;\r\n\r\n        result = this.handleAiField(game, task, player);\r\n        if (result.taskAdded)\r\n            return result;\r\n\r\n        this.endTurn(game);\r\n        return {};\r\n    }\r\n\r\n    static handleAiPopup(game, task) {\r\n        const selectChoiceNull = task.text.includes('action card');\r\n        if (selectChoiceNull && task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.cards && task.cards.length > 0) {\r\n            task.task.cardChoice = task.cards[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        this.deletePopup();\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default ai;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass aiCombos {\r\n    static getAiCombos(game, task, player, cardsAvailable) {\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card));\r\n        const pilots = cardsAvailable.filter(card => this.isCardPilot(card));\r\n\r\n        return {\r\n            pilotLinkUnits: this.getAiCombosPilotLinkUnit(game, task, player, units, pilots),\r\n            pilotLinkUnitsOnFieldWithEffects: this.getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots)\r\n        };\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnit(game, task, player, units, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        units.forEach(unit => {\r\n            const costRemaining = player.resourcesAvailable - unit.cost;\r\n            const pilot = pilots.find(pilot => this.isLink(unit, pilot) && pilot.cost <= costRemaining);\r\n            if (pilot) {\r\n                unit.AiUsed = pilot.index;\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        player.field.filter(unit => !unit.pair).forEach(unit => {\r\n            const unitHasEffect = this.hasLinkEffect(unit);\r\n            const pilot = pilots.find(pilot => !pilot.AiUsed && this.isLink(unit, pilot) && (unitHasEffect || this.hasLinkEffect(pilot)));\r\n            if (pilot) {\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default aiCombos;\r\n","class aiPlay {\r\n    static handleAiHand(game, task, player, cardsAvailable, combos) {\r\n        if (player.base.length < 1) {\r\n            const bases = cardsAvailable.filter(card => this.isCardBase(card));\r\n            if (bases.length > 0)\r\n                return this.playCombo(player, { unit: bases[0] });\r\n        }\r\n\r\n        if (combos.pilotLinkUnits.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnits[0]);\r\n\r\n        if (combos.pilotLinkUnitsOnFieldWithEffects.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnitsOnFieldWithEffects[0]);\r\n\r\n        const combo = this.handleStrategy(game, player, cardsAvailable);\r\n        if (combo.stop || combo.taskAdded)\r\n            return combo;\r\n        if (combo && combo.unit)\r\n            return this.playCombo(player, combo);\r\n\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card))\r\n            .sort((a, b) => b.level - a.level);\r\n        if (units.length > 0)\r\n            return this.playCombo(player, { unit: units[0] });\r\n\r\n        return {};\r\n    }\r\n\r\n    static playCombo(player, combo) {\r\n        let tasks = [];\r\n        if (combo.unit && combo.unit.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.unit));\r\n\r\n        if (combo.pilot && combo.pilot.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.pilot, combo.unit));\r\n\r\n        this.addTasksFirst(tasks);\r\n        return { taskAdded: tasks.length > 0 };\r\n    }\r\n\r\n    static handleAiField(game, task, player) {\r\n        const unitsThatCanAttack = player.field\r\n            .filter(card => this.isCardUnit(card) && card.canAttack)\r\n            .sort((a, b) => b.ap - a.ap);\r\n        const attacker = unitsThatCanAttack[0];\r\n        if (!attacker)\r\n            return {};\r\n\r\n        const notEnoughShield = this.getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker);\r\n        const target = this.getTarget(game, task, player, attacker, notEnoughShield);\r\n        this.declareAiAttack(attacker, target);\r\n        return { taskAdded: true };\r\n    }\r\n\r\n    static getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker) {\r\n        let attackMinimimForWin = game.player1.shield.length + 1;\r\n        if (game.player1.base.length > 0) {\r\n            attackMinimimForWin += 1;\r\n            const base = game.player1.base[0];\r\n            if (base.hp > attacker.ap)\r\n                attackMinimimForWin += 1;\r\n        }\r\n        return attackMinimimForWin <= unitsThatCanAttack.length;\r\n    }\r\n\r\n    static getTarget(game, task, player, attacker, notEnoughShield) {\r\n        const targets = game.player1.field.filter(x => this.isValidTarget(game.player1, attacker, x) && x.hp <= attacker.ap);\r\n        const target = targets.length < 1 ? null : targets.sort((a, b) => b.level - a.level)[0];\r\n\r\n        if (target && attacker.breach)\r\n            return target;\r\n\r\n        if (notEnoughShield)\r\n            return null;\r\n\r\n        return target;\r\n    }\r\n\r\n    static getPlayCardTasks(player, card1, card2) {\r\n        const value = `I Play ${card1.name} ${card2 ? 'with ' + card2.name : ''}`;\r\n        return [\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            { id: this.play.name, card1, card2, zone: player.positions.field, regularPlay: true }\r\n        ]\r\n    }\r\n\r\n    static declareAiAttack(attacker, target) {\r\n        const value = `I attack with ${attacker.name} (Level ${attacker.level}, AP ${attacker.ap}) ${target ? 'against ' + target.name : ''}`;\r\n        this.addTasksFirst([\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            {\r\n                id: this.attack.name,\r\n                attacker, isPlayer1: false,\r\n                target\r\n            }\r\n        ]);\r\n    }\r\n}\r\n\r\n\r\nexport default aiPlay;\r\n","class aiStrategy {\r\n    static handleStrategy(game, player, cardsAvailable) {\r\n        let result = null;\r\n\r\n        const base = player.base.length > 0 ? player.base[0] : null;\r\n        if (base && base.active) {\r\n            result = this.handleStrategyCard(game, player, cardsAvailable, base);\r\n            if (result.stop || result.taskAdded)\r\n                return result;\r\n        }\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playAsap\");\r\n        if (result.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnits\");\r\n        if (result.length > 0 && game.player2.field.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnitsRested\");\r\n        if (result.length > 0 && game.player2.field.filter(x => !x.active).length > 0)\r\n            return { unit: result[0] };\r\n\r\n        return {};\r\n    }\r\n\r\n    static handleStrategyCard(game, player, cardsAvailable, card) {\r\n        let lunchMainEffectCard = false;\r\n\r\n        if (card.id === 'GD01-124'){ // Side 7\r\n            const hasActiveUnitThatNeedRepair = player.field.find(x => x.hp < x.hpMax);\r\n            lunchMainEffectCard = hasActiveUnitThatNeedRepair;\r\n        }\r\n\r\n        else if (card.id === 'ST01-016') { // Asticassia School of Technology, Earth House\r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST01-015' && player.resourcesAvailable > 1){  // White base            \r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST04-015'){ // Archangel\r\n            const hasInactiveBlocker = player.field.find(x => !x.active && this.hasEffect(x, 'blocker'));\r\n            lunchMainEffectCard = player.resourcesAvailable > 1 && hasInactiveBlocker;\r\n        } \r\n\r\n        if (lunchMainEffectCard) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name, cardChoice: card });\r\n            return { taskAdded: true };\r\n        }\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default aiStrategy;\r\n","import effectsLuncher from './effectsLuncher';\r\nimport effectsTarget from './effectsTarget';\r\nimport mainEffects from './mainEffects';\r\nimport positioner from './positioner';\r\nimport selectable from './selectable';\r\nimport cardAction from './cardAction';\r\nimport conditions from './conditions';\r\nimport cardMove from './cardMove';\r\nimport cardLife from './cardLife';\r\nimport cardPlay from './cardPlay';\r\nimport refresh from './refresh';\r\nimport effects from './effects';\r\nimport attack from './attack';\r\nimport setup from './setup';\r\nimport popup from './popup';\r\nimport tasks from './tasks';\r\nimport utils from './utils';\r\nimport show from './show';\r\nimport turn from './turn';\r\nimport tuto from './tuto';\r\nimport pair from './pair';\r\nimport ai from './ai';\r\nimport aiCombos from './aiCombos';\r\nimport aiPlay from './aiPlay';\r\nimport aiStrategy from './aiStrategy';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass game {\r\n    static game = null;\r\n    static index = 1;\r\n    static delay = 500;\r\n    static needTaskEndRefresh;\r\n    static cardHighlight = [];\r\n    static isStart;\r\n    static quickstart;\r\n\r\n    static setup(width, height, cards, decklistPlayer1, decklistPlayer2, quickstart, useTuto) {\r\n        this.cards = cards.cards;\r\n        this.quickstart = quickstart;\r\n        this.game = {\r\n            logs: '',\r\n            cards: [],\r\n            tasks: [{ id: 'setupGame' }],\r\n            cardList: cards.cards,\r\n            gundamCards: cards,\r\n            decklistPlayer1, decklistPlayer2,\r\n            incruises: [],\r\n            effects: [],\r\n            tuto:useTuto\r\n        };\r\n\r\n        const scripts = [\r\n            tasks, utils, popup, setup, positioner, turn, refresh, selectable, show, mainEffects,\r\n            cardLife, cardMove, cardPlay, cardAction, effectsLuncher, effectsTarget, conditions, effects, pair, attack,\r\n            ai, aiCombos, aiPlay, aiStrategy\r\n        ];\r\n        if(useTuto)\r\n            scripts.push(tuto); // = [tuto].concat(scripts);\r\n\r\n        utils.addFunction(scripts, this, useTuto);\r\n        this.game.grid = this.createGrid(width, height);\r\n        this.continue(this.game);\r\n        this.isStart = true;\r\n        return this.game;\r\n    }\r\n\r\n    static continue(game) {\r\n        if (this.isStart) {\r\n            this.addTaskFirst({ id: this.mulligan.name }, { id: this.nextTurn.name });\r\n            this.isStart = false;\r\n        }\r\n        this.endAnimation(game);\r\n        let result = this.handleTasks(game);\r\n        if (!game.refresh && !game.isPlayer1) {\r\n            this.addTask({ id: this.newTurnForAI.name });\r\n            result = this.continue(game);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        this.startTasks(game);\r\n        this.addTask({ id: this.play.name, card1, card2, zone, regularPlay: true });\r\n        return this.continue(game);\r\n    }\r\n\r\n    static useEffect(game) {\r\n        this.startTasks(game);\r\n        return this.lunchMainEffectCard(game);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.popup.task.choice = choice;\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.popup.task.cardChoice = card;\r\n        return game;\r\n    }\r\n\r\n    static tutoNext(game){\r\n        game.showTextTuto.next=true;\r\n        return this.continue(game);\r\n    }\r\n\r\n    static showLocationCards(game, location, isPlayer1) {\r\n        const player = this.getPlayer(isPlayer1);\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            cards: player[location],\r\n            task: {},\r\n            isPlayer1: true,\r\n            text: `${location} of player ${player.index}`,\r\n            choices: [{ text: 'ok' }]\r\n        });\r\n        return game;\r\n    }\r\n\r\n    static endTurn(game, card1, card2, drop) {\r\n        this.startTasks(game);\r\n        game.tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n        return game;\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        this.game.isVictory = isPlayer1;\r\n        const message = isPlayer1 ? 'Victory' : 'Defeat';\r\n        return { end: true };\r\n    }\r\n}\r\n\r\n\r\nexport default game;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: _vm.card.fadeOut },style:({\n    left: _vm.card.position.x + 'px',\n    top: _vm.card.position.y + 'px',\n    width: _vm.card.position.width + 'px',\n    height: _vm.card.position.height + 'px',\n    transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n    'z-index': _vm.card.zindex,\n    cursor: _vm.shine ? 'pointer' : '',\n    border: _vm.card.fx ? '1px solid yellow' : ''\n  }),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(_vm.card.fxRed)?_c('div',{staticClass:\"bgRed circle absolute fadeInOut\",style:(_vm.getRedFxStyle())}):_vm._e(),(!_vm.card)?_c('div',[_vm._v(\"No card\")]):(_vm.card.verso === true)?_c('img',{class:{ w100p: true, h100p: true, absolute: true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + 'empty.webp')}}):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute: true },style:({\n    'object-fit': 'cover',\n    'object-position': _vm.card.bgposition,\n    'pointer-events': 'none'\n  }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(_vm.card.fxText)?_c('div',{staticClass:\"absolute fadeInOut text-center text-center-vertical fontSize150em text-shadow-black\",style:({..._vm.getRedFxStyle(), 'mask-image':'', 'color':'red' })},[_vm._v(\" \"+_vm._s(_vm.card.fxText)+\" \")]):_vm._e(),(!_vm.card.verso && !_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"w100p h100p\",style:({ transform: !_vm.card.position.rotation || _vm.card.position.rotation == 0 ? '' : 'rotate(-90deg)' })},[_c('div',{staticClass:\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\",staticStyle:{\"width\":\"70px\",\"height\":\"30px\",\"top\":\"-10px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")])]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine circle15px\",staticStyle:{\"top\":\"0px\",\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div @click=\"$emit('click', card)\"\r\n    :class=\"{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: card.fadeOut }\" :style=\"{\r\n      left: card.position.x + 'px',\r\n      top: card.position.y + 'px',\r\n      width: card.position.width + 'px',\r\n      height: card.position.height + 'px',\r\n      transform: 'rotate(' + card.position.rotation + 'deg)',\r\n      'z-index': card.zindex,\r\n      cursor: shine ? 'pointer' : '',\r\n      border: card.fx ? '1px solid yellow' : ''\r\n    }\">\r\n    <div v-if=\"card.fxRed\" class=\"bgRed circle absolute fadeInOut\" :style=\"getRedFxStyle()\">\r\n    </div>\r\n\r\n\r\n    <div v-if=\"!card\">No card</div>\r\n\r\n    <!-- Card Image-->\r\n    <img v-else-if=\"card.verso === true\" :class=\"{ w100p: true, h100p: true, absolute: true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + 'empty.webp')\" />\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute: true }\" draggable=\"false\" :style=\"{\r\n      'object-fit': 'cover',\r\n      'object-position': card.bgposition,\r\n      'pointer-events': 'none'\r\n    }\" :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n\r\n    <!-- fxText-->\r\n    <div v-if=\"card.fxText\" class=\"absolute fadeInOut text-center text-center-vertical fontSize150em text-shadow-black\" \r\n      :style=\"{...getRedFxStyle(), 'mask-image':'', 'color':'red' }\">\r\n      {{ card.fxText }}\r\n    </div>\r\n\r\n    <!-- stats-->\r\n    <div v-if=\"!card.verso && !hidestat && (card.ap || card.hp)\" class=\"w100p h100p\"\r\n      :style=\"{ transform: !card.position.rotation || card.position.rotation == 0 ? '' : 'rotate(-90deg)' }\">\r\n      <div class=\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\"\r\n        style=\"width:70px; height:30px; top:-10px; background-color: #FFFFFFB0;\">\r\n        {{ card.ap }} - {{ card.hp }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- red background-->\r\n    <div class=\"w100p h100p absolute shine circle15px\" v-if=\"card && card.dead\"\r\n      style=\"top:0px; background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat'],\r\n  methods: {\r\n    getRedFxStyle() {\r\n      return {\r\n        opacity: 0,\r\n        left: '-100%',\r\n        top: '-71.3%',\r\n        width: (this.card.position.width * 3) + 'px', height: (this.card.position.width * 3) + 'px',\r\n        'mask-image': 'radial-gradient(rgba(0 0 0 /0) 40%, black 45%, rgba(0 0 0 /0) 70%)'\r\n      };\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=b5ae5494&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b5ae5494\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#F44336', _vm.p1max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#3F51B5', _vm.p1yellow + _vm.p1blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#FFEB3B', _vm.p1yellow))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#F44336', _vm.p2max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#3F51B5', _vm.p2yellow + _vm.p2blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#FFEB3B', _vm.p2yellow))}),(_vm.p1yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(true, _vm.p1yellow))},[_vm._v(_vm._s(_vm.p1yellow)+\" \")]):_vm._e(),(_vm.p2yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(false, _vm.p2yellow))},[_vm._v(_vm._s(_vm.p2yellow)+\" \")]):_vm._e(),(_vm.p1blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(true, _vm.p1yellow + _vm.p1blue))},[_vm._v(\" \"+_vm._s(_vm.p1yellow + _vm.p1blue)+\" \")]):_vm._e(),(_vm.p2blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(false, _vm.p2yellow + _vm.p2blue))},[_vm._v(\" \"+_vm._s(_vm.p2yellow + _vm.p2blue)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"relative\" style=\"width: 100%; height: 100%;\">\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#F44336', p1max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#3F51B5', p1yellow + p1blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#FFEB3B', p1yellow)\"></div>\r\n\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#F44336', p2max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#3F51B5', p2yellow + p2blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#FFEB3B', p2yellow)\"></div>\r\n\r\n        <div v-if=\"p1yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(true, p1yellow)\">{{ p1yellow }}\r\n        </div>\r\n        <div v-if=\"p2yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(false, p2yellow)\">{{ p2yellow }}\r\n        </div>\r\n\r\n        <div v-if=\"p1blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(true, p1yellow + p1blue)\">\r\n            {{ p1yellow + p1blue }}\r\n        </div>\r\n        <div v-if=\"p2blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(false, p2yellow + p2blue)\">\r\n            {{ p2yellow + p2blue }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.banana {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    mask-image: radial-gradient(rgba(0 0 0 /0) 40%, black 45%);\r\n}\r\n\r\n.text {\r\n    color: black;\r\n    background: #FFEB3B;\r\n    border-radius: 50%;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'banana-bars',\r\n    props: ['width', 'p1yellow', 'p1blue', 'p2yellow', 'p2blue', 'p1max', 'p2max', 'max'],\r\n    methods: {\r\n        getBananaStyle(isPlayer1, color, value) {\r\n            const percent = value * 100 / this.max;\r\n            const margin = 10;\r\n            const angle = isPlayer1 ? 225 : 45;\r\n            const anglePercent = percent * 180 / 100;\r\n            const anglePercentMinusMargin = anglePercent - margin;\r\n            return {\r\n                transform: `rotate(${angle}deg) scaleX(-1)`,\r\n                background: `conic-gradient(transparent 0deg, \r\n                                            ${color} ${margin}deg, \r\n                                            ${color} ${anglePercentMinusMargin}deg, \r\n                                            transparent ${anglePercent}deg)`\r\n            };\r\n        },\r\n        getTextStyle(isPlayer1, value) {\r\n            const percent = value / this.max;\r\n            const percentIncruise = this.width / 100;\r\n            let leftValue = isPlayer1 ? this.getParabolicY(15, 68, 76, percent) : this.getParabolicY(64, 11, 5, percent);\r\n            leftValue *= percentIncruise;\r\n\r\n            let topValue = isPlayer1 ? this.getParabolicY(70, 68, 14, percent) : this.getParabolicY(9, 12, 61, percent);\r\n            topValue *= percentIncruise;\r\n\r\n            return { width: 25 + 'px', height: 25 + 'px', left: leftValue + 'px', top: topValue + 'px' };\r\n        },\r\n        getParabolicY(y0, y50, y100, t) {\r\n            const a = 2 * y0 - 4 * y50 + 2 * y100;\r\n            const b = -3 * y0 + 4 * y50 - y100;\r\n            const c = y0;\r\n            return a * t * t + b * t + c;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bananaBars.vue?vue&type=template&id=0d48b94b&scoped=true&\"\nimport script from \"./bananaBars.vue?vue&type=script&lang=js&\"\nexport * from \"./bananaBars.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bananaBars.vue?vue&type=style&index=0&id=0d48b94b&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d48b94b\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('img',{staticClass:\"w100p h100p\",staticStyle:{\"object-fit\":\"contain\"},attrs:{\"src\":require('@/assets/Gundam/' + _vm.icon)},on:{\"click\":function($event){return _vm.$emit('click')}}}),_c('div',{staticClass:\"absolute text-center w100p text-shadow-black\",staticStyle:{\"top\":\"35%\"}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.length)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <img @click=\"$emit('click')\" class=\"w100p h100p\" style=\"object-fit:contain\" :src=\"require('@/assets/Gundam/' + icon)\" />\r\n        <div class=\"absolute text-center w100p text-shadow-black\" style=\"top: 35%;\">\r\n            {{ text }}\r\n            <br>\r\n            {{ length }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    name: 'deck-icon',\r\n    props: ['icon', 'length', 'text']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckIcon.vue?vue&type=template&id=07473bde&\"\nimport script from \"./deckIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./deckIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p mask bg2\" style=\"height: 100dvh\" :key=\"refreshG\">\r\n        <span v-if=\"game\">\r\n            <!-- Drag and drop field-->\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.halfPlayer2)\"></div>\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.centerZoneP2)\"></div>\r\n            <div class=\"absolute bg2\" :style=\"getFieldStyleObj(game.grid.halfPlayer1)\"></div>\r\n            <div class=\"absolute diagonal-split\" :style=\"getFieldStyleObj(game.grid.resources)\">\r\n            </div>\r\n            <div class=\"absolute text-center textVerticalCenter fontSize075em\"\r\n                :style=\"{ ...getFieldStyleObj(game.grid.resources), transform: 'rotate(-45deg)' }\">\r\n                Resources\r\n            </div>\r\n            <banana-bars :p1yellow=\"game.player1.resourcesAvailable - game.player1.resourcesEx\"\r\n                :p1blue=\"game.player1.resourcesEx\" :p1max=\"game.player1.resourcesMax\"\r\n                :p2yellow=\"game.player2.resourcesAvailable - game.player2.resourcesEx\"\r\n                :p2blue=\"game.player2.resourcesEx\" :p2max=\"game.player2.resourcesMax\" :max=\"game.resourcesMax\"\r\n                :style=\"getFieldStyleObj(game.grid.resources)\" :width=\"game.grid.resources.width\">\r\n            </banana-bars>\r\n\r\n            <!-- Player 1 -->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Deck)\" text=\"Deck\"\r\n                :length=\"game.player1.deck.length\" :icon=\"game.player1.deckIcon\"\r\n                @click=\"showLocationCards('deck', true)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Trash)\" text=\"Trash\"\r\n                :length=\"game.player1.trash.length\" :icon=\"game.player1.trashIcon\"\r\n                @click=\"showLocationCards('trash', true)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Base)\" text=\"Base\"\r\n                :icon=\"game.player1.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Shield)\" text=\"Shield\"\r\n                :length=\"game.player1.shield.length\" :icon=\"game.player1.shieldIcon\"\r\n                @click=\"showLocationCards('shield', true)\">\r\n            </deck-icon>\r\n            <div v-if=\"game\" class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player1Hand)\">\r\n            </div>\r\n            <div v-if=\"game\" class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player1Field)\">\r\n            </div>\r\n\r\n            <!-- Player 2-->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Deck)\" text=\"Deck\"\r\n                :length=\"game.player2.deck.length\" :icon=\"game.player2.deckIcon\"\r\n                @click=\"showLocationCards('deck', false)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Trash)\" text=\"Trash\"\r\n                :length=\"game.player2.trash.length\" :icon=\"game.player2.trashIcon\"\r\n                @click=\"showLocationCards('trash', false)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Base)\" text=\"Base\"\r\n                :icon=\"game.player2.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Shield)\" text=\"Shield\"\r\n                :length=\"game.player2.shield.length\" :icon=\"game.player2.shieldIcon\"\r\n                @click=\"showLocationCards('shield', false)\">\r\n            </deck-icon>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player2Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player2Field)\">\r\n            </div>\r\n\r\n            <!-- Highlight and TextZone-->\r\n            <div class=\"absolute vertical-scroll\" v-html=\"game.logs\" :style=\"getFieldStyleObj(game.grid.logZone)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.textZone)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardCenter)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardLeft)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.highlightCardRight)\">\r\n            </div>\r\n\r\n            <!-- Buttons -->\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEffect)\">\r\n                <v-btn target=\"_blank\"\r\n                    :class=\"{ bg: true, shine: !freeze && game.player1.hasEffects, w100p: true, h100p: true }\"\r\n                    @click=\"useEffect\" style=\"min-width:0px;\">\r\n                    <span>Use<br>Effect</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEndTurn)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg: true, shine: !freeze, w100p: true, h100p: true }\"\r\n                    style=\"min-width:0px;\" @click=\"nextTurn\">\r\n                    <span v-if=\"game.grid.buttonEndTurn.width > 50\">End<br>Turn</span><span v-else>End</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonLogs)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg2: true, w100p: true, h100p: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    Logs\r\n                </v-btn>\r\n            </div>\r\n        </span>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @click=\"showCard(card)\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <drag-drop-arrow id=\"0\" :sources=\"sources\" @drop=\"dropPoint\" @click=\"clickDrop\" :targets=\"targets\"\r\n            :freeze=\"freeze || game?.popup\">\r\n        </drag-drop-arrow>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game && game.popup\" class=\"absolute w100p h100p m5px\"\r\n            style=\"top:0px; display: flex; overflow: hidden; flex-direction: column; z-index: 80;\">\r\n            <div class=\"flex-grow\" style=\"min-height: 10%;\"> </div>\r\n            <div class=\"w100p\">\r\n                <div class=\"flex flex-wrap w100p\" style=\"justify-content:center\">\r\n                    <v-btn class=\"m10px\" style=\"background-color: #FFFF00F0;\" @click=\"showOrHidePopup(false)\">\r\n                        <span v-if=\"popupShow\">Hide Popup</span><span v-else>Show Popup</span>\r\n                    </v-btn>\r\n                    <div v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"popupShow\" style=\"background-color: #FFFF00F0; width:100%; overflow-y: auto;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p mp5px\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p horizontal-scroll\" v-if=\"game?.popup.cards && game?.popup.cards.length > 0\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\"\r\n                        :style=\"{ width: game?.grid.card100.height + 'px' }\">\r\n                        <div class=\"text-center colorBlack\">{{ card.location }} P{{ card.isPlayer1 ? '1' : '2' }}\r\n                        </div>\r\n                        <img :style=\"{ width: game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }\"\r\n                            @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game\" id=\"divTextEffect\" class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\"\r\n            :style=\"{\r\n                ...getFieldStyleObj(game.grid.textZone), 'z-index': 11, height: 0\r\n            }\">\r\n            <div v-html=\"text\"></div>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\"\r\n            :style=\"{ top: '80px', width: '100%', height: '0px', 'z-index': 13 }\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 70;\">\r\n        </gameCard>\r\n\r\n        <!-- Tuto Text -->\r\n        <div v-if=\"game && game.showTextTuto\" class=\"absolute\"\r\n            :style=\"{ ...getFieldStyleObj(game.showTextTuto), 'z-index': 170 }\">\r\n            <div class=\"w100p h100p  bg3 flex\" style=\"flex-direction: column; justify-content: center;\">\r\n                <div class=\"text-center\">{{ game.showTextTuto.text }}</div>\r\n                <div class=\"m5px bg\" style=\"align-self: flex-end;\">\r\n                    <v-btn @click=\"tutoNext\">Next</v-btn>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"absolute\" style=\"top:0px; left:0px;\">\r\n            <!-- Debug -->\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport cards from '../data/gundamCards.json';\r\nimport gameGundam from './gundam/game';\r\nimport gameCard from './card';\r\nimport bananaBars from './bananaBars.vue';\r\nimport deckIcon from './deckIcon.vue';\r\nimport dragDropArrow from './dragDropArrow.vue';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: ['deck1', 'deck2', 'quickstart', 'tuto'],\r\n    components: { gameCard, bananaBars, deckIcon, dragDropArrow },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: null,\r\n        text: null,\r\n        popupShow: true,\r\n        ignoreEvent: [],\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        sources: [],\r\n        targets: []\r\n    }),/*\r\n    watch: {\r\n        deck1() { this.setDecks();},\r\n        deck2() { this.setDecks();}\r\n    },*/\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n\r\n        this.cardList = cards.cards;\r\n        this.setDecks();\r\n    },\r\n    methods: {\r\n        setDecks() {\r\n            this.decklistPlayer1 = this.deck1;\r\n            this.decklistPlayer2 = this.deck2;\r\n            if (this.decklistPlayer1 && this.decklistPlayer2)\r\n                this.start();\r\n        },\r\n        start() {\r\n            this.game = gameGundam.setup(this.$vuetify.breakpoint.width,\r\n                this.$vuetify.breakpoint.height,\r\n                cards,\r\n                this.decklistPlayer1,\r\n                this.decklistPlayer2,\r\n                this.quickstart,\r\n                this.tuto);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.endTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameGundam.continue(this.game);\r\n            if (this.game.end) {\r\n                this.$emit('end', this.game.isVictory);\r\n                return;\r\n            }\r\n            if (this.game.popup || this.game.showTextTuto) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        useEffect() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.useEffect(this.game);\r\n            this.continue();\r\n        },\r\n        dropPoint(event) {\r\n            if (!event || !event.target || !event.target.text)\r\n                return;\r\n\r\n            if (event.target.text === 'Play')\r\n                this.playCard(event.source.card, null, this.game.grid.player1Field);\r\n            if (event.target.text === 'Pair')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player1Field);\r\n            if (event.target.text === 'Attack')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player2Field);\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameGundam.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        showLocationCards(location, isPlayer1) {\r\n            this.game = gameGundam.showLocationCards(this.game, location, isPlayer1);\r\n            this.refreshGame();\r\n        },\r\n        showOrHidePopup() {\r\n            this.popupShow = !this.popupShow;\r\n        },\r\n        tutoNext() {\r\n            this.game = gameGundam.tutoNext(this.game);\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            this.sources = this.game.player1.drags;\r\n\r\n            this.showTextEffect(this.game.showTitle, 'title', 'divTitleParent', { height: 0 });\r\n            this.showTextEffect(this.game.textEffect?.text, 'text', 'divTextEffect', { height: 0 });\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gameGundam.delay;\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gameGundam.delay;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = cardsToAnimate.length < 1 && !this.game.showTitle && !this.game.textEffect ? 10 : gameGundam.delay;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTextEffect(text, property, divId, to) {\r\n            if (!text || this.ignoreEvent.includes(property))\r\n                return;\r\n\r\n            const animationTime = 200;\r\n            this.ignoreEvent.push(property);\r\n            this[property] = text;\r\n\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 100 }, to, false, animationTime); }, 10 + animationTime * 4);\r\n            setTimeout(() => { this.ignoreEvent = this.ignoreEvent.filter(x => x !== property); }, 10 + animationTime * 6);\r\n        },\r\n\r\n        // --------- showCard\r\n        clickDrop(event) {\r\n            this.showCard(event.card);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.highlightCardCenter : { x: 0, y: 0, width: 200, height: 280 };\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gameGundam.delay);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=7cb2cbd3&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=7cb2cbd3&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            function getAnimValue(property, anim, time) {\r\n                let t = time;\r\n                let from = null;\r\n                let to = null;\r\n                let progress = 0;\r\n\r\n                if (anim.delay) {\r\n                    t = (t < 0.5) ? (t + 0.5) : (t - 0.5);\r\n                }\r\n\r\n                if (!anim.mid || !anim.mid[property]) {\r\n                    progress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n                    from = anim.from;\r\n                    to = anim.to;\r\n                }\r\n                else if (t < 0.5) {\r\n                    t = t / 0.5;\r\n                    progress=t;\r\n                    from = anim.from;\r\n                    to = anim.mid;\r\n                } else {\r\n                    t = (t - 0.5) / 0.5;\r\n                    progress=t;\r\n                    from = anim.mid;\r\n                    to = anim.to;\r\n                }\r\n\r\n                return from[property] + (to[property] - from[property]) * progress;\r\n            }\r\n\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = getAnimValue('x', anim, t);\r\n                const currentY = getAnimValue('y', anim, t);\r\n                const currentWidth = getAnimValue('width', anim, t);\r\n                const currentHeight = getAnimValue('height', anim, t);\r\n                const currentRotation = getAnimValue('rotation', anim, t);\r\n                const currentOpacity = getAnimValue('opacity', anim, t);\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.opacity = currentOpacity;\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = val1[property];\r\n            const value = val2[property];\r\n            if (value)\r\n                result[property] += value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static setIfNull(from, mid) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = from[property];\r\n            const value = mid[property];\r\n            if (value)\r\n                result[property] = value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.element = document.getElementById(anim.id);\r\n            if (!anim.element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.from = anim.from ?? {\r\n                x: this.pxStringToInt(anim.element.style.left),\r\n                y: this.pxStringToInt(anim.element.style.top),\r\n                rotation: anim.element.style.rotation,\r\n                height: anim.element.style.height,\r\n                width: anim.element.style.width,\r\n                delay: false\r\n            };\r\n            anim.from.rotation = anim.from.rotation ?? 0;\r\n            anim.from.opacity = anim.from.opacity ?? 1;\r\n            anim.from.height = anim.from.height ?? anim.element.clientHeight;\r\n            anim.to = anim.isIncrement ? this.add(anim.from, anim.to) : anim.to;\r\n            anim.mid = !anim.mid ? null : anim.isIncrement ? this.add(anim.from, anim.mid) : anim.mid;\r\n        });\r\n        this.animateElements(animations, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071,\n\t\"./empty.webp\": 8621,\n\t\"./empty2.webp\": 66626,\n\t\"./emptyOld.webp\": 40879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./CardsGundam.png\": 4859,\n\t\"./EncyclopedieGundam.png\": 15831,\n\t\"./GundamEncyclopedie.png\": 94627,\n\t\"./GundamLogo.jpg\": 30262,\n\t\"./GundamLogo2.png\": 68499,\n\t\"./cards/EXB-001.webp\": 43631,\n\t\"./cards/EXBP-001.webp\": 69411,\n\t\"./cards/GD01-004.webp\": 19862,\n\t\"./cards/GD01-004_p1.webp\": 91962,\n\t\"./cards/GD01-005.webp\": 80632,\n\t\"./cards/GD01-008.webp\": 13406,\n\t\"./cards/GD01-009.webp\": 39343,\n\t\"./cards/GD01-011.webp\": 57985,\n\t\"./cards/GD01-013.webp\": 25257,\n\t\"./cards/GD01-015.webp\": 29370,\n\t\"./cards/GD01-016.webp\": 24272,\n\t\"./cards/GD01-018.webp\": 62998,\n\t\"./cards/GD01-026.webp\": 83759,\n\t\"./cards/GD01-026_p1.webp\": 58145,\n\t\"./cards/GD01-028.webp\": 21495,\n\t\"./cards/GD01-030.webp\": 94485,\n\t\"./cards/GD01-031.webp\": 38537,\n\t\"./cards/GD01-034.webp\": 63515,\n\t\"./cards/GD01-040.webp\": 66732,\n\t\"./cards/GD01-041.webp\": 70958,\n\t\"./cards/GD01-068.webp\": 46040,\n\t\"./cards/GD01-070.webp\": 45504,\n\t\"./cards/GD01-070_p1.webp\": 85993,\n\t\"./cards/GD01-072.webp\": 8042,\n\t\"./cards/GD01-075.webp\": 52313,\n\t\"./cards/GD01-076.webp\": 85876,\n\t\"./cards/GD01-077.webp\": 97867,\n\t\"./cards/GD01-081.webp\": 18546,\n\t\"./cards/GD01-088.webp\": 14026,\n\t\"./cards/GD01-088_p1.webp\": 68437,\n\t\"./cards/GD01-089.webp\": 27418,\n\t\"./cards/GD01-091.webp\": 81708,\n\t\"./cards/GD01-097.webp\": 34893,\n\t\"./cards/GD01-099.webp\": 49483,\n\t\"./cards/GD01-100.webp\": 93330,\n\t\"./cards/GD01-100_p1.webp\": 92990,\n\t\"./cards/GD01-105.webp\": 67155,\n\t\"./cards/GD01-107.webp\": 66642,\n\t\"./cards/GD01-107_p1.webp\": 60768,\n\t\"./cards/GD01-117.webp\": 79955,\n\t\"./cards/GD01-118.webp\": 70779,\n\t\"./cards/GD01-118_p1.webp\": 57707,\n\t\"./cards/GD01-120.webp\": 90273,\n\t\"./cards/GD01-124.webp\": 8279,\n\t\"./cards/R-001.webp\": 96567,\n\t\"./cards/R-002.webp\": 38857,\n\t\"./cards/ST01-001.webp\": 16906,\n\t\"./cards/ST01-001_p1.webp\": 6864,\n\t\"./cards/ST01-002.webp\": 23582,\n\t\"./cards/ST01-005.webp\": 7162,\n\t\"./cards/ST01-007.webp\": 56694,\n\t\"./cards/ST01-008.webp\": 70791,\n\t\"./cards/ST01-010.webp\": 45022,\n\t\"./cards/ST01-011.webp\": 56581,\n\t\"./cards/ST01-011_p1.webp\": 1978,\n\t\"./cards/ST01-012.webp\": 13866,\n\t\"./cards/ST01-013.webp\": 79915,\n\t\"./cards/ST01-015.webp\": 51310,\n\t\"./cards/ST01-016.webp\": 86882,\n\t\"./cards/ST02-001.webp\": 58864,\n\t\"./cards/ST02-001_p1.webp\": 76074,\n\t\"./cards/ST02-002.webp\": 23941,\n\t\"./cards/ST02-005.webp\": 55045,\n\t\"./cards/ST02-010.webp\": 99834,\n\t\"./cards/ST02-012.webp\": 57160,\n\t\"./cards/ST02-013.webp\": 55214,\n\t\"./cards/ST02-015.webp\": 34078,\n\t\"./cards/ST03-007.webp\": 82235,\n\t\"./cards/ST03-008.webp\": 55340,\n\t\"./cards/ST03-011.webp\": 56486,\n\t\"./cards/ST03-011_p1.webp\": 92329,\n\t\"./cards/ST03-016.webp\": 77816,\n\t\"./cards/ST04-001.webp\": 22859,\n\t\"./cards/ST04-001_p1.webp\": 46858,\n\t\"./cards/ST04-002.webp\": 18971,\n\t\"./cards/ST04-005.webp\": 54511,\n\t\"./cards/ST04-010.webp\": 80363,\n\t\"./cards/ST04-013.webp\": 14005,\n\t\"./cards/ST04-015.webp\": 81633,\n\t\"./cards/T-001.webp\": 32442,\n\t\"./cards/T-002.webp\": 46514,\n\t\"./cards/T-003.webp\": 88739,\n\t\"./cards/T-006.webp\": 17071,\n\t\"./cards/empty.webp\": 8621,\n\t\"./cards/empty2.webp\": 66626,\n\t\"./cards/emptyOld.webp\": 40879,\n\t\"./centerZone.png\": 17852,\n\t\"./centerZone2.png\": 75025,\n\t\"./centerZone3.png\": 95130,\n\t\"./deck1.png\": 69877,\n\t\"./deck2.png\": 85350,\n\t\"./deck3.png\": 58251,\n\t\"./deck4.png\": 13665,\n\t\"./deck5.png\": 35931,\n\t\"./deck6.png\": 23094,\n\t\"./gundam.png\": 63111,\n\t\"./gundam2.png\": 98815,\n\t\"./head.png\": 83639,\n\t\"./wallpaper.webp\": 45648,\n\t\"./wallpaper2.webp\": 81121,\n\t\"./wingzero2.gif\": 70898\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73890;","var map = {\n\t\"./Gundam/cards/empty.webp\": 8621\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50655;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["render","_vm","this","_c","_self","staticClass","_l","sources","point","index","key","class","absolute","pointCircle","colorYellow","show","style","top","y","left","x","width","height","attrs","on","$event","drag","$emit","display","source","targets","filter","target","colorGreen","_v","_s","text","staticStyle","id","color","staticRenderFns","name","props","component","components","arrowDiv","data","delay","animations","mouse","watch","resetSources","mounted","window","addEventListener","updateMouse","mouseUp","beforeUnmount","removeEventListener","methods","e","touch","touches","length","clientX","clientY","updateAnimation","forEach","element","document","getElementById","animate","freeze","helperAnimation","setTimeout","isInside","box","minX","minY","maxX","maxY","createAnimation","find","from","destination","animation","rotation","getAngleDeg","widthHalf","to","mid","opacity","isIncrement","angleRad","Math","atan2","PI","refreshG","getFieldStyleObj","game","transform","player1","resourcesAvailable","resourcesMax","player2","grid","resources","domProps","logs","bg","w100p","h100p","buttonEndTurn","buttonLogs","bg2","card","choice","popup","cards","position","effectsLuncher","static","trigger","isEffectExisting","card1","result","lunchEffectTriggerForOneCard","effects","getEffects","cancelMoveToTrash","getCancelMoveToTrash","addTaskFirst","applyEffectCard","card2","isExistingCard1Effect","isExistingCard2Effect","tasks","push","cardUnit","cardPilot","addTasksFirst","ignorePair","map","fx","pair","concat","effectsThatCancelMoveToTrash","sendToHand","deploy","effect","includes","task","getEffectText","join","tasksDelay","hide","showCardsEffect","applyEffect","addTasks","toString","value","effect2","ap","hp","incruises","removeEndTurn","players","player","field","recalculateApHp","lost","log","opponent","targetResult","handleEffectTarget","stop","end","isEffectMatchConditions","cost","playCardCost","oneTurn","isConditionsAfterRespected","rest","setActive","_defineProperty","effectsTarget","cardChoice","popupTargetCards","pairedWith","isCardUnit","active","hadBlocker","hand","targetId","attribute","targetAttribute","hasEffect","Error","choices","optional","isPlayer1","mainEffects","trigger_main","refreshPlayersMainEffect","hasEffects","lunchMainEffectCard","positioner","screenWidth","screenHeight","border2","border","widthMargin","heightMargin","boxHeight","boxWidth","isVertical","card100","player2Hand","location","locationHand","player2Field","locationField","centerZone","centerZoneP2","player1Field","player1Hand","createVerticalGrid","createHorizontalGrid","cardSizeReduce","player1Deck","player1Trash","boxWidthVertical","buttonEffect","halfPlayer1","halfPlayer2","heightQuarter","textZone","logZone","highlightCardCenter","highlightCardLeft","getCardSize","highlightCardRight","drop","boxHeightVertical","player1Shield","locationShield","player1Base","locationBase","locationDeck","locationTrash","player2Shield","player2Base","player2Deck","player2Trash","clone","count","cardHeightPercent","desiredWidth","desiredHeight","cardSize","total","degree","wrapCut","centerEmptyZone","zoneHeight","totalCards","cardSizeModified","floor","indexModified","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","totalWidth","elementWidth","sizeWidth","ratio","margin","maxSize","i","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","ceil","ratioInverted","heightDesired","widthDesired","selectable","max","isCostAvailable","level","isTurnPlayer","canAttack","cardAction","askForActionCardsForThisPlayer","property","noActionCard","trigger_action","taskAttack","move","actionCard","playerIndex","conditions","isConditionsRespected","conditionsAfter","condition","hasAttribute","trash","isCardCommand","cardMove","cardSpawn","moveCard","spawnIfNot","addIn","positions","deck","zindex","locationFrom","locationTo","removeByIndex","splice","onField","isTemporaryCard","fadeOut","hidestat","verso","handleMainEffectsCard","link","needToRefreshAllField","cardPlay","zone","playFromHand","prepareAttack","playThisCard","sendBack","sendCardBackToSquareOne","isSamePlayer","addTaskPos2","attack","attacker","breach","wrongCost","regularPlay","positionDrag","refresh","playCost","isPilot","isCardPilot","isCommand","pilotOrCommand","askPilotOrCommand","isExisting","effectsAlreadyDone","trigger_onplay","isCardBase","base","addTasksPos2","trigger_command","resourcesEx","refreshPlayerArea","cardsToRemoveIndex","setSelectable","resource","baseIcon","shieldIcon","getIcon","shield","deckIcon","trashIcon","textEffect","useZoneSize","bgposition","getWrapPosition","adjustRotationSize","getPairPosition","percent","previous","reverPercentHalf","loseX","loseY","positionOld","wait","showTitle","triggerRefreshAlreadyDone","lunchEffectTriggerMultiple","trigger_refresh","needTaskEndRefresh","refreshOnlyTextEffect","cardHighlight","refreshFieldAndHand","refreshDragAndDrop","drags","unitWithoutPilots","drops","unit","getPos","ennemyTarget","isValidTarget","spawnOrMove","costOrigin","reduceValue","JSON","stringify","createCard","values","undefined","min","playToken","destroyUnit","hpMax","hpOrigin","hpMaxOrigin","getAndRemoveFirst","bottomCard","shieldProtection","cardPlayer","getPlayer","alreadyDone","blocker","highManeuver","addTask","play","attackActiveEnnemy","immuneAp","step","attackStep","stepSelectBlocker","selectBlocker","stepSelectActionCards","askForActionCards","stepSelectCardOpponent","selectCardOpponent","stepEffectBattle","effectBattle","stepShowFight","showFight","stepFight","fight","nextStep","array","indexOf","blockers","burstEffect","trigger_burst","showCards","battleEffectsAlreadyDone","trigger_battle","damage","activeBreach","tasksAttackerDead","setup","quickstart","resourceStart","handStartLength","createPlayer","decklistPlayer1","decklistPlayer2","random","fields","playerOpponent","decklist","createDeck","empty","split","line","info","quantity","parseInt","cardList","createUniqueRare","sortRandom","rareKeyWord","rareCards","gundamCards","files","replace","rareCard","firstCard","sort","removeIds","addShielsAndBase","nextTurn","shieldStartLength","deletePopup","handleAiPopup","actionPlayer","actionOpponent","tasksString","taskEndRefresh","indexTask","addTasksIndex","first","resetZIndex","message","alert","obj","Object","assign","cla","useTuto","ignore","c","getOwnPropertyNames","method","list","slice","valueOld","valueNew","title","taskTextShow","fxRed","hideFx","fxText","turn","getOpponent","global","trigger_end","getPlayerTurn","playerId","startTasks","idTask","taskMoveAndShowCenter","removeOneTurnEffect","setSelectableFalse","baseText","turnIndex","trigger_turn","tuto","showTextTuto","next","tutoSmall","tutoFullScreen","isLink","isExistingPairEffects","effectsAlreadyDonePair","lunchEffectTriggerForTwoCard","trigger_onpair","isExistingLinkEffects","effectsAlreadyDoneLink","trigger_onlink","locationPair","apOrigin","ai","haveBeenRefresh","AiUsed","refreshAiTurn","taskAdded","cardsAvailable","combos","getAiCombos","handleAiHand","handleAiField","endTurn","selectChoiceNull","aiCombos","units","pilots","pilotLinkUnits","getAiCombosPilotLinkUnit","pilotLinkUnitsOnFieldWithEffects","getAiCombosPilotLinkUnitFieldWithEffects","costRemaining","pilot","a","b","unitHasEffect","hasLinkEffect","aiPlay","bases","playCombo","combo","handleStrategy","getPlayCardTasks","unitsThatCanAttack","notEnoughShield","getNotEnoughShield","getTarget","declareAiAttack","attackMinimimForWin","aiStrategy","handleStrategyCard","strategy","hasActiveUnitThatNeedRepair","hasInactiveBlocker","scripts","utils","cardLife","addFunction","createGrid","continue","isStart","mulligan","endAnimation","handleTasks","newTurnForAI","isVictory","bgYellow","circle15px","cursor","shine","getRedFxStyle","_e","require","folder","preventDefault","dead","getBananaStyle","p1max","p1yellow","p1blue","p2max","p2yellow","p2blue","getTextStyle","angle","anglePercent","anglePercentMinusMargin","background","percentIncruise","leftValue","getParabolicY","topValue","y0","y50","y100","t","icon","gameCard","bananaBars","dragDropArrow","cardCenter","popupShow","ignoreEvent","body","overflow","setDecks","deck1","deck2","start","gameGundam","$vuetify","breakpoint","refreshGame","animTextEffect","useEffect","dropPoint","event","playCard","selectChoice","selectChoiceCard","showLocationCards","showOrHidePopup","tutoNext","showTextEffect","beginAnimation","animationTime","cardsToAnimate","divId","clickDrop","showCard","center","getCard","getFieldStyle","w","h","duration","anim","animateElements","startTime","performance","now","update","currentTime","getAnimValue","time","progress","pow","elapsedTime","currentX","currentY","currentWidth","currentHeight","currentRotation","currentOpacity","requestAnimationFrame","val1","val2","properties","animateMultiple","pxStringToInt","clientHeight","add","console","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}