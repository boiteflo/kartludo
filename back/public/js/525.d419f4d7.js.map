{"version":3,"file":"js/525.d419f4d7.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/cardAttack.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\n        bgRed2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 'locationHand'\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card2.x, _vm.game.grid.centerMini.card2.y,\n        _vm.game.grid.centerMini.card2.width, _vm.game.grid.centerMini.card2.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgYellow absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.text.x, _vm.game.grid.centerMini.text.y,\n        _vm.game.grid.centerMini.text.width, _vm.game.grid.centerMini.text.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"13\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static handleEffects(player, card1, card2, trigger) {\r\n        const effectsRemainings = this.getEffectsRemaining(trigger, card1, card2);\r\n        if (!effectsRemainings || effectsRemainings.length < 1)\r\n            return {};\r\n\r\n        const text = effectsRemainings.map(x => this.getEffectText(x)).join('<br>');\r\n        const delay = global.delay;\r\n        const isShowingEffect = global.cardHighlight.find(x => x.index === card1.index);\r\n\r\n        if (!isShowingEffect) {\r\n            global.game.tasks = [{ id: gameTask.taskCardsToMiniCenter.name, delay, card1, card2, text }]\r\n                .concat(global.game.tasks);\r\n            return { stop: true };\r\n        } else\r\n            gameTask.addTasks(global.game.tasks, [\r\n                { id: gameTask.taskRefreshField.name, isPlayer1: card1.isPlayer1 },\r\n                { id: gameTask.taskTextHide.name, delay },\r\n                { id: gameTask.taskTextDelete.name },\r\n            ]);\r\n\r\n        return this.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        const result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        card1.effectsRemaining = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                alert('cant do that');\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n\r\n            return this[effect.id](player, card1, card2, effect);\r\n        }\r\n    }\r\n\r\n    static get1ShieldToHand(player, card1, card2, effect) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card = player.shield.splice(0, 1)[0];\r\n        const text = 'Get one shield to hand';\r\n        card.location = player.positions.shield.location;\r\n        gameTask.addTasks(global.game.tasks, [{\r\n            id: gameTask.taskMove.name,\r\n            card1: card,\r\n            to: global.locationHand,\r\n            isPlayer1: player.isPlayer1\r\n        }]);\r\n        global.logEffect(effect, text);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(player, card1, card2, effect) {\r\n        if (!global.game.cardChoice) {\r\n            const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        else {\r\n            const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n            player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n            global.deletePopup();\r\n        }\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(player, card1, card2, effect) {\r\n        if (player.base || card2.index)\r\n            return;\r\n\r\n        const shield = player.shield[0];\r\n        const stop = shield.level < effect.value;\r\n        if (stop)\r\n            global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n        return { stop };\r\n    }\r\n\r\n    static gainThisTurn(player, card1, card2, effect) {\r\n        const effectClone = global.clone(effect);\r\n        delete effectClone.target;\r\n        effectClone.effect = effectClone.effect2;\r\n        global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n        this.applyEffect(player, card2, null, effectClone);\r\n        card2.removeEndTurn = [effectClone];\r\n    }\r\n\r\n    static incruise(player, card1, card2, effect) {\r\n        card1.ap += effect.ap;\r\n        card1.hp += effect.hp;\r\n        global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(player, card1, card2, effect) {\r\n        gameTask.addTasks(global.game.tasks, [\r\n            { id: gameTask.taskCardToCenter.name, card1, isPlayer1: player.isPlayer1 },\r\n            { id: gameTask.taskMove.name, card1, to: global.locationHand, isPlayer1: player.isPlayer1 }\r\n        ]);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return { stop: true };\r\n    }\r\n\r\n    static sendToField(player, card1, card2, effect) {\r\n        global.move(player, card1, global.locationShield, global.locationField);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return { stop: true, cancel: true, refreshHandOpponent: true };\r\n    }\r\n\r\n    static sendToBase(player, card1, card2, effect) {\r\n        card1.location = player.positions.shield.location;\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard.name, card1: card1, zone: player.positions.field }]);\r\n        return { stop: true };\r\n    }\r\n\r\n    static placeExResource(player, card1, card2, effect) {\r\n        player.resourcesEx += effect.value;\r\n        player.resourcesAvailable += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n    }\r\n\r\n    static placeRestedResource(player, card1, card2, effect) {\r\n        player.resourcesMax += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n    }\r\n\r\n    static breach(player, card1, card2, effect) {\r\n        if (!card1.breach || card1.breach < effect.value) {\r\n            card1.breach = effect.value;\r\n            global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static deploy(player, card1, card2, effect) {\r\n        const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n        if (targets.length < 1) return;\r\n        const card = targets[0];\r\n        card.selectable = false;\r\n        card.canAttack = false;\r\n        global.move(player, card, card.location, global.locationField);\r\n        global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n        this.apply(GameGundamEffect.onplay, player, card, null);\r\n    }\r\n\r\n    static attackActiveEnnemy(player, card1, card2, effect) {\r\n        if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n            card1.attackActiveEnnemy = effect.value;\r\n            global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(player, card1, card2, effect) {\r\n        if (card1.breach) {\r\n            if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                card1.immuneAp = effect.value;\r\n                global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n    static cardHighlight = [];\r\n    static needTaskEndRefresh = false;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'locationEmpty';\r\n    static locationTrash = 'locationTrash';\r\n    static locationDeck = 'locationDeck';\r\n    static locationShield = 'locationShield';\r\n    static locationHand = 'locationHand';\r\n    static locationField = 'locationField';\r\n    static locationBase = 'locationBase';\r\n    static locationResource = 'locationResource';\r\n    static locationPair = 'locationPair';\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        else if (location == this.locationPair) return 'pair';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo, ignoreRefresh);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card.isTemporaryCard)\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo, ignoreRefresh);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        if (!ignoreRefresh) {\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField.name, isPlayer1: player.isPlayer1 }]);\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass gameTask {\r\n    static addTasks(list, tasks) {\r\n        global.needTaskEndRefresh = true;\r\n        tasks.forEach(task => list.push(task));\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid) {\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if (task)\r\n            delete (task.delay);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1 : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1 : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n\r\n            const result = this[task.id](game, task, player);\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (global.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        global.needTaskEndRefresh = false;\r\n        global.cardHighlight = [];\r\n        game.manager.refreshFieldAndHand(game.player1);\r\n        game.manager.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static taskRefreshField(game, task, player) {\r\n        game.manager.refreshFieldAndHand(player);\r\n    }\r\n\r\n    static taskTitleShow(game, task, player) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task, player) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: global.clone(global.grid.centerMini.text)\r\n        };\r\n        game.textEffect.to = global.clone(game.textEffect.position);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static taskTextHide(game, task, player) {\r\n        if (!game.textEffect)\r\n            return;\r\n\r\n        game.textEffect.position.height = global.grid.centerMini.text.height;\r\n        game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n        game.refreshOnlyTextEffect = true;\r\n    }\r\n\r\n    static taskTextDelete(game, task, player) {\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n    }\r\n\r\n    static taskMove(game, task, player) {\r\n        global.spawnOrMove(player, task.card1, task.from, task.to, task.ignoreRefresh);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        const card = global.spawnOrMove(player, task.card1, task.from, task.to, task.ignoreRefresh);\r\n        const taskCenter = { id: this.taskCardToCenter.name, card1: card, isPlayer1: task.isPlayer1, delay: global.delay };\r\n        global.game.tasks = global.addListInArrayAfterIndex(global.game.tasks, 1, [taskCenter]);\r\n    }\r\n\r\n    static taskCardsToMiniCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? global.grid.centerMini.card1 : global.grid.centerMini.card3;\r\n        task.card1.to = global.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n\r\n        if(task.card2){\r\n            global.spawnIfNot(task.card2);\r\n            global.cardHighlight.push(task.card2);\r\n            task.card2.to = global.clone(global.grid.centerMini.card2);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n        }\r\n\r\n        if(task.text){\r\n            this.taskTextShow(game, task, player);\r\n        }\r\n    }\r\n\r\n    static taskCardToCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        task.card1.to = global.clone(global.grid.center);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n    }\r\n\r\n    static taskAttack(game, task, player) {\r\n        game.taskAttack = task;\r\n        return game.manager.attack(task.player, task.opponent, task.attacker, task.target, task.zone, task.breach);\r\n    }\r\n\r\n    static taskPopup(game, task, player) {\r\n        if (!game.cardChoice && !game.choice) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        }\r\n    }\r\n\r\n    static taskPlayCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, task.regularPlay);\r\n    }\r\n\r\n    static taskPairCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.pair(cardPlayer, task.card1, task.card2);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        // grid.field.cardHeightPercent = 0.54;\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6, grid.field.cardHeightPercent);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width, height, location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = 5; // (height - (grid.centerMini.card1.height * 1)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.card3 = { ...grid.centerMini.card1, x: grid.centerMini.card1.x + (grid.centerMini.card1.width / 2) };\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = global.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!global.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        const isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n        global.isPlayer1 = isPlayer1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawnOrMove(global.game.player1, null, global.locationDeck, global.locationHand, true);\r\n            global.spawnOrMove(global.game.player2, null, global.locationDeck, global.locationHand, true);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n\r\n        // TO DO : create deck by using decklist\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        global.delay = manager.getAnimDuration();\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskTitleShow.name, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskMoveAndShowCenter.name, isPlayer1: global.isPlayer1, from: global.locationDeck, to: global.locationHand, ignoreRefresh: true }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        gameTask.addTasks(game.tasks, [{id:gameTask.taskPlayCard.name,card1, card2, zone, regularPlay:true}]);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.manager.selectChoiceCard(game, card);\r\n        return game;\r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        game.manager.selectChoice(game, choice);\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardPlay {\r\n    static playFromHand(player, card1, card2, zone, regularPlay) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = regularPlay && player.resourcesAvailable < card1.cost;\r\n\r\n        if (!isSamePlayer || zone.location == global.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playCard(player, card1, card2, zone, regularPlay);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, playCost) {\r\n        let isPilot = global.isCardPilot(card1);\r\n        let isCommand = global.isCardCommand(card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(card1, card2);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        global.spawnIfNot(card1);\r\n\r\n        const effectResult = effects.handleEffects(player, card1, card2, effects.onplay);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        if (global.isCardUnit(card1) && player.field.length < 6) {\r\n            card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (global.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskMove.name, card1: player.base[0], to: global.locationTrash, isPlayer1: card1.isPlayer1 }]);\r\n\r\n            global.move(player, card1, card1.location, global.locationBase);\r\n            card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && card2 && global.isCardUnit(card2)) {\r\n            if (card1.pair || card2.pair || card1.isPaired || card2.isPaired) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPairCard.name, card1, card2 }]);\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            const effectResult = effects.handleEffects(player, card1, card2, effects.command);\r\n            if (effectResult.stop)\r\n                return effectResult;\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n\r\n            global.move(player, card1, card1.location, global.locationTrash, true);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static playCardCost(player, card) {\r\n        let costRemaining = card.cost;\r\n        if (player.resourcesEx > 0) {\r\n            costRemaining = Math.max(0, costRemaining - player.resourcesEx);\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - card.cost);\r\n        }\r\n        player.resourcesAvailable -= costRemaining;\r\n    }\r\n\r\n    static askPilotOrCommand(card1, card2) {\r\n        if (!card2 || !global.isCardPilot(card1) || !global.isCardCommand(card1))\r\n            return;\r\n\r\n        if (!global.game.choice) {\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Do you want to play as pilot or command ?',\r\n                choices: [{ text: 'Pilot' }, { text: 'Command' }]\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        } else {\r\n            const isPilot = global.game.choice.text === 'Pilot';\r\n            const isCommand = global.game.choice.text === 'Command';\r\n            global.deletePopup();\r\n            return { isPilot, isCommand };\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardAttack {\r\n    static attack(player, card1, card2, zone, breach) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        const blockers = opponent.field.filter(x => x.block && x.active);\r\n        let selectedAsBlocker = false;\r\n        if (!global.game.blocker && blockers.length > 0) {\r\n            if (!global.game.cardChoice && !global.game.choice) {\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select a blocker ?',\r\n                    cards: blockers,\r\n                    choices: [{ text: 'none' }]\r\n                }\r\n                ].concat(global.game.tasks);\r\n                return { stop: true };\r\n            }\r\n\r\n            card2 = global.game.cardChoice;\r\n            global.game.blocker = card2;\r\n            selectedAsBlocker = true;\r\n        }\r\n\r\n        /*const actionCardResult = cardAction.askForActionCards(player, opponent);\r\n        if (actionCardResult && actionCardResult.stop)\r\n            return actionCardResult;*/\r\n\r\n        delete (global.game.blocker);\r\n        global.deletePopup();\r\n\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            const isValidTarget = card1.attackActiveEnnemy ? card2.level < card1.attackActiveEnnemy : selectedAsBlocker || !card2.active;\r\n            if (!isValidTarget)\r\n                return { sendBack: true };\r\n\r\n            this.startAttackAnimation(player, opponent, card1, card2, zone, breach);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return { end: true, isPlayer1: opponent.isPlayer1 };\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            this.startAttackAnimation(player, opponent, card1, target, zone);\r\n            return;\r\n        }        \r\n        \r\n        global.setActive(card1, false);\r\n        // TO DO : play card effect at center\r\n        let card = opponent.shield.splice(0, 1)[0];\r\n        const effectResult = effects.apply(effects.burst, opponent, card, card1);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        gameTask.addTasks(global.game.tasks, [\r\n            { id: gameTask.taskCardToCenter.name, card1: card, isPlayer1: card.isPlayer1, delay: global.delay },\r\n            { id: gameTask.taskMove.name, card1: card, to: global.locationTrash, isPlayer1: card.isPlayer1 },\r\n        ]);\r\n\r\n        return { sendBack: true };\r\n    }\r\n    \r\n    static startAttackAnimation(player, opponent, attacker, target, zone, breach) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardsToMiniCenter.name, delay: global.delay, card1:attacker, card2: target },\r\n            { id: gameTask.taskAttack.name, player, opponent, attacker, target, delay, zone, breach }\r\n            ]);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return effectResult;\r\n        }\r\n\r\n        const delay = global.delay;\r\n\r\n        let damage = breach ? breach : attacker.ap;\r\n        if (target.immuneAp && damage < target.immuneAp)\r\n            damage = 0;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        if (attacker.immuneAp && attacker < target.immuneAp)\r\n            damage = 0;\r\n        attacker.hp -= damage;\r\n\r\n        const activeBreach = !breach && global.isCardUnit(target) && attacker.breach && target.hp < 1;\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : global.delay;\r\n            tasks.push({ id: gameTask.taskMove.name, delay: delayForTarget, card1: attacker, to: global.locationTrash, isPlayer1: attacker.isPlayer1 });\r\n        }\r\n        else if (!activeBreach)\r\n            tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskMove.name, delay, card1: target, to: global.locationTrash, isPlayer1: target.isPlayer1 });\r\n        }\r\n        else\r\n            tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n\r\n        if (activeBreach)\r\n            this.attack(player, attacker, null, zone, attacker.breach);\r\n    }\r\n}\r\n\r\n\r\nexport default cardAttack;\r\n","import global from '../global';\r\nimport cardPlay from './cardPlay';\r\nimport cardAttack from './cardAttack';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = global.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (global.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, regularPlay) {\r\n        const noDropZone = !card2 && !zone;\r\n        let result = {};\r\n        if (noDropZone)\r\n            result.sendBack = true;\r\n\r\n        else if (card1.location === global.locationHand)\r\n            result = cardPlay.playFromHand(player, card1, card2, zone, regularPlay);\r\n        else if (card1.location === global.locationField)\r\n            result = this.attack(player, card1, card2, zone);\r\n        else\r\n            result = cardPlay.playCard(player, card1, card2, zone, false);   \r\n\r\n        if (result && result.sendBack)\r\n            this.sendCardBackToSquareOne(card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static attack(player, card1, card2, zone, breach) {\r\n        return cardAttack.attack(player, card1, card2, zone, breach);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        return cardAttack.attackCard(player, opponent, attacker, target, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.cardChoice = card;\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.choice = choice;\r\n    }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\n//import gameTask from '../gameTask';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 500; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.move(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.move(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        // game.player1.shield = [global.createCard(\"ST02-013\")].concat(game.player1.shield);\r\n        // game.player2.shield = [global.createCard(\"ST02-013\")].concat(game.player2.shield);\r\n\r\n        const playerOpponent = global.isPlayer1 ? game.player1 : game.player2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        /*gameTask.addTasks(game.tasks, [{\r\n            id: gameTask.taskPopup.name,\r\n            text: 'Muligan ?',\r\n            choices: [{ text: 'yes', id: 'muligan' }, { text: 'no', id: 'muliganNo' }]\r\n        }]);*/\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawnOrMove(player, card, global.locationBase, global.locationBase);\r\n        card.isTemporaryCard = true;\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        if (player.resourcesMax < 10)\r\n            player.resourcesMax += 1;\r\n\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n\r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand, false, 7);\r\n        positioner.refresh(player.field, player.positions.field, false, 3);\r\n        positioner.refresh(player.base, player.positions.base, true);\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        global.game.cards = global.game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, regularPlay) {\r\n        const result = cardHandler.play(player, card1, card2, zone, regularPlay);\r\n\r\n        if (result && result.end)\r\n            this.end(result.isPlayer1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        const message = isPlayer1 ? 'Defeat': 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2, zone, breach) {\r\n        cardHandler.attackCard(player, opponent, card1, card2, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        if (choice.id && choice.id.startsWith('muligan')) {\r\n            global.deletePopup();\r\n\r\n            if (choice.id == 'muligan')\r\n                this.doMuligan(game, game.player1);\r\n        }\r\n\r\n        cardHandler.selectChoice(game, choice);\r\n    }\r\n\r\n    static doMuligan(game, player) {\r\n        player.deck = global.sortRandom(player.deck.concat(player.hand));\r\n        const removeIds = player.hand.map(x => x.index);\r\n        game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n        player.hand = [];\r\n\r\n        for (let i = 0; i < this.getHandStartLength(); i++)\r\n            global.spawnOrMove(player, null, global.locationDeck, global.locationHand, true);\r\n\r\n        this.refreshFieldAndHand(player);\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        return global.pair(player, card1, card2);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=9ee1a63e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9ee1a63e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgRed2: box.isPlayer1 == game.isPlayer1 && box.location === 'locationHand'\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card2.x, game.grid.centerMini.card2.y,\r\n            game.grid.centerMini.card2.width, game.grid.centerMini.card2.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgYellow absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.text.x, game.grid.centerMini.text.y,\r\n            game.grid.centerMini.text.width, game.grid.centerMini.text.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:13\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if(this.freeze)\r\n                return;\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if(this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice){\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card) \r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if(this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if(!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1  || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=55c6073a&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=55c6073a&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"55c6073a\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.delay) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if(duration === -1) \r\n            duration = global.delay;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-107.webp\": 66642,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize1em","textVerticalCenter","bgRed2","isPlayer1","style","getFieldStyle","grid","game","centerMini","card2","x","y","_e","text","textEffect","position","domProps","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","GameGundamEffect","static","cards","removeEndTurn","forEach","lost","fx","effect","push","global","log","join","player","card1","trigger","effectsRemainings","getEffectsRemaining","length","map","getEffectText","delay","isShowingEffect","cardHighlight","find","index","gameTask","addTasks","tasks","id","taskRefreshField","taskTextHide","taskTextDelete","apply","taskCardsToMiniCenter","concat","stop","result","toString","value","target","effect2","ap","hp","multiTriggers","onpair","onlink","effects","includes","effectsRemaining","nothing","toBeRemoved","applyEffect","oneTurn","alert","logEffect","JSON","stringify","shield","splice","location","positions","taskMove","to","locationHand","cardChoice","getAndRemoveFirst","deck","taskPopup","select","bottomCard","popup","deletePopup","base","level","effectClone","clone","taskCardToCenter","move","locationShield","locationField","cancel","refreshHandOpponent","taskPlayCard","zone","field","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","targets","hand","attribute","canAttack","onplay","attackActiveEnnemy","immuneAp","_defineProperty","locationEmpty","locationDeck","locationBase","locationResource","locationPair","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnIfNot","addIn","player1","player2","zindex","from","getLocationArrayProperty","removeByIndex","isTemporaryCard","active","hidestat","locationTrash","pair","isPaired","needToRefreshAllField","cardUnit","isCardUnit","cardPilot","isCardPilot","isLink","effectResult","handleEffects","getNextIndex","degree","rotation","array","list","slice","sort","Math","random","actionPlayer","actionOpponent","type","isCardCommand","logs","obj","Object","assign","needTaskEndRefresh","task","isEqual","task1","task2","taskid","reverse","t","refresh","wait","taskEndRefresh","manager","refreshFieldAndHand","showTitle","refreshOnlyTextEffect","spawnOrMove","taskCenter","addListInArrayAfterIndex","destination","card3","taskTextShow","center","taskAttack","attack","opponent","attacker","cardPlayer","getPlayer","playCard","regularPlay","positioner","border","border2","divide","widthB","heightB","boxbig","getCardSize","cardHeightPercent","card6","min","createZone","x15","y8","y7","y9","y6","y10","y5","trash","y11","y4","resource","y12","y3","y13","x1","y0","x14","x2","y1","y2","show","p1","p2","useZoneSize","wrapCut","zoneHeight","cardSize","bgposition","getWrapPosition","getPairPosition","count","desiredWidth","desiredHeight","total","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","sizeWidth","gameManager","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","playerId","taskTitleShow","taskMoveAndShowCenter","handleTasks","endAnimation","positionDrag","positionOld","selectChoiceCard","selectChoice","cardPlay","isSamePlayer","wrongCost","cost","sendBack","playCost","isPilot","isCommand","pilotOrCommand","askPilotOrCommand","playCardCost","isCardBase","sendCardBackToSquareOne","taskPairCard","command","costRemaining","max","choices","cardAttack","getPlayerTurnOpponent","blockers","block","selectedAsBlocker","blocker","isValidTarget","startAttackAnimation","end","setActive","burst","battle","damage","activeBreach","dead","delayForTarget","cardHandler","isCostAvailable","isTurnPlayer","noDropZone","playFromHand","attackCard","createDefaultBase","playerOpponent","getPlayerTurn","removeOneTurnEffect","baseText","number","cardsToRemoveIndex","setSelectable","play","message","startsWith","doMuligan","removeIds","top","transform","cursor","$emit","h100p","folder","preventDefault","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}