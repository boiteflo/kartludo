{"version":3,"file":"js/24.12788f20.js","mappings":"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","sources":["webpack://front/./src/games/dragDropArrow.vue","webpack://front/./src/games/arrowDiv.vue","webpack://front/src/games/arrowDiv.vue","webpack://front/./src/games/arrowDiv.vue?cb92","webpack://front/./src/games/arrowDiv.vue?dbad","webpack://front/src/games/dragDropArrow.vue","webpack://front/./src/games/dragDropArrow.vue?0b04","webpack://front/./src/games/dragDropArrow.vue?32c4","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effectsLuncher.js","webpack://front/./src/games/gundam/effectsTarget.js","webpack://front/./src/games/gundam/mainEffects.js","webpack://front/./src/games/gundam/positioner.js","webpack://front/./src/games/gundam/selectable.js","webpack://front/./src/games/gundam/cardAction.js","webpack://front/./src/games/gundam/conditions.js","webpack://front/./src/games/gundam/cardMove.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/refresh.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/gundam/attack.js","webpack://front/./src/games/gundam/setup.js","webpack://front/./src/games/gundam/popup.js","webpack://front/./src/games/gundam/tasks.js","webpack://front/./src/games/gundam/utils.js","webpack://front/./src/games/gundam/show.js","webpack://front/./src/games/gundam/turn.js","webpack://front/./src/games/gundam/tuto.js","webpack://front/./src/games/gundam/pair.js","webpack://front/./src/games/gundam/ai.js","webpack://front/./src/games/gundam/aiCombos.js","webpack://front/./src/games/gundam/aiPlay.js","webpack://front/./src/games/gundam/aiStrategy.js","webpack://front/./src/games/gundam/game.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/bananaBars.vue","webpack://front/src/games/bananaBars.vue","webpack://front/./src/games/bananaBars.vue?3eed","webpack://front/./src/games/bananaBars.vue?f664","webpack://front/./src/games/deckIcon.vue","webpack://front/src/games/deckIcon.vue","webpack://front/./src/games/deckIcon.vue?7bc4","webpack://front/./src/games/deckIcon.vue?4c83","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/Gundam/ sync ^\\.\\/.*$","webpack://front/./src/assets/ sync ^\\.\\/.*empty\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nodrag\"},[_vm._l((_vm.sources),function(point,index){return _c('div',{key:'source' + index,class:{ absolute: 1, pointCircle: 1, colorYellow: point.show },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }),attrs:{\"id\":'source' + index},on:{\"mousedown\":function($event){return _vm.drag(point)},\"click\":function($event){return _vm.$emit('click', point)}}})}),_c('div',{style:({ display: _vm.source ? '' : 'none' })},[_vm._l((_vm.targets.filter(x => x)),function(point,index){return _c('div',{key:'target' + index},[_c('div',{class:{ absolute: 1, pointCircle: 1, colorYellow: _vm.target != point, colorGreen: _vm.target == point },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 })}),_c('div',{staticClass:\"absolute text-center textVerticalCenter text-shadow-black colorWhite\",style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 })},[_c('div',[_vm._v(_vm._s(point.text))])])])}),_c('div',{style:({ 'pointer-events': 'none' })},[_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow0' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow1' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1)])],2)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p h100p relative\"},[_c('div',{staticClass:\"arrow absolute\",style:({ top: '0px', left: '0px', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '15%', left: '15%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '30%', left: '30%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '45%', left: '45%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '60%', left: '60%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '75%', left: '75%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"w100p h100p relative\">\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '0px', left: '0px', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '15%', left: '15%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '30%', left: '30%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '45%', left: '45%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '60%', left: '60%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '75%', left: '75%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'arrow-div',\r\n    props: ['color']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./arrowDiv.vue?vue&type=template&id=135b1d42&scoped=true&\"\nimport script from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nexport * from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nimport style0 from \"./arrowDiv.vue?vue&type=style&index=0&id=135b1d42&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"135b1d42\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"nodrag\">\r\n        <div v-for=\"(point, index) in sources\" :key=\"'source' + index\" :id=\"'source' + index\"\r\n            :class=\"{ absolute: 1, pointCircle: 1, colorYellow: point.show }\"\r\n            :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }\"\r\n            @mousedown=\"drag(point)\" @click=\"$emit('click', point)\">\r\n        </div>\r\n\r\n        <div :style=\"{ display: source ? '' : 'none' }\">\r\n            <div class=\"\" v-for=\"(point, index) in targets.filter(x => x)\" :key=\"'target' + index\">\r\n                <div :class=\"{ absolute: 1, pointCircle: 1, colorYellow: target != point, colorGreen: target == point }\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 }\">\r\n                </div>\r\n                <div class=\"absolute text-center textVerticalCenter text-shadow-black colorWhite\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 }\">\r\n                    <div>{{ point.text }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div :style=\"{ 'pointer-events': 'none' }\">\r\n                <div :id=\"'arrow0' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n                <div :id=\"'arrow1' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport arrowDiv from './arrowDiv.vue';\r\n\r\nexport default {\r\n    name: 'drag-drop-arrow',\r\n    props: ['id', 'sources', 'freeze'],\r\n    components: { arrowDiv },\r\n    data: () => ({\r\n        delay: 1500,\r\n        animations: [],\r\n        mouse: { x: 0, y: 0 },\r\n        color: \"red\",\r\n        targets: [],\r\n        source: null,\r\n        target: null\r\n    }),\r\n    watch: {\r\n        sources() { this.resetSources(); }\r\n    },\r\n    mounted() {\r\n        window.addEventListener('mousemove', this.updateMouse);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('touchmove', this.updateMouse);\r\n        window.addEventListener('touchend', this.mouseUp);\r\n        this.resetSources();\r\n    },\r\n    beforeUnmount() {\r\n        window.removeEventListener('mousemove', this.updateMouse);\r\n        window.removeEventListener('mouseup', this.mouseUp);\r\n        window.removeEventListener('touchmove', this.updateMouse);\r\n        window.removeEventListener('touchend', this.mouseUp);\r\n    },\r\n    methods: {\r\n        updateMouse(e) {\r\n            const touch = e && e.touches && e.touches.length > 0 ? e.touches[0] : {};\r\n            this.mouse.x = e.clientX ? e.clientX : touch.clientX;\r\n            this.mouse.y = e.clientY ? e.clientY : touch.clientY;\r\n            this.updateAnimation();\r\n        },\r\n        resetSources() {\r\n            this.sources.forEach((point, index) => {\r\n                const element = document.getElementById(\"source\" + index);\r\n                element?.addEventListener('touchstart', () => this.drag(point));\r\n            });\r\n            this.animate();\r\n        },\r\n        drag(point) {\r\n            if (this.freeze)\r\n                return;\r\n            this.source = point;\r\n            this.targets = this.source.targets;\r\n            this.animate();\r\n        },\r\n        mouseUp() {\r\n            if (!this.source || !this.animations || this.animations.length < 1 || this.freeze)\r\n                return;\r\n            this.$emit('drop', { mouse: this.mouse, source: this.source, target: this.target });\r\n            this.source = null;\r\n        },\r\n        animate() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            this.updateAnimation();\r\n\r\n            helperAnimation.animateMultiple(this.animations, this.delay - 5);\r\n            setTimeout(() => {\r\n                this.animate();\r\n            }, this.delay + 15);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n        updateAnimation() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            if (!this.animations || this.animations.length < 1) {\r\n                this.animations = [\r\n                    this.createAnimation('arrow0' + this.id, false),\r\n                    this.createAnimation('arrow1' + this.id, true)\r\n                ];\r\n            }\r\n\r\n            this.target = this.targets.find(box => this.isInside(this.mouse.x, this.mouse.y, box));\r\n\r\n            this.color = this.target ? 'green' : 'red';\r\n            const from = { x: this.source.x + (this.source.width / 2), y: this.source.y + (this.source.height / 2) };\r\n            const destination = !this.target ? this.mouse\r\n                : { x: this.target.x + (this.target.width / 2), y: this.target.y + (this.target.height / 2) };\r\n\r\n            this.animations.forEach(animation => {\r\n                const rotation = this.getAngleDeg(from, destination) + 135;\r\n                const width = this.target ? 75 : 75;\r\n                const widthHalf = width / 2\r\n                animation.from.x = from.x;\r\n                animation.from.y = from.y;\r\n                animation.from.rotation = rotation;\r\n                animation.to.rotation = rotation;\r\n                animation.to.x = destination.x;\r\n                animation.to.y = destination.y;\r\n                animation.mid.x = (animation.from.x + (animation.to.x - animation.from.x) / 2) - widthHalf;\r\n                animation.mid.y = (animation.from.y + (animation.to.y - animation.from.y) / 2) - widthHalf;\r\n            });\r\n        },\r\n        createAnimation(id, delay) {\r\n            const width = this.target ? 75 : 75;\r\n            const from = {\r\n                opacity: 1,\r\n                width: 5,\r\n                height: 5\r\n            };\r\n            const mid = {\r\n                opacity: 1,\r\n                width,\r\n                height: width\r\n            };\r\n\r\n            const to = {\r\n                opacity: 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            return { id, from, mid, to, delay, isIncrement: false };\r\n        },\r\n        getAngleDeg(source, target) {\r\n            const angleRad = Math.atan2(target.y - source.y, target.x - source.x);\r\n            return angleRad * (180 / Math.PI);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dragDropArrow.vue?vue&type=template&id=4465cfd3&\"\nimport script from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nexport * from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dragDropArrow.vue?vue&type=style&index=0&id=4465cfd3&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p mask bg2\",staticStyle:{\"height\":\"100dvh\"}},[(_vm.game)?_c('span',[_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer2))}),_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.centerZoneP2))}),_c('div',{staticClass:\"absolute bg2\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer1))}),_c('div',{staticClass:\"absolute diagonal-split\",style:(_vm.getFieldStyleObj(_vm.game.grid.resources))}),_c('div',{staticClass:\"absolute text-center textVerticalCenter fontSize075em\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.resources), transform: 'rotate(-45deg)' })},[_vm._v(\" Resources \")]),_c('banana-bars',{style:(_vm.getFieldStyleObj(_vm.game.grid.resources)),attrs:{\"p1yellow\":_vm.game.player1.resourcesAvailable - _vm.game.player1.resourcesEx,\"p1blue\":_vm.game.player1.resourcesEx,\"p1max\":_vm.game.player1.resourcesMax,\"p2yellow\":_vm.game.player2.resourcesAvailable - _vm.game.player2.resourcesEx,\"p2blue\":_vm.game.player2.resourcesEx,\"p2max\":_vm.game.player2.resourcesMax,\"max\":_vm.game.resourcesMax,\"width\":_vm.game.grid.resources.width}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player1.deck.length,\"icon\":_vm.game.player1.deckIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player1.trash.length,\"icon\":_vm.game.player1.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', true)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player1.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player1.shield.length,\"icon\":_vm.game.player1.shieldIcon}}),(_vm.game)?_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Hand))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Field))}):_vm._e(),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player2.deck.length,\"icon\":_vm.game.player2.deckIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player2.trash.length,\"icon\":_vm.game.player2.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', false)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player2.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player2.shield.length,\"icon\":_vm.game.player2.shieldIcon}}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Field))}),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEffect))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze && _vm.game.player1.hasEffects, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.useEffect}},[_c('span',[_vm._v(\"Use\"),_c('br'),_vm._v(\"Effect\")])])],1),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEndTurn))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[(_vm.game.grid.buttonEndTurn.width > 50)?_c('span',[_vm._v(\"End\"),_c('br'),_vm._v(\"Turn\")]):_c('span',[_vm._v(\"End\")])])],1),_c('div',{staticClass:\"absolute vertical-scroll\",style:(_vm.getFieldStyleObj(_vm.game.grid.logZone)),domProps:{\"innerHTML\":_vm._s(_vm.game.logs)}}),_vm._l((_vm.game.tutoMasks),function(tutoMask,index){return _c('div',{key:'TutoMask' + index,class:{ absolute: 1, bg2: tutoMask.isPlayer1, bg: !tutoMask.isPlayer1 },style:(_vm.getFieldStyleObj(tutoMask))})}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.textZone))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardCenter))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardLeft))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardRight))}),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat},on:{\"click\":function($event){return _vm.showCard(card)}}})],1)}),(_vm.game.showTextTuto)?_c('div',{staticClass:\"absolute fadeIn\",style:({ ..._vm.getFieldStyleObj(_vm.game.showTextTuto), 'z-index': _vm.game.showTextTuto.zindex ? _vm.game.showTextTuto.zindex : 56 })},[(_vm.game.showTextTuto.arrow)?_c('div',{staticClass:\"bgWhite absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.showTextTuto.arrow), transform: 'rotate(45deg)', 'z-index':-1 })}):_vm._e(),_c('div',{staticClass:\"w100p h100p bgWhite colorBlack flex\",staticStyle:{\"flex-direction\":\"column\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.game.showTextTuto.text))]),(!_vm.game.showTextTuto.hideNext)?_c('div',{staticClass:\"m5px bgYellow circle10px\",staticStyle:{\"align-self\":\"flex-end\"}},[_c('v-btn',{staticClass:\"bg2 shine\",on:{\"click\":_vm.tutoNext}},[_vm._v(\"Next\")])],1):_vm._e()])]):_vm._e()],2):_vm._e(),_c('drag-drop-arrow',{attrs:{\"id\":\"0\",\"sources\":_vm.sources,\"targets\":_vm.targets,\"freeze\":_vm.freeze || _vm.game?.popup},on:{\"drop\":_vm.dropPoint,\"click\":_vm.clickDrop}}),(_vm.game && _vm.game.popup)?_c('div',{staticClass:\"absolute w100p h100p m5px\",staticStyle:{\"top\":\"0px\",\"display\":\"flex\",\"overflow\":\"hidden\",\"flex-direction\":\"column\",\"z-index\":\"80\"}},[_c('div',{staticClass:\"flex-grow\",staticStyle:{\"min-height\":\"10%\"}}),_c('div',{staticClass:\"w100p\"},[_c('div',{staticClass:\"flex flex-wrap w100p\",staticStyle:{\"justify-content\":\"center\"}},[_c('v-btn',{staticClass:\"m10px\",staticStyle:{\"background-color\":\"#FFFF00F0\"},on:{\"click\":function($event){return _vm.showOrHidePopup(false)}}},[(_vm.popupShow)?_c('span',[_vm._v(\"Hide Popup\")]):_c('span',[_vm._v(\"Show Popup\")])]),_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('div',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)})],2)]),(_vm.popupShow)?_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"overflow-y\":\"auto\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),(_vm.game?.popup.cards && _vm.game?.popup.cards.length > 0)?_c('div',{staticClass:\"flex-wrap w100p horizontal-scroll\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\",style:({ width: _vm.game?.grid.card100.height + 'px' })},[_c('div',{staticClass:\"text-center colorBlack\"},[_vm._v(_vm._s(card.location)+\" P\"+_vm._s(card.isPlayer1 ? '1' : '2')+\" \")]),_c('img',{style:({ width: _vm.game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0):_vm._e()]):_vm._e()]):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyleObj(_vm.game.grid.textZone), 'z-index': 11, height: 0\n        }),attrs:{\"id\":\"divTextEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.text)}})]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",style:({ top: '80px', width: '100%', height: '0px', 'z-index': 13 }),attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"70\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.game?.tutoStep)+\" \")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class effectsLuncher {\r\n    static trigger_onplay = 'onplay';\r\n    static trigger_onpair = 'onpair';\r\n    static trigger_onlink = 'onlink';\r\n    static trigger_refresh = 'refresh';\r\n    static trigger_battle = 'battle';\r\n    static trigger_burst = 'burst';\r\n    static trigger_command = 'command';\r\n    static trigger_action = 'action';\r\n    static trigger_ondestroyed = 'ondestroyed';\r\n    static trigger_end = 'end';\r\n    static trigger_turn = 'turn';\r\n    static trigger_end = 'end';\r\n    static trigger_main = 'main';\r\n\r\n    static lunchEffectTriggerMultiple(cards, trigger) {\r\n        let isEffectExisting = false;\r\n        cards.forEach(card1 => {\r\n            const result = this.lunchEffectTriggerForOneCard(card1, trigger);\r\n            isEffectExisting = isEffectExisting || result.isEffectExisting;\r\n        });\r\n        return isEffectExisting;\r\n    }\r\n\r\n    static lunchEffectTriggerForOneCard(card1, trigger) {\r\n        const result = { isEffectExisting: false };\r\n        const effects = this.getEffects(card1, trigger);\r\n        if (!effects || effects.length < 1)\r\n            return result;\r\n\r\n        result.isEffectExisting = true;\r\n        result.cancelMoveToTrash = this.getCancelMoveToTrash(effects);\r\n        this.addTaskFirst({ id: this.applyEffectCard.name, card1, trigger });\r\n\r\n        return result;\r\n    }\r\n\r\n    static lunchEffectTriggerForTwoCard(card1, card2, trigger) {\r\n        const isExistingCard1Effect = this.getEffects(card1, trigger);\r\n        const isExistingCard2Effect = this.getEffects(card2, trigger);\r\n        if (!isExistingCard1Effect && !isExistingCard2Effect)\r\n            return false;\r\n\r\n        const tasks = [];\r\n\r\n        if (isExistingCard1Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        if (isExistingCard2Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1: card2, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        this.addTasksFirst(tasks);\r\n        return tasks.length > 0;\r\n    }\r\n\r\n    static getEffects(card, trigger, ignorePair) {\r\n        let result = [];\r\n        if (!card || !card.effects)\r\n            return result;\r\n\r\n        result = card.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card } });\r\n\r\n        if (!ignorePair && card.pair && card.pair.effects)\r\n            result = result.concat(card.pair.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card: card.pair } }));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getCancelMoveToTrash(effects) {\r\n        const effectsThatCancelMoveToTrash = [this.sendToHand.name, this.deploy.name];\r\n        return effects.find(effect => effectsThatCancelMoveToTrash.includes(effect.id)) ? true : false;\r\n    }\r\n\r\n    static applyEffectCard(game, task) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        const effects = this.getEffects(task.card1, task.trigger, true);\r\n        if (effects.length > 0) {\r\n            const text = effects.map(fx => this.getEffectText(fx)).join('<br>');\r\n            let tasks = [];\r\n            let tasksDelay = [];\r\n            const show = effects.filter(fx => !fx.hide).length > 0;\r\n\r\n            if (show)\r\n                tasks.push({ ...task, id: this.showCardsEffect.name, text, delay:this.delay*2 });\r\n\r\n            tasks = tasks.concat(effects.map(effect => { return { ...task, id: this.applyEffect.name, effect }; }));\r\n            tasksDelay = tasks.filter(x => x.effect && x.effect.delay);\r\n            tasks = tasks.filter(x => !x.effect || !x.effect.delay);\r\n\r\n            if (tasks.length > 0) this.addTasksFirst(tasks);\r\n            if (tasksDelay.length > 0) this.addTasks(tasksDelay);\r\n        }\r\n\r\n        if (task.card1.pair)\r\n            this.applyEffectCard(game, { ...task, card1: task.card1.pair });\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if (effect.effects)\r\n            result = result.concat(effect.effects.map(x => this.getEffectText(x)).join(', '));\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static removeOneTurnEffect(game) {\r\n        game.incruises = game.incruises.filter(x => !x.removeEndTurn);\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.incruises = player.incruises.filter(x => !x.removeEndTurn);\r\n            player.field.forEach(card => {\r\n                card.incruises = card.incruises.filter(x => !x.removeEndTurn);\r\n                this.recalculateApHp(game, player, card);\r\n            });\r\n        });\r\n\r\n        game.cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            card.removeEndTurn = [];\r\n            this.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static applyEffect(game, task, player, opponent) {\r\n        const targetResult = this.handleEffectTarget(game, task, player, opponent);\r\n        if (targetResult.stop || targetResult.end)\r\n            return targetResult;\r\n\r\n        if (!this.isEffectMatchConditions(game, task, player, opponent))\r\n            return {};\r\n\r\n        if (task.effect.cost) {\r\n            if (player.resourcesAvailable < task.effect.cost) {\r\n                this.log(`Can't play ${task.effect.card.name} because cost can't be played : ${task.effect.cost}`);\r\n                return {};\r\n            }\r\n\r\n            this.playCardCost(player, task.effect.cost);\r\n        }\r\n\r\n        if (task.effect.oneTurn)\r\n            task.card2.removeEndTurn = !task.card2.removeEndTurn ? [task.effect]\r\n                : task.card2.removeEndTurn.concat([task.effect]);\r\n\r\n        task.isConditionsAfterRespected = this.isConditionsAfterRespected(game, task, player, opponent);\r\n        if (task.card2)\r\n            task.card2.fx = task.isConditionsAfterRespected;\r\n\r\n        if (task.effect.rest)\r\n            this.setActive(game, task.effect.card, false);\r\n\r\n        return this[task.effect.id](game, task, player, opponent);\r\n    }\r\n}\r\n\r\n\r\nexport default effectsLuncher;\r\n","class effectsTarget {\r\n\r\n    static handleEffectTarget(game, task, player, opponent) {\r\n        if (task.effect.target) {\r\n            if (task.choice)\r\n                return { end: true };\r\n            else if (!task.cardChoice)\r\n                return this.popupTargetCards(game, task, player, opponent);\r\n            else\r\n                task.card2 = task.cardChoice;\r\n        }\r\n\r\n        if (!task.card2 && task.effect.card.pairedWith)\r\n            task.cardUnit = game.cards.find(x => x.index === task.effect.card.pairedWith);\r\n\r\n        if (!task.card2 && task.cardUnit)\r\n            task.card2 = task.cardUnit;\r\n\r\n        if (!task.card2)\r\n            task.card2 = task.effect.card;\r\n\r\n        return {};\r\n    }\r\n\r\n    static popupTargetCards(game, task, player, opponent) {\r\n        let cards = [];\r\n        if (task.effect.target === 'opponentUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value);\r\n\r\n        else if (task.effect.target === 'opponentActiveUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value && x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnitRested')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && !x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnit')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnit')\r\n            cards = player.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnitBlocker')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hadBlocker(x));\r\n\r\n        else if (task.effect.target === 'playerCardById')\r\n            cards = player.hand.filter(x => x.id === task.effect.targetId);\r\n\r\n        else if (task.effect.target === 'playerUnitWithAttribute')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && x.attribute.includes(task.effect.targetAttribute));\r\n\r\n        else if (task.effect.target === 'playerUnitWithEffect')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hasEffect(x, task.effect.effect));\r\n\r\n        else if (task.effect.target === 'unit')\r\n            throw new Error(\"Can't handle this tast target : 'unit'\");\r\n\r\n        if (cards.length < 1) {\r\n            this.log(`Can't play ${task.effect.card.name} (${task.effect.id}) because there is no target available`);\r\n            return { end: true };\r\n        }\r\n\r\n        const choices = [];\r\n        if (task.effect.optional)\r\n            choices.push({ text: 'None' });\r\n\r\n        this.game.tasks = [{\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            task,\r\n            text: 'Select available target',\r\n            choices,\r\n            cards\r\n        }].concat(this.game.tasks);\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default effectsTarget;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass mainEffects {\r\n    static handleMainEffectsCard(game, card, active) {\r\n        if (!card || !card.effects || !card.effects.find(x => x.trigger == this.trigger_main))\r\n            return;\r\n\r\n        if (active)\r\n            game.effects = game.effects.concat(card.effects.filter(fx => fx.trigger === this.trigger_main).map(fx => { return { ...fx, card, index: card.index }; }))\r\n        else\r\n            game.effects = game.effects.filter(x => x.index !== card.index);\r\n\r\n        this.refreshPlayersMainEffect(game);\r\n    }\r\n\r\n    static refreshPlayersMainEffect(game) {\r\n        game.player1.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === true).length > 0;\r\n        game.player2.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === false).length > 0;\r\n    }\r\n\r\n    static lunchMainEffectCard(game, task) {\r\n        if (!task) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name });\r\n            return game;\r\n        }\r\n\r\n        if (task.choice)\r\n            return {};\r\n\r\n        if (!task.cardChoice) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                text: `Select a main effect.`,\r\n                cards: game.effects.filter(x => x.card.isPlayer1).map(x => x.card),\r\n                task, isPlayer1: true,\r\n                choices: [{ text: 'cancel' }]\r\n            });\r\n            return { stop: true };\r\n        }\r\n\r\n\r\n        return this.lunchEffectTriggerForOneCard(task.cardChoice, this.trigger_main);\r\n    }\r\n}\r\n\r\n\r\nexport default mainEffects;\r\n","class positioner {\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createGrid(screenWidth, screenHeight) {\r\n        const grid = {};\r\n\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        grid.width = screenWidth;\r\n        grid.height = screenHeight;\r\n        grid.widthMargin = grid.width - (grid.border * 2);\r\n        grid.heightMargin = grid.height - (5 * grid.border);\r\n        grid.boxHeight = (grid.height - (grid.border * 6)) / 5.5;\r\n        grid.boxWidth = grid.boxHeight * 107 / 150;\r\n\r\n        grid.isVertical = grid.height > grid.width;\r\n\r\n        if (grid.boxWidth > grid.widthMargin / 7)\r\n            grid.boxWidth = grid.widthMargin / 7;\r\n        grid.card100 = { width: grid.boxWidth, height: grid.boxHeight };\r\n\r\n        // Player2 - Hand\r\n        let x = grid.border, y = grid.border;\r\n        let width = grid.widthMargin / 2 - grid.border2, height = grid.boxHeight / 2;\r\n        grid.player2Hand = { x, y, width, height, isPlayer1: false, location: this.locationHand };\r\n        y += grid.border + height;\r\n\r\n        // Player2 - Field\r\n        width = grid.widthMargin - grid.border - grid.boxWidth;\r\n        height = grid.boxHeight * 1.5;\r\n        grid.player2Field = { x, y, width, height, isPlayer1: false, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Center Zone\r\n        x = grid.border;\r\n        grid.centerZone = { x, y, width: grid.widthMargin, height: grid.boxHeight };\r\n        y += grid.border + grid.boxHeight;\r\n        grid.centerZoneP2 = { ...grid.centerZone, x: 0, width: (grid.centerZone.width - 100) / 2 + grid.border };\r\n\r\n        // Player1 - Field\r\n        grid.player1Field = { x, y, width, height, isPlayer1: true, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Player1 - Hand\r\n        height = grid.boxHeight;\r\n        grid.player1Hand = { x, y, width, height, isPlayer1: true, location: this.locationHand };\r\n\r\n        if (grid.isVertical)\r\n            this.createVerticalGrid(grid);\r\n        else\r\n            this.createHorizontalGrid(grid);\r\n\r\n        grid.player1Field.cardSizeReduce = true;\r\n        grid.player2Field.cardSizeReduce = true;\r\n\r\n        // Buttons\r\n        x = grid.player1Deck.x;\r\n        y = grid.player1Trash.y + grid.player1Trash.height + grid.border;\r\n        height = (grid.height - grid.border2 - y) / 2;\r\n        width = grid.isVertical ? grid.boxWidthVertical : grid.boxWidth;\r\n        grid.buttonEffect = { x, y, width, height };\r\n        y += height + grid.border;\r\n        grid.buttonEndTurn = { x, y, width, height };\r\n\r\n        width = grid.boxHeight;\r\n        height = grid.boxHeight;\r\n        grid.resources = { x: (grid.width / 2) - (width / 2), y: grid.centerZone.y, width, height };\r\n\r\n        grid.halfPlayer1 = { x: 0, y: grid.player1Field.y, width: grid.width, height: grid.height / 2 };\r\n        grid.halfPlayer2 = { x: 0, y: 0, width: grid.width, height: grid.centerZone.y };\r\n\r\n        grid.centerZone.heightQuarter = grid.centerZone.height / 5;\r\n\r\n        // Highlight center cards\r\n        grid.textZone = { ...grid.player2Hand, width: grid.width - grid.border2 };\r\n        grid.logZone = { ...grid.player2Hand, x: grid.width / 2 + grid.border };\r\n        grid.highlightCardCenter = { y: grid.player2Field.y, height: grid.height - grid.player2Field.y };\r\n        grid.highlightCardLeft = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 2, 1), y: grid.highlightCardCenter.y };\r\n        grid.highlightCardRight = { ...grid.highlightCardLeft, x: grid.highlightCardLeft.x + grid.highlightCardLeft.width };\r\n        grid.highlightCardCenter = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 1, 1), y: grid.highlightCardCenter.y };\r\n\r\n        // Drop Points\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Field.drop = {\r\n            x: grid.player1Field.x + (grid.player1Field.width / 2) - (width / 2),\r\n            y: grid.player1Field.y + (grid.player1Field.height / 2) - (height / 2),\r\n            width, height, text: 'Play'\r\n        }\r\n        grid.player2Field.drop = {\r\n            x: grid.player2Field.x + (grid.player2Field.width / 2) - (width / 2),\r\n            y: grid.player2Field.y + (grid.player2Field.height / 2) - (height / 2),\r\n            width, height, text: 'Attack'\r\n        }\r\n\r\n        return grid;\r\n    }\r\n\r\n    static createVerticalGrid(grid) {\r\n        grid.boxWidthVertical = (grid.widthMargin - (8 * grid.border)) / 6;\r\n        grid.boxHeightVertical = grid.boxWidthVertical * 150 / 107;\r\n\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidthVertical;\r\n        let height = grid.boxHeightVertical;\r\n\r\n        // Player1 - Shield\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player1 - Deck\r\n        x = grid.player1Shield.x;\r\n        y += height + grid.border;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n\r\n        // Player1 - Trash\r\n        y += height + grid.border;\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = y - height - grid.border;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n\r\n        // Player2 - Trash\r\n        y = y - height - grid.border;\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n    }\r\n\r\n    static createHorizontalGrid(grid) {\r\n        // Player1 - Deck\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidth;\r\n        let height = grid.boxHeight;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Trash\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x - width - grid.border;\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = grid.centerZone.y;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Trash\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x + width + grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = this.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.15);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        let x = (width - desiredWidth) / 2;\r\n        let y = (height - desiredHeight) / 2;\r\n\r\n        if (count > 1) {\r\n            x = (width - (count * desiredWidth)) / 2;\r\n        }\r\n\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n\r\n        const totalCards = centerEmptyZone ? total + 1 : total;\r\n        const cardSizeModified = centerEmptyZone ? this.getCardSize(position.width, zoneHeight, totalCards, position.cardHeightPercent) : cardSize;\r\n        let mid = Math.floor(totalCards / 2);\r\n        const indexModified = centerEmptyZone && index >= mid ? index + 1 : index;\r\n        if (totalCards < wrapCut || position.height < cardSizeModified.height * 2)\r\n            return this.getCardPositionXY(position, cardSizeModified, totalCards, indexModified, degree);\r\n\r\n        mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, zoneHeight / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n\r\n    static alignPositionNextTo(game, source, width = -1, height = -1) {\r\n        let sens = -1; // 0:Right, Up, Left, Down\r\n        const widthEdit = width != -1 ? width : 300;\r\n        const heightEdit = height != -1 ? height : game.grid.boxHeight;\r\n        let result = { isValid: false };\r\n        while (sens < 4 && !result.isValid) {\r\n            sens++;\r\n            result = this.alignPositionNextToUsingSens(game, source, widthEdit, heightEdit, sens)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static alignPositionNextToUsingSens(game, source, width, height, sens) {\r\n        let x = sens === 0 ? source.x + source.width + game.grid.border\r\n            : sens === 2 ? source.x - width - game.grid.border\r\n                : source.x + (source.width / 2) - (width / 2);\r\n\r\n        let y = sens === 3 ? source.y + source.height + game.grid.border\r\n            : sens === 1 ? source.y - height - game.grid.border\r\n                : source.y + (source.height / 2) - (height / 2);\r\n\r\n        let isValid = true;\r\n        const isHorizontal = (sens === 0 || sens === 2);\r\n        const isVertical = (sens === 1 || sens === 3);\r\n\r\n        // Right offset\r\n        let xOffset = x + width - game.grid.width;\r\n        if (isVertical && xOffset > 0)\r\n            x = x - xOffset - game.grid.border2;\r\n\r\n        xOffset = x + width + game.grid.border - game.grid.width;\r\n        if (xOffset > 0)\r\n            isValid = false;\r\n\r\n        // Left offset\r\n        if (isVertical && x < game.grid.border)\r\n            x = game.grid.border;\r\n\r\n        if (x < game.grid.border)\r\n            isValid = false;\r\n\r\n        // Bottom offser\r\n        let yOffset = y + height - game.grid.height;\r\n        if (isHorizontal && yOffset > 0)\r\n            y = y - yOffset - game.grid.border2;\r\n\r\n        yOffset = y + height - game.grid.border - game.grid.height;\r\n        if (yOffset > 0)\r\n            isValid = false;\r\n\r\n        // Top offset\r\n        if (isHorizontal && y < game.grid.border)\r\n            y = game.grid.border;\r\n\r\n        if (y < game.grid.border)\r\n            isValid = false;\r\n\r\n        const result = { x, y, width, height, isValid, sens };\r\n        result.arrow = this.addArrow(result, source, sens);\r\n\r\n        return result;\r\n    }\r\n\r\n    static addArrow(from, to, sens) {\r\n        const size = 25;\r\n        // const toCenterX = to.x + to.width / 2;\r\n        // const toCenterY = to.y + to.height / 2;\r\n\r\n        let x = (to.x + (to.width / 2) - from.x) - size / 2;\r\n        let y = (to.y + (to.height / 2) - from.y) - size / 2;\r\n        switch (sens) {\r\n            case 0: // from est à droite de to\r\n                x = -1*size / 2;\r\n                break;\r\n            case 1: // from est au-dessus de to\r\n                y = from.height - size / 2;\r\n                break;\r\n            case 2: // from est à gauche de to\r\n                x = from.width - size / 2;\r\n                break;\r\n            case 3: // from est en dessous de to \r\n                y = -1*size / 2;\r\n                break;\r\n        }\r\n\r\n        return { x, y, width: size, height: size, rotation: 45 }\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","class selectable {\r\n    static setSelectable(game, player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = game.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (this.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n\r\n    static setSelectableFalse() {\r\n        this.game.cards.forEach(card => card.selectable = false);\r\n    }\r\n}\r\n\r\n\r\nexport default selectable;\r\n","class cardAction {    \r\n    static noActionCard = 'no action card';\r\n\r\n    static askForActionCards(game, task, player, opponent) {\r\n        let result = this.askForActionCardsForThisPlayer(game, task, 'actionCardOpponent', opponent);\r\n        if(result.stop)\r\n            return result;\r\n\r\n        return this.askForActionCardsForThisPlayer(game, task, 'actionCardPlayer', player);\r\n    }\r\n\r\n    static askForActionCardsForThisPlayer(game, task, property, player) {        \r\n        if (task[property]) \r\n            return {};\r\n\r\n        if (task.choice && task.choice.text === this.noActionCard){\r\n            task[property] = task.choice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return {};\r\n        }\r\n\r\n        if (task.cardChoice) {\r\n            this.playCardCost(player, task.cardChoice.cost);\r\n            this.addTasksFirst([\r\n                { id: this.applyEffectCard.name, card1: task.cardChoice, trigger: this.trigger_action, taskAttack:task},\r\n                { id: this.move.name, card1: task.cardChoice, to: this.locationTrash }\r\n            ]);\r\n            task[property] = task.cardChoice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return { stop: true };\r\n        }\r\n        \r\n        const actionCard = player.hand.filter(x => x.effects && x.effects.find(fx => fx.trigger === this.trigger_action) && x.cost <= player.resourcesAvailable);\r\n        if (actionCard.length > 0) {\r\n            const playerIndex = player.isPlayer1 ? '1' : '2';\r\n            game.tasks = [{\r\n                id: this.popup.name,\r\n                text: `Select an action card for player ${playerIndex} ?`,\r\n                cards: actionCard,\r\n                task,  isPlayer1:player.isPlayer1,\r\n                choices: [{ text: this.noActionCard }]\r\n            }].concat(game.tasks);\r\n            return { stop: true };\r\n        }\r\n        \r\n        task[property] = { text: this.noActionCard };\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default cardAction;\r\n","class conditions {\r\n    static isEffectMatchConditions(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditions);\r\n    }\r\n\r\n    static isConditionsAfterRespected(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditionsAfter);\r\n    }\r\n\r\n    static isConditionsRespected(game, task, player, opponent, conditions) {\r\n        if (!conditions || conditions.length < 1)\r\n            return true;\r\n\r\n        let result = true;\r\n        conditions.forEach(condition => {\r\n            if (!result)\r\n                return result;\r\n\r\n            if (condition.id === 'unitHas')\r\n                result = result && this.hasEffect(task.card2, condition.value);\r\n\r\n            else if (condition.id === 'isInHand')\r\n                result = result && task.card2.location === this.locationHand;\r\n\r\n            else if (condition.id === 'isInField')\r\n                result = result && task.card2.location === this.locationField;\r\n\r\n            else if (condition.id === 'isPlayerTurn')\r\n                result = result && game.isPlayer1 === player.isPlayer1;\r\n\r\n            else if (condition.id === 'pilotLevelMin')\r\n                result = result && task.cardPilot && task.cardPilot.level >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXUnitsWithAttribute')\r\n                result = result && player.field.filter(card => this.isCardUnit(card) && this.hasAttribute(card, condition.attribute)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCommandInTrash')\r\n                result = result && player.trash.filter(card => this.isCardCommand(card)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCardsOpponentHand')\r\n                result = result && opponent.hand.length >= condition.value;\r\n\r\n            else if (condition.id === 'pilotHasAttribute')\r\n                result = result && task.cardPilot && this.hasAttribute(task.cardPilot, condition.value);\r\n\r\n            else if (condition.id === 'maximumXUnitsOnField')\r\n                result = result && player.field.length <= condition.value;\r\n\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default conditions;\r\n","class cardMove {\r\n\r\n    static spawnOrMove(game, task, player) {\r\n        const cardSpawn = this.moveCard(game, player, task.card1, task.from, task.to);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static move(game, task, player) {\r\n        return this.moveCard(game, player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!this.game.cards.find(x => x.index === card.index))\r\n            this.game.cards = this.addIn(this.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? this.game.player1 : this.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n        return card;\r\n    }\r\n\r\n    static moveCard(game, player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        let from = locationFrom ? locationFrom : card?.location;\r\n        from = from == \"pair\" ? null : from;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if (from)\r\n            player[from] = this.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        const onField = [this.locationField, this.locationBase];\r\n        if (!card.isTemporaryCard)\r\n            player[to] = this.addIn(player[to], card);\r\n        else {\r\n            if (onField.includes(locationTo))\r\n                player[to] = this.addIn(player[to], card);\r\n            else\r\n                card.fadeOut = true;\r\n        }\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.location = locationTo;\r\n        card.hidestat = !onField.includes(card.location);\r\n        card.verso = card.location === this.locationHand && !card.isPlayer1 && !card.pairedWith && !card.pair;\r\n\r\n        this.handleMainEffectsCard(game, card, onField.includes(card.location));\r\n\r\n        if (card.pair) {\r\n            card.pair.pairedWith = null;\r\n            card.pair.link = false;\r\n            this.moveCard(game, player, card.pair, locationFrom, this.locationTrash);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [this.locationHand, this.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport default cardMove;\r\n","class cardPlay {\r\n    static play(game, task, player) {\r\n        let result = {};\r\n\r\n        if (!task.card2 && !task.zone)\r\n            result.sendBack = true;\r\n\r\n        else if (task.card1.location === this.locationHand)\r\n            result = this.playFromHand(player, task);\r\n\r\n        else if (task.card1.location === this.locationField)\r\n            result = this.prepareAttack(task, player);\r\n\r\n        else\r\n            result = this.playThisCard(player, task, false);\r\n\r\n        if (result && result.sendBack)\r\n            this.sendCardBackToSquareOne(task.card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static prepareAttack(task, player) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer || !task.card1.canAttack) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        this.addTaskPos2({ id: this.attack.name, attacker: task.card1, target: task.card2, isPlayer1: task.card1.isPlayer1, breach: null });\r\n    }\r\n\r\n    static playFromHand(player, task) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = task.regularPlay && player.resourcesAvailable < task.card1.cost;\r\n\r\n        if (!isSamePlayer || task.zone.location == this.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playThisCard(player, task, task.regularPlay);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...this.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        this.game.refresh = true;\r\n        return {};\r\n    }\r\n\r\n    static playThisCard(player, task, playCost) {\r\n        let isPilot = this.isCardPilot(task.card1);\r\n        let isCommand = this.isCardCommand(task.card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(player, task);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        this.spawnIfNot(task.card1);\r\n\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.card1, this.trigger_onplay).isEffectExisting;\r\n        if (isExisting) {\r\n            task.effectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n\r\n        if (this.isCardUnit(task.card1) && player.field.length < 6) {\r\n            task.card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationField });\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(task.card1)) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            if (player.base.length > 0)\r\n                this.addTaskPos2({ id: this.move.name, card1: player.base[0], to: this.locationTrash });\r\n\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationBase });\r\n            task.card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && task.card2 && this.isCardUnit(task.card2)) {\r\n            if (task.card1.pair || task.card2.pair || task.card1.pairedWith || task.card2.pairedWith) {\r\n                this.sendCardBackToSquareOne(task.card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.pair.name, card1: task.card1, card2: task.card2 });\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            this.addTasksPos2([\r\n                { id: this.applyEffectCard.name, card1: task.card1, card2: task.card2, trigger: this.trigger_command },\r\n                { id: this.move.name, card1: task.card1, to: this.locationTrash }\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(task.card1);\r\n    }\r\n\r\n    static playCardCost(player, cost) {\r\n        if (player.resourcesEx > 0)\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - cost);\r\n        player.resourcesAvailable -= cost;\r\n    }\r\n\r\n    static askPilotOrCommand(player, task) {\r\n        if (!task.card2 || !this.isCardPilot(task.card1) || !this.isCardCommand(task.card1))\r\n            return;\r\n\r\n        if (task.card2.pair)\r\n            task.pilotOrCommand = 'Command';\r\n\r\n        if (task.choice)\r\n            task.pilotOrCommand = task.choice.text;\r\n\r\n        if (task.pilotOrCommand) {\r\n            const isPilot = task.pilotOrCommand === 'Pilot';\r\n            const isCommand = task.pilotOrCommand === 'Command';\r\n            return { isPilot, isCommand };\r\n        }\r\n\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            text: 'Do you want to play as pilot or command ?',\r\n            choices: [{ text: 'Pilot' }, { text: 'Command' }],\r\n            task\r\n        });\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","class refresh {\r\n\r\n    static refreshFieldAndHand(game, task, player) {\r\n        this.refreshPlayerArea(player.hand, player.positions.hand, false, 7, false);\r\n        this.refreshPlayerArea(player.field, player.positions.field, false, 3, true);\r\n        this.refreshPlayerArea(player.base, player.positions.base, true);\r\n\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        game.cards = game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        this.setSelectable(game, player);\r\n\r\n        player.resource = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        player.baseIcon = 'deck6.png';\r\n        player.shieldIcon = this.getIcon(player.shield.length);\r\n        player.deckIcon = this.getIcon(player.deck.length);\r\n        player.trashIcon = this.getIcon(player.trash.length);\r\n\r\n        game.textEffect = task.textEffect;\r\n    }\r\n\r\n    static refreshPlayerArea(cards, position, useZoneSize, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.fx = false;\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut, centerEmptyZone);\r\n            card.to = this.adjustRotationSize(card.to, card.active);\r\n            card.location = position.location;\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static adjustRotationSize(to, active, percent = 0.7) {\r\n        if (active)\r\n            return to.previous ? to.previous : to;\r\n\r\n        if (to.previous)\r\n            return to;\r\n\r\n        const reverPercentHalf = (1 - percent) / 2;\r\n        const loseX = to.width * reverPercentHalf;\r\n        const loseY = to.height * reverPercentHalf;\r\n        return { ...to, previous: to, x: to.x + loseX, y: to.y + loseY, width: to.width * percent, height: to.height * percent };\r\n    }\r\n\r\n    static getIcon(length) {\r\n        return length < 1 ? 'deck6.png'\r\n            : length < 2 ? 'deck5.png'\r\n                : length < 7 ? 'deck4.png'\r\n                    : length < 15 ? 'deck3.png'\r\n                        : length < 35 ? 'deck2.png'\r\n                            : 'deck1.png';\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n        if (game.tuto) {            \r\n            this.continueTuto(game);\r\n        }\r\n    }\r\n\r\n    static resetZIndex(game) {\r\n        game.cards.forEach(card => {\r\n            card.zindex = card.pairedWith ? 1 : 2;\r\n        });\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        if (!game.triggerRefreshAlreadyDone) {\r\n            this.lunchEffectTriggerMultiple(game.cards, this.trigger_refresh);\r\n            game.triggerRefreshAlreadyDone = true;\r\n        }\r\n\r\n        this.needTaskEndRefresh = false;\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        this.cardHighlight = [];\r\n\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.field.forEach(card => this.recalculateApHp(game, player, card));\r\n            this.refreshFieldAndHand(game, {}, player);\r\n        });\r\n\r\n        this.refreshDragAndDrop(game);\r\n\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n\r\n    static refreshDragAndDrop(game) {\r\n        const drags = [];\r\n\r\n        // Hand\r\n        const unitWithoutPilots = game.player1.field.filter(x => !x.pair);\r\n        game.player1.hand.forEach(card => {\r\n            let drops = card.active ? [this.game.grid.player1Field.drop] : [];\r\n\r\n            if (card.active) {\r\n                let targets = [];\r\n\r\n                if (this.isCardCommand(card))\r\n                    targets = game.player1.field;\r\n                else if (this.isCardPilot(card))\r\n                    targets = unitWithoutPilots;\r\n\r\n                drops = drops.concat(targets.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Pair' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(card), card, show: false, targets: drops });\r\n        });\r\n\r\n        // Field\r\n        game.player1.field.forEach(attacker => {\r\n            let drops = attacker.active ? [this.game.grid.player2Field.drop] : [];\r\n\r\n            const ennemyTarget = game.player2.field.filter(x => this.isValidTarget(game.player2, attacker, x));\r\n            if (attacker.active && ennemyTarget.length > 0) {\r\n                drops = drops.concat(ennemyTarget.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Attack' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(attacker), card: attacker, show: false, targets: drops });\r\n        });\r\n\r\n\r\n        game.player1.drags = drags;\r\n    }\r\n\r\n    static getPos(card) { return card.to ? card.to : card.position; }\r\n}\r\n\r\n\r\nexport default refresh;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass effects {\r\n    static draw(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        const tasks = [];\r\n        for (let i = 0; i < value; i++)\r\n            tasks.push({\r\n                id: this.spawnOrMove.name,\r\n                isPlayer1: player.isPlayer1,\r\n                from: this.locationDeck,\r\n                to: this.locationHand,\r\n                delay: true\r\n            });\r\n\r\n        this.addTasksFirst(tasks);\r\n    }\r\n\r\n    static setCost(game, task, player, opponent) {\r\n        task.card2.costOrigin = task.card2.costOrigin ? task.card2.costOrigin : task.card2.cost;\r\n        const reduceValue = task.isConditionsAfterRespected ? task.effect.value : 0;\r\n        task.card2.cost = task.card2.costOrigin + reduceValue;\r\n    }\r\n\r\n    static playToken(game, task, player, opponent) {\r\n        if (!task.effect.value)\r\n            throw new Error('Missing effect.value :' + JSON.stringify(task));\r\n        const isPlayer1 = player.isPlayer1;\r\n        this.addTaskFirst({ id: this.spawnOrMove.name, card1: this.createCard(task.effect.value, isPlayer1), to: this.locationField, isPlayer1 });\r\n    }\r\n\r\n    static playTokenByUnitsNumber(game, task, player, opponent) {\r\n        for (let i = 0; i < task.effect.values.length; i++) {\r\n            const value = task.effect.values[i];\r\n            if (value.min !== undefined && player.field.length >= value.min) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n            else if (value.max !== undefined && player.field.length <= value.max) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n        }\r\n    }\r\n\r\n    static dealDamage(game, task, player, opponent) {\r\n        task.card2.hp -= task.effect.value;\r\n        this.log(`${task.card2.name} HP is reduced by ${task.effect.value}`);\r\n        if (task.card2.hp < 1) {\r\n            const tasks = this.destroyUnit(task.card2, false);\r\n            this.addTasksPos2(tasks);\r\n        }\r\n    }\r\n\r\n    static discard(game, task, player, opponent) {\r\n        const card1 = task.cardChoice;\r\n        if (!card1) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        this.log(`${card1.name} discarded`);\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationTrash });\r\n    }\r\n\r\n    static pilotToHand(game, task, player, opponent) {\r\n        if (!task.card2.pair)\r\n            return;\r\n\r\n        const card1 = task.card2.pair;\r\n        delete (task.card2.pair);\r\n        card1.pairedWith = null;\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationHand });\r\n        this.log(`${card1.name} return to hand`);\r\n    }\r\n\r\n    static gainEffects(game, task, player, opponent) {\r\n        task.card2.effects = task.card2.effects.concat(task.effect.effects);\r\n        this.log(`${task.card2.name} gain these effects : ${task.effect.effects.map(x => x.id)}`);\r\n    }\r\n\r\n    static rest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, false);\r\n    }\r\n\r\n    static unrest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n    }\r\n\r\n    static unrestButCantAttack(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n        task.card2.canAttack = false;\r\n    }\r\n\r\n    static repair(game, task, player, opponent) {\r\n        if (task.card2.hp < task.card2.hpMax) {\r\n            this.log(`${task.card2.name} HP is repaired by ${task.effect.value}`);\r\n            task.card2.hpOrigin = Math.min(task.card2.hpOrigin + task.effect.value, task.card2.hpMaxOrigin);\r\n            this.recalculateApHp(game, player, task.card2);\r\n        }\r\n    }\r\n\r\n    static get1ShieldToHand(game, task, player, opponent) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card1 = player.shield.splice(0, 1)[0];\r\n        card1.location = player.positions.shield.location;\r\n        this.addTaskPos2({ id: this.spawnOrMove.name, card1, to: this.locationHand });\r\n        this.log(`One card is move from shield to hand`);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(game, task, player, opponent) {\r\n        if (!task.cardChoice) {\r\n            task.cards = [this.getAndRemoveFirst(player.deck), this.getAndRemoveFirst(player.deck)];\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards: task.cards\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        const bottomCard = task.cards.filter(card => card.index !== task.cardChoice.index);\r\n        player.deck = [task.cardChoice].concat(player.deck).concat(bottomCard);\r\n        this.log(`Deck order have been changed (top and bottom)`);\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(game, task, player, opponent) {\r\n        if (!task.taskAttack || !task.taskAttack.attacker)\r\n            throw new Error('cant handle this effect : ' + JSON.stringify(task.effect));\r\n\r\n        task.taskAttack.shieldProtection = task.taskAttack.attacker.level <= task.effect.value;\r\n        if (task.taskAttack.shieldProtection)\r\n            this.log(`Shield are protected`);\r\n        else\r\n            this.log(`Shield are not protected because attacker is level ${task.taskAttack.attacker.level}`);\r\n    }\r\n\r\n    static gainThisTurn(game, task, player, opponent) {\r\n        const effect = this.clone(task.effect);\r\n        delete effect.target;\r\n        effect.id = effect.effect2;\r\n        effect.oneTurn = true;\r\n        effect.card = task.card2;\r\n        this.log(`${task.card2.name} get ${task.effect.effect2} for this turn`);\r\n        this.applyEffect(game, { id: this.applyEffect.name, effect }, player, opponent)\r\n    }\r\n\r\n    static incruise(game, task, player, opponent) {\r\n        const ap = task.isConditionsAfterRespected ? task.effect.ap : 0;\r\n        const hp = task.isConditionsAfterRespected ? task.effect.hp : 0;\r\n\r\n        task.card2.incruises = task.card2.incruises.filter(x => x.index != task.effect.card.index);\r\n        task.card2.incruises.push({\r\n            ap,\r\n            hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        const cardPlayer = this.getPlayer(task.card2.isPlayer1);\r\n\r\n        this.recalculateApHp(game, cardPlayer, task.card2);\r\n        this.log(`${task.card2.name} have been incruised by AP ${ap} and HP ${hp}`);\r\n    }\r\n\r\n    static incruisePlayerField(game, task, player, opponent) {\r\n        player.incruises = player.incruises.filter(x => x.index != task.effect.card.index);\r\n        player.incruises.push({\r\n            ap: task.effect.ap,\r\n            hp: task.effect.hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        this.log(`Player${player.index} field have been incruised by AP ${task.effect.ap} and HP ${task.effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(game, task, player, opponent) {\r\n        this.log(`${task.card2.name} is send to hand`);\r\n        this.addTaskPos2({ id: this.move.name, card1: task.card2, to: this.locationHand });\r\n    }\r\n\r\n    static unrestResource(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        if (player.resourcesAvailable < player.resourcesMax) {\r\n            player.resourcesAvailable = Math.min(player.resourcesMax, player.resourcesAvailable + value);\r\n            this.log(`Player${player.index} resources have been incruised by ${value}`);\r\n        }\r\n    }\r\n\r\n    static placeExResource(game, task, player, opponent) {\r\n        player.resourcesEx += task.effect.value;\r\n        player.resourcesAvailable += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} ex resource(s)`);\r\n    }\r\n\r\n    static placeRestedResource(game, task, player, opponent) {\r\n        player.resourcesMax += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} rested resource(s)`);\r\n    }\r\n\r\n    static breach(game, task, player, opponent) {\r\n        if (!task.card2.breach || task.card2.breach < task.effect.value) {\r\n            task.card2.breach = task.effect.value;\r\n            this.log(`${task.card2.name} has breach ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static blocker(game, task, player, opponent) {\r\n        const alreadyDone = this.alreadyDone(task.card2.blocker, task.isConditionsAfterRespected);\r\n        if (alreadyDone)\r\n            return;\r\n\r\n        task.card2.blocker = task.isConditionsAfterRespected;\r\n        const text = task.isConditionsAfterRespected ? 'has blocker' : 'don t has blocker';\r\n        this.log(`${task.card2.name} ${text}`);\r\n    }\r\n\r\n    static highManeuver(game, task, player, opponent) {\r\n        if (!task.card2.highManeuver) {\r\n            task.card2.highManeuver = true;\r\n            this.log(`${task.card2.name} has highManeuver`);\r\n        }\r\n    }\r\n\r\n    static deploy(game, task, player, opponent) {\r\n        let card1 = task.card2;\r\n        card1.selectable = false;\r\n        card1.canAttack = false;\r\n        const cardPlayer = this.getPlayer(card1.isPlayer1);\r\n        this.log(`${card1.name} is deployed`);\r\n        this.addTask({ id: this.play.name, card1, zone: cardPlayer.positions.field, regularPlay: false });\r\n    }\r\n\r\n    static attackActiveEnnemy(game, task, player, opponent) {\r\n        if (!task.card2.attackActiveEnnemy || task.card2.attackActiveEnnemy < task.effect.value) {\r\n            task.card2.attackActiveEnnemy = task.effect.value;\r\n            this.log(`${task.card2.name} can now attack unit with AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(game, task, player, opponent) {\r\n        if (!task.card2.immuneAp || task.card2.immuneAp < task.effect.value) {\r\n            task.card2.immuneAp = task.effect.value;\r\n            this.log(`${task.card2.name} is now immune to AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default effects;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass attack {\r\n    static stepSelectBlocker = 'stepSelectBlocker';\r\n    static stepSelectActionCards = 'stepSelectActionCards';\r\n    static stepSelectCardOpponent = 'stepSelectCardOpponent';\r\n    static stepEffectBattle = 'stepEffectBattle';\r\n    static stepShowFight = 'stepShowFight';\r\n    static stepFight = 'stepFight';\r\n    static attackStep = [\r\n        this.stepSelectBlocker,\r\n        this.stepSelectActionCards,\r\n        this.stepSelectCardOpponent,\r\n        this.stepEffectBattle,\r\n        this.stepShowFight,\r\n        this.stepFight\r\n    ];\r\n\r\n    static attack(game, task, player, opponent) {\r\n        game.taskAttack = task;\r\n        let result = {};\r\n        task.step = task.step ? task.step : this.attackStep[0];\r\n\r\n        while (!result.stop && !result.end) {\r\n            if (task.step === this.stepSelectBlocker)\r\n                result = this.selectBlocker(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectActionCards)\r\n                result = this.askForActionCards(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectCardOpponent)\r\n                result = this.selectCardOpponent(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepEffectBattle)\r\n                result = this.effectBattle(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepShowFight)\r\n                result = this.showFight(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepFight)\r\n                result = this.fight(game, task, player, opponent);\r\n\r\n            else\r\n                result.end = true;\r\n\r\n            if (!result || (!result.stop && !result.end))\r\n                this.nextStep(task);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static nextStep(task) {\r\n        const array = this.attackStep;\r\n        const index = array.indexOf(task.step);\r\n        if (index < array.length - 1)\r\n            task.step = array[index + 1];\r\n        else\r\n            task.step = 'end';\r\n        return {};\r\n    }\r\n\r\n    static selectBlocker(game, task, player, opponent) {\r\n        const blockers = opponent.field.filter(x => x.blocker && x.active);\r\n        if (task.attacker.highManeuver || task.blocker || blockers.length < 1)\r\n            return {};\r\n\r\n        if (!task.cardChoice && !task.choice)\r\n            return this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: opponent.isPlayer1,\r\n                task,\r\n                text: 'Select a blocker ?',\r\n                cards: blockers,\r\n                choices: [{ text: 'none' }]\r\n            });\r\n\r\n        task.blocker = task.cardChoice;\r\n        delete (task.cardChoice);\r\n        delete (task.choice);\r\n        return {};\r\n    }\r\n\r\n    static selectCardOpponent(game, task, player, opponent) {\r\n        if(task.attacker.location !== this.locationField){\r\n            this.log(`Attack is canceled because ${task.attacker.name} is no longer on the field.`);\r\n            return {end:true};\r\n        }\r\n\r\n        if (task.blocker) {\r\n            task.target = task.blocker;\r\n            return {};\r\n        }\r\n\r\n        if (task.target) {\r\n            const isValidTarget = this.isValidTarget(opponent, task.attacker, task.target);\r\n            return { end: !isValidTarget };\r\n        }\r\n\r\n        if (opponent.base.length > 0) {\r\n            task.target = opponent.base[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.attacker.ap < 1) {\r\n            this.setActive(game, task.attacker, false);\r\n            return {};\r\n        }\r\n\r\n        if (opponent.shield.length > 0) {\r\n            this.setActive(game, task.attacker, false);\r\n            if (task.shieldProtection)\r\n                return {};\r\n\r\n            const card1 = opponent.shield[0];\r\n            card1.position = this.clone(opponent.positions.shield);\r\n            task.attacker.to = { ...task.attacker.position, x: opponent.positions.shield.x, y: opponent.positions.shield.y };\r\n\r\n            const burstEffect = this.lunchEffectTriggerForOneCard(card1, this.trigger_burst);\r\n            const tasks = [];\r\n            tasks.push({ id: this.showCards.name, card1, delay: 100 });\r\n\r\n            if (!burstEffect.cancelMoveToTrash)\r\n                tasks.push({ id: this.spawnOrMove.name, card1, to: this.locationTrash });\r\n\r\n            this.addTasks(tasks);\r\n            return {};\r\n        }\r\n\r\n        return this.end(player.isPlayer1);\r\n    }\r\n\r\n    static isValidTarget(opponent, attacker, target) {\r\n        return target.isPlayer1 === opponent.isPlayer1\r\n            && (!target.active || (attacker.attackActiveEnnemy && attacker.attackActiveEnnemy > target.level));\r\n    }\r\n\r\n    static effectBattle(game, task, player, opponent) {\r\n        let isExisting = task.battleEffectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.attacker, this.trigger_battle);\r\n        if (isExisting) {\r\n            task.battleEffectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    static showFight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n\r\n        this.addTaskFirst({ id: this.showCards.name, card1: task.attacker, card2: task.target, delay: true });\r\n        this.nextStep(task);\r\n        return { stop: true };\r\n    }\r\n\r\n    static fight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n        \r\n        let damage = task.breach ? task.breach : task.attacker.ap;\r\n        if (task.target.immuneAp && damage < task.target.immuneAp)\r\n            damage = 0;\r\n        task.target.hp -= damage;\r\n        task.target.hpOrigin -= damage;\r\n        \r\n\r\n        damage = task.target.ap;\r\n        if (task.attacker.immuneAp && damage < task.attacker.immuneAp)\r\n            damage = 0;\r\n        task.attacker.hp -= damage;\r\n        task.attacker.hpOrigin -= damage;\r\n\r\n        const activeBreach = !task.breach && this.isCardUnit(task.target) && task.attacker.breach && task.target.hp < 1;\r\n        this.setActive(game, task.attacker, false);\r\n        let tasks = [];\r\n        const delay = activeBreach;\r\n        let tasksAttackerDead = [];\r\n\r\n        if (!task.breach && task.attacker.hp < 1)\r\n            tasksAttackerDead = this.destroyUnit(task.attacker, false);\r\n\r\n        if (task.target.hp < 1)\r\n            tasks = this.destroyUnit(task.target, delay);\r\n\r\n        this.setActive(game, task.attacker, false);\r\n\r\n        if (activeBreach) {\r\n            this.cardHighlight = this.cardHighlight.filter(x => x.index !== task.attacker.index);\r\n            tasks.push({\r\n                id: this.attack.name, step: this.stepSelectCardOpponent,\r\n                attacker: task.attacker, isPlayer1: task.attacker.isPlayer1,\r\n                breach: task.attacker.breach, delay: true\r\n            });\r\n        }\r\n\r\n        if (tasksAttackerDead.length > 0)\r\n            tasks = tasks.concat(tasksAttackerDead);\r\n\r\n        this.addTasks(tasks);\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default attack;\r\n","\r\n\r\nclass setup {\r\n\r\n    static handStartLength = 5;\r\n    static resourceStart = 0;\r\n    static shieldStartLength = 6;\r\n\r\n    static setupGame(game) {\r\n        if (this.quickstart) {\r\n            this.resourceStart = 8;\r\n            this.handStartLength = 15;\r\n        }\r\n\r\n        game.player1 = this.createPlayer(game, true, game.decklistPlayer1);\r\n        game.player2 = this.createPlayer(game, false, game.decklistPlayer2);\r\n        game.isPlayer1 = this.quickstart ? false : Math.floor(Math.random() * 2) == 1;\r\n        game.fields = [game.grid.player1Hand, game.grid.player1Field, game.grid.player2Hand, game.grid.player2Field];\r\n\r\n        const playerOpponent = game.isPlayer1 ? game.player1 : game.player2;\r\n        game.player = playerOpponent;\r\n        game.resourcesMax = 2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        let tasks = [];\r\n        for (let i = 0; i < this.handStartLength; i++) {\r\n            tasks = tasks.concat([\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true },\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: false }]);\r\n        }\r\n\r\n        this.addTasks(tasks);\r\n    }\r\n\r\n    static createPlayer(game, isPlayer1, decklist) {\r\n        const deck = this.createDeck(game, isPlayer1, decklist);\r\n\r\n        const result = {\r\n            isPlayer1, deck, shield: [], hand: [], field: [], trash: [], base: [], empty: [], incruises: [],\r\n            resourcesMax: this.resourceStart, resourcesAvailable: 0, resourcesEx: 0, index: isPlayer1 ? '1' : '2',\r\n            positions: {\r\n                deck: isPlayer1 ? game.grid.player1Deck : game.grid.player2Deck,\r\n                shield: isPlayer1 ? game.grid.player1Shield : game.grid.player2Shield,\r\n                hand: isPlayer1 ? game.grid.player1Hand : game.grid.player2Hand,\r\n                field: isPlayer1 ? game.grid.player1Field : game.grid.player2Field,\r\n                trash: isPlayer1 ? game.grid.player1Trash : game.grid.player2Trash,\r\n                base: isPlayer1 ? game.grid.player1Base : game.grid.player2Base,\r\n                empty: {}\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static createDeck(game, isPlayer1, decklist) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = game.cardList.find(x => x.id == id);\r\n            if (!card)\r\n                throw new Error(\"This card doesn't exist : \" + id);\r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(this.createCard(card.id, isPlayer1));\r\n        });\r\n\r\n        if(!game.tuto){\r\n            this.createUniqueRare(game, result);\r\n            result = this.sortRandom(result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static createUniqueRare(game, deck) {\r\n        const rareKeyWord = \"_p1\";\r\n        var rareCards = game.gundamCards.files.split(',').filter(x => x.includes(rareKeyWord)).map(x => x = x.replace(rareKeyWord, \"\"));\r\n        rareCards.forEach(rareCard => {\r\n            const firstCard = deck.find(x => x.id === rareCard);\r\n            if (firstCard)\r\n                firstCard.id += rareKeyWord;\r\n        });\r\n    }\r\n\r\n    static sortRandom(cards) {\r\n        return cards.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    static mulligan(game, task) {\r\n        if (this.quickstart)\r\n            task.choice = {};\r\n\r\n        if (!task.choice) {\r\n            return this.addTaskFirst(\r\n                {\r\n                    id: this.popup.name,\r\n                    isPlayer1: true,\r\n                    task,\r\n                    text: 'Do you want to do a mulligan ?',\r\n                    choices: [{ id: 'yes', text: 'yes' }, { text: 'no' }]\r\n                }\r\n            );\r\n        } else {\r\n            let tasks = [];\r\n            if (task.choice.id === 'yes') {\r\n                game.player1.deck = this.sortRandom(game.player1.deck.concat(game.player1.hand));\r\n                const removeIds = game.player1.hand.map(x => x.index);\r\n                game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n                game.player1.hand = [];\r\n\r\n                for (let i = 0; i < this.handStartLength; i++)\r\n                    tasks.push({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true });\r\n            }\r\n\r\n            // if (!this.quickstart)\r\n                tasks = tasks.concat(this.addShielsAndBase(game));\r\n\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: true });\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: false });\r\n\r\n            tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n            this.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static addShielsAndBase(game) {\r\n        let tasks = [];\r\n\r\n        for (let i = 0; i < this.shieldStartLength; i++) {\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: true });\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: false });\r\n        }\r\n\r\n        game.player1.base = [this.spawnIfNot(this.createCard('EXB-001', true, this.locationBase))];\r\n        game.player2.base = [this.spawnIfNot(this.createCard('EXB-001', false, this.locationBase))];\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\r\nexport default setup;\r\n","class popup {\r\n\r\n    static popup(game, task) {\r\n        if(!task.task)\r\n            throw new Error('Il faut préciser la task de la popup !');\r\n        \r\n        if(!task.isPlayer1)\r\n            return this.handleAiPopup(game,task);\r\n        \r\n        if (!game.popup || !game.popup.task || (!game.popup.task.cardChoice && !game.popup.task.choice)) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        } \r\n        \r\n        this.deletePopup();\r\n    }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.cardChoice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n    }\r\n}\r\n\r\n\r\nexport default popup;","/* eslint-disable no-unused-vars */\r\n\r\nclass tasks {    \r\n    static indexTask=1;\r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1\r\n                : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1\r\n                    : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = isPlayer1 ? game.player2 : game.player1;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            if(!this[task.id])\r\n                throw new Error(`Can't handle this tasks : ${JSON.stringify(task)}`);\r\n            const result = this[task.id](game, task, player, opponent);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            game.tasks = game.tasks.filter(x=> x.index !== task.index);\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? this.delay : task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (this.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static addTasksIndex(tasks){\r\n        tasks.forEach(x=> {\r\n            x.index = this.indexTask;\r\n            this.indexTask++;\r\n        });\r\n    }\r\n    \r\n    static addTask(task) { return this.addTasks([task]); }\r\n    static addTasks(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.addTasksIndex(tasks);\r\n        this.game.tasks = this.game.tasks.concat(tasks);\r\n        return {};\r\n    }\r\n\r\n    static addTaskFirst(task) { return this.addTasksFirst([task]); }\r\n    static addTasksFirst(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.game.tasks = tasks.concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static addTaskPos2(task) { return this.addTasksPos2([task]); }\r\n    static addTasksPos2(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        const first = this.game.tasks.splice(0,1)[0];\r\n        this.game.tasks = [first].concat(tasks).concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static startTasks(game){\r\n        game.triggerRefreshAlreadyDone=false;\r\n        this.resetZIndex(game);\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;\r\n","class array {\r\n\r\n    static test(message) {\r\n        alert(message);\r\n    }\r\n\r\n    static wait() { }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static addFunction(cla, obj, useTuto) {\r\n        const ignore = ['length', 'name', 'prototype'];\r\n        cla.forEach(c => {\r\n            Object.getOwnPropertyNames(c).forEach(method => {\r\n                if (!ignore.includes(method)) {\r\n                    if (obj[method] && !useTuto) {\r\n                        throw new Error(`cette fonction existe deja : ${c.name}.${method}`);\r\n                    }\r\n                    else {\r\n                        obj[method] = c[method];\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Log\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n\r\n    // Utils\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static alreadyDone(valueOld, valueNew) {\r\n        if (valueOld === undefined && !valueNew)\r\n            return true;\r\n        return valueOld == valueNew;\r\n    }\r\n}\r\n\r\n\r\nexport default array;\r\n","class title {\r\n\r\n    static showTitle(game, task) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: this.clone(game.grid.textZone)\r\n        };\r\n        game.textEffect.to = this.clone(game.grid.textZone);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static showCards(game, task) {\r\n        if (!task.card1 || this.cardHighlight.find(x => x.index === task.card1.index)) {\r\n            task.delay = null;\r\n            return;\r\n        }\r\n\r\n        this.spawnIfNot(task.card1);\r\n        this.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? game.grid.highlightCardLeft : game.grid.highlightCardCenter;\r\n        task.card1.to = this.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n        task.card1.verso = false;\r\n\r\n        if (task.card2) {\r\n            this.spawnIfNot(task.card2);\r\n            this.cardHighlight.push(task.card2);\r\n            task.card2.to = this.clone(game.grid.highlightCardRight);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n            task.card2.verso = false;\r\n        }\r\n\r\n        if (task.text)\r\n            this.taskTextShow(game, task);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        task.card1 = this.spawnOrMove(game, task, player);\r\n        task.delay = true;\r\n        this.showCards(game, task);\r\n    }\r\n\r\n    static showCardsEffect(game, task) {\r\n        task.card1.fxRed = !task.hideFx;\r\n        task.card1.fxText = task.text;\r\n        task.card1.verso = false;\r\n        if (!task.hideFx) {\r\n            this.log(`Apply effect of ${task.card1.name} : ${task.text}`);\r\n            this.addTaskPos2({ id: this.showCardsEffect.name, card1: task.card1, hideFx: true, delay: true });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default title;\r\n","class turn {\r\n    static getPlayerTurn() { return this.getPlayer(this.game.isPlayer1); }\r\n    static getPlayer(isPlayer1) { return isPlayer1 ? this.game.player1 : this.game.player2; }\r\n    static getPlayerTurnOpponent() { return this.getOpponent(this.game.isPlayer1); }\r\n    static getOpponent(isPlayer1) { return isPlayer1 ? global.game.player2 : global.game.player1; }\r\n\r\n    static turnIndex = 0;\r\n\r\n    static nextTurn(game, task, player) {\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerMultiple(player.field, this.trigger_end);\r\n        task.effectsAlreadyDone = true;\r\n\r\n        if (isExisting) {\r\n            this.addTasks([{ id: this.refreshFieldAndHand.name, isPlayer1: true }, { id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        game.isPlayer1 = !game.isPlayer1;\r\n        game.player = this.getPlayerTurn();\r\n        const playerId = game.isPlayer1 ? '1' : '2';\r\n        this.startTasks(game);\r\n\r\n        const idTask = game.isPlayer1 ? this.taskMoveAndShowCenter.name : this.spawnOrMove.name;\r\n\r\n        const tasks = [\r\n            { id: this.showTitle.name, value: 'New turn for player ' + playerId, isPlayer1: game.isPlayer1, delay: true },\r\n            { id: idTask, isPlayer1: game.isPlayer1, from: this.locationDeck, to: this.locationHand }\r\n        ];\r\n\r\n        this.addTasks(tasks);\r\n\r\n        this.removeOneTurnEffect(game);\r\n\r\n        if (game.player.resourcesMax < 1)\r\n            game.player.resourcesMax = 1;\r\n        else if (game.player.resourcesMax < 10)\r\n            game.player.resourcesMax += 1;\r\n\r\n        game.player.resourcesAvailable = game.player.resourcesMax + game.player.resourcesEx;\r\n        game.resourcesMax = Math.max(game.player1.resourcesAvailable, game.player1.resourcesMax, game.player2.resourcesAvailable, game.player2.resourcesMax) + 1;\r\n\r\n\r\n        game.player.field.concat(game.player.base)\r\n            .forEach(x => this.setActive(game, x, true));\r\n\r\n        this.setSelectableFalse();\r\n\r\n        const baseText = game.player.base.length > 0 ? game.player.base[0].hp + 'hp ' : '-';\r\n        this.turnIndex++;\r\n        this.log(`-- Turn ${this.turnIndex} for player ${playerId}, ${game.player.resourcesAvailable} resources, ${game.player.shield.length} shield, ${baseText} base`);\r\n\r\n        this.lunchEffectTriggerMultiple(game.player.field, this.trigger_turn);\r\n    }\r\n}\r\n\r\n\r\nexport default turn;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass tuto {\r\n    static handStartLength = 0;\r\n    static tutoStep = 0;\r\n    static tutoStepDone = -1;\r\n    static tutoSmall(game) { return { ...game.grid.resources, x: game.grid.width / 2 - 150, width: 300 }; }\r\n\r\n    static addTutoMask(game) {\r\n        const properties = 'player1Shield,player1Base,player1Deck,player1Trash,player2Shield,player2Base,player2Deck,player2Trash';\r\n        game.tutoMasks = properties\r\n            .split(',')\r\n            .map(prop => { return { ...game.grid[prop], isPlayer1: prop.startsWith('player1'), id: prop } });\r\n\r\n        game.tutoMasks.push({ ...game.grid.resources, isPlayer1: true, id: 'resources' });\r\n        game.tutoMasks.push({ ...game.grid.logZone, isPlayer1: false, id: 'logZone' });\r\n        game.tutoMasks.push({\r\n            isPlayer1: true, id: 'buttonEffect',\r\n            x: game.grid.buttonEffect.x - 10, width: game.grid.buttonEffect.width + 20,\r\n            y: game.grid.buttonEffect.y - 10, height: game.grid.buttonEffect.height + 20\r\n        });\r\n        game.tutoMasks.push({\r\n            isPlayer1: true, id: 'buttonEndTurn',\r\n            x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n            y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n        });\r\n    }\r\n\r\n    static mulligan(game) { \r\n    }\r\n\r\n    static continueTuto(game) {\r\n        game.tutoStep = game.tutoStep ? game.tutoStep : 0;\r\n\r\n        if (game.showTextTuto && game.showTextTuto.next) {\r\n            game.tutoStep++;\r\n            game.showTextTuto.next = false;\r\n        }\r\n\r\n        let step = this.tutoSteps[game.tutoStep];\r\n        if (!step)\r\n            return;\r\n\r\n        if (this.autoNextStep(game, step)) {\r\n            game.tutoStep++;\r\n        }\r\n\r\n        step = this.tutoSteps[game.tutoStep];\r\n        if (!step || step.isDone)\r\n            return;\r\n\r\n        step.isDone = true;\r\n        step.action(this, game);\r\n    }\r\n\r\n    static autoNextStep(game, step) {\r\n        if (!step.isDone || game.tutoStep + 1 > this.tutoSteps.length)\r\n            return false;\r\n\r\n        const nextStep = this.tutoSteps[game.tutoStep + 1];\r\n        const task = game.tasks.length > 0 ? game.tasks[0] : null;\r\n        return nextStep.conditions(this, game, task);\r\n    }\r\n\r\n    static conditionNexTurn(context, game) {\r\n        return game.player1.hand.length > 0 && !game.player1.hand[0].to && context.cardHighlight.length < 1;\r\n    }\r\n\r\n    static tutoText = {\r\n        used: null,\r\n        en: {\r\n            welcome: 'Welcome to Gundam TCG.',\r\n            deck: 'This is your deck. It contains 50 cards.',\r\n            playUnit: 'The first turn has begun. You’ve drawn one card from your deck. It’s a unit card you can play. Select it and place it here.',\r\n            cantAttack: \"A unit can't attack the turn it's played unless it's linked with a pilot. We’ll learn about linking pilots shortly.\",\r\n            endTurn: \"You’ve done all you can this turn. Press the 'End Turn' button to proceed.\",\r\n            zoom: \"Click on a card to zoom in and see its details.\",\r\n            showLevelCost: \"In the top-left corner of a card, you can see its level (3) and cost (2).\",\r\n            showLink: \"In the bottom-left corner, you’ll find the card’s pilot link condition: (White Base Team) Trait.\",\r\n            showApHp: \"In the bottom-right corner, you’ll see the card’s Attack Points (AP: 2) and Hit Points (HP: 3). Click again to unzoom.\",\r\n            showResources: \"This is the 2 resource bars. The bottom bar is yours; the top one belongs to your opponent. You currently have 3 resources.\",\r\n            showResources2: \"Your opponent has 2 regular resources (yellow) and 1 EX resource (blue). Player 2 always starts with one EX resource.\",\r\n            showResources3: \"To play a card, you must pay its cost using your available resources. EX resources are always used first. At the start of each turn, you gain 1 additional resource.\",\r\n            playLevel3: \"To play a level 3 card that costs 2, you need at least 3 total resources, including 2 available ones.\",\r\n            playIt: \"The requirements are met. The card is glowing yellow, meaning you can play it. Do it like the previous one.\",\r\n            resourcesUsed: \"2 resources were used. You still have 1 available (yellow) and 2 unavailable (red).\",\r\n            ennemyBase: \"This is the enemy base. Each player starts the game with one.\",\r\n            attack: \"This unit is ready to attack. Select it and release it on the opponent’s field to launch an attack.\",\r\n            rested: \"This unit has attacked. It’s now rested (rotated 90 degrees).\",\r\n            showApHp2: \"Above the card, you see (0 - 1), indicating the card’s AP (0) and HP (1).\",\r\n            showApHp3: \"The unit attacked the enemy base, dealing 2 AP damage. The base had 3 HP and is now reduced to 1 HP.\",\r\n            showEffect: \"When a card’s effect activates, a red circle with text appears. For this card: 'repair 1'.\",\r\n            p2LinkUnit: \"Player 2 has played a unit with a linked pilot, so it can attack this turn.\",\r\n            p2AttackBase: \"Player 2 can now use this unit to attack our base.\",\r\n            p2AttackUnit: \"Alternatively, it can attack our rested units.\",\r\n            unitTrash: \"Our unit’s HP reached 0. It’s been sent to the trash.\",\r\n            linkUnit: \"This unit can be linked with a pilot. Play it now.\",\r\n            linkPilot: \"You can now pair this pilot with the unit you just played.\",\r\n            attackLink: \"Now you can attack using the linked unit.\"\r\n        },\r\n        fr: {\r\n            welcome: 'Bienvenue dans Gundam TCG.',\r\n            deck: 'Voici votre deck. Il contient 50 cartes.',\r\n            playUnit: 'Le premier tour commence. Vous avez pioché une carte de votre deck. C’est une carte unité que vous pouvez jouer. Sélectionnez-la et placez-la ici.',\r\n            cantAttack: \"Une unité ne peut pas attaquer le tour où elle est jouée, sauf si elle est liée à un pilote. Nous verrons cela dans un instant.\",\r\n            endTurn: \"Vous ne pouvez plus rien faire ce tour-ci. Appuyez sur le bouton 'Fin du tour' pour continuer.\",\r\n            zoom: \"Cliquez sur une carte pour zoomer et voir ses détails.\",\r\n            showLevelCost: \"En haut à gauche d’une carte, vous pouvez voir son niveau (3) et son coût (2).\",\r\n            showLink: \"En bas à gauche, vous trouverez la condition de liaison de pilote : Trait (Équipe White Base).\",\r\n            showApHp: \"En bas à droite, vous verrez les Points d’Attaque (AP : 2) et les Points de Vie (HP : 3) de la carte. Cliquez à nouveau pour dézoomer.\",\r\n            showResources: \"Voici les 2 barres de ressources. Celle du bas est la vôtre ; celle du haut est celle de votre adversaire. Vous disposez actuellement de 3 ressources.\",\r\n            showResources2: \"Votre adversaire possède 2 ressources classiques (jaunes) et 1 ressource EX (bleue). Le joueur 2 commence toujours avec une ressource EX.\",\r\n            showResources3: \"Pour jouer une carte, vous devez en payer le coût avec vos ressources disponibles. Les ressources EX sont toujours utilisées en premier. Au début de chaque tour, vous gagnez une ressource supplémentaire.\",\r\n            playLevel3: \"Pour jouer une carte de niveau 3 avec un coût de 2, vous devez avoir au moins 3 ressources au total, dont 2 disponibles.\",\r\n            playIt: \"Les conditions sont remplies. La carte brille en jaune : vous pouvez la jouer, comme la précédente.\",\r\n            resourcesUsed: \"2 ressources ont été utilisées. Il vous en reste 1 disponible (jaune) et 2 indisponibles (rouges).\",\r\n            ennemyBase: \"Voici la base ennemie. Chaque joueur commence la partie avec une base.\",\r\n            attack: \"Cette unité est prête à attaquer. Sélectionnez-la et relâchez-la sur le terrain adverse pour lancer l’attaque.\",\r\n            rested: \"Cette unité a attaqué. Elle est maintenant engagée (pivotée à 90 degrés).\",\r\n            showApHp2: \"Au-dessus de la carte, vous voyez (0 - 1), indiquant les AP (0) et les HP (1).\",\r\n            showApHp3: \"L’unité a attaqué la base ennemie, infligeant 2 points de dégâts (AP). La base avait 3 HP, elle en a maintenant 1.\",\r\n            showEffect: \"Lorsqu’un effet de carte est activé, un cercle rouge avec du texte apparaît. Pour cette carte : 'Réparer 1'.\",\r\n            p2LinkUnit: \"Le joueur 2 a joué une unité avec un pilote lié. Elle peut donc attaquer ce tour-ci.\",\r\n            p2AttackBase: \"Le joueur 2 peut utiliser cette unité pour attaquer notre base.\",\r\n            p2AttackUnit: \"Ou bien il peut attaquer notre unité engagée.\",\r\n            unitTrash: \"Les PV de notre unité sont tombés à 0. Elle a été envoyée à la défausse.\",\r\n            linkUnit: \"Cette unité peut être liée à un pilote. Jouez-la maintenant.\",\r\n            linkPilot: \"Vous pouvez maintenant associer ce pilote à l’unité que vous venez de jouer.\",\r\n            attackLink: \"Vous pouvez maintenant attaquer avec cette unité liée.\"\r\n        }\r\n    }\r\n\r\n    static getTextTuto(prop){\r\n        if(!this.tutoText.used)\r\n            this.tutoText.used = this.tutoText.fr;\r\n        return this.tutoText.used[prop];\r\n    }\r\n\r\n    static tutoSteps = [\r\n        {\r\n            // Show title\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                context.addTutoMask(game);\r\n                game.showTextTuto = {\r\n                    ...context.tutoSmall(game),\r\n                    text: context.getTextTuto('welcome')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Show deck icon\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.player1.resourcesMax = 1;\r\n                game.player1.resourcesEx = 0;\r\n                game.player2.resourcesMax = 1;\r\n                game.player2.resourcesEx = 1;\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Deck' && x.id !== 'player2Deck');\r\n                game.isPlayer1 = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.player1Deck),\r\n                    text: context.getTextTuto('deck')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // draw a card for the first turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Play Gm unit\r\n            conditions: (context, game, task) => {\r\n                return context.conditionNexTurn(context, game);\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...game.grid.player1Field, y: game.grid.player1Field.y - game.grid.player1Field.height * 0.75, hideNext: true, sens: 1,\r\n                    text: context.getTextTuto('playUnit')\r\n                };\r\n                game.showTextTuto.arrow = context.addArrow(game.showTextTuto, game.grid.player1Field, 1);\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.play.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return game.player1.field.length === 1 && !game.player1.field[0].to; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position),\r\n                    text: context.getTextTuto('cantAttack')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // unfreeze and mask end turn button\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // zoom on a card\r\n            conditions: (context, game, task) => {\r\n                return context.conditionNexTurn(context, game);\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('zoom')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return game.cardCenter; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y + game.cardCenter.position.height * 0.17, height: game.cardCenter.position.height * 0.83, zindex: 120,\r\n                    text: context.getTextTuto('showLevelCost')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y, height: game.cardCenter.position.height * 0.9, zindex: 120,\r\n                    text: context.getTextTuto('showLink')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y, height: game.cardCenter.position.height * 0.9, zindex: 120, hideNext: true,\r\n                    text: context.getTextTuto('showApHp')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return !game.cardCenter; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight, 3),\r\n                    text: context.getTextTuto('showResources')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight * 1.5, 1),\r\n                    text: context.getTextTuto('showResources2')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight * 1.5, 3),\r\n                    text: context.getTextTuto('showResources3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position),\r\n                    text: context.getTextTuto('playLevel3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // play GD01-004 Guncanon\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('playIt')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1.id === 'GD01-004'; // Guncanon\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight, 3),\r\n                    text: context.getTextTuto('resourcesUsed')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // animations base arriving\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                context.addShielsAndBase(game);\r\n                game.freeze = false;\r\n                context.addTask({ id: context.taskEndRefresh.name });\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return game.tasks.length == 0 && game.player2.base.length > 0 && !game.player2.base[0].to; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.positions.base),\r\n                    text: context.getTextTuto('ennemyBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Gm attack\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position), hideNext: true,\r\n                    text: context.getTextTuto('attack')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.play.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return !task && !game.player1.field[0].to; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position),\r\n                    text: context.getTextTuto('rested')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return context.tutoStep == 18 && !task; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.base[0].position),\r\n                    text: context.getTextTuto('showApHp2')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.player2.base[0].position, 300, game.grid.boxHeight * 1.5, 1),\r\n                    text: context.getTextTuto('showApHp3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.player1.field[1].fxTextCancelFadeout = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // prepare ai turn\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.player2.resourcesMax = 2;\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.showCardsEffect.name && task.hideFx },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[1].position),\r\n                    text: context.getTextTuto('showEffect')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // prepare ai turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.freeze = false;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return game.player2.field.length > 0 && !task; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.player1.field[1].fxTextCancelFadeout = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.field[0].position),\r\n                    text: context.getTextTuto('p2LinkUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.base[0].position),\r\n                    text: context.getTextTuto('p2AttackBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position),\r\n                    text: context.getTextTuto('p2AttackUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        // show text tuto\r\n        {\r\n            conditions: (context, game, task) => { return task && task.id === context.newTurnForAI.name; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Trash' && x.id != 'player2Trash');\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.player1.positions.trash, 300, game.grid.boxHeight * 1.5, 2),\r\n                    text: context.getTextTuto('unitTrash')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            conditions: (context, game, task) => {\r\n                return context.conditionNexTurn(context, game);\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                context.addTask({ id: context.spawnOrMove.name, isPlayer1: true, from: context.locationDeck, to: context.locationHand });\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('linkUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('linkPilot')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[1].position), hideNext: true,\r\n                    text: context.getTextTuto('attackLink')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        }\r\n    ];\r\n}\r\n\r\n\r\nexport default tuto;\r\n","class pair {\r\n    static pair(game, task, player) {\r\n        const cardUnit = this.isCardUnit(task.card1) ? task.card1 : task.card2;\r\n        const cardPilot = this.isCardPilot(task.card1) ? task.card1 : task.card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n\r\n        const isExistingPairEffects = task.effectsAlreadyDonePair ? false\r\n            : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onpair);\r\n        task.effectsAlreadyDonePair = true;\r\n        if (isExistingPairEffects)\r\n            return { stop: true };\r\n\r\n        if (isLink) {\r\n            const isExistingLinkEffects = task.effectsAlreadyDoneLink ? false\r\n                : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onlink);\r\n            task.effectsAlreadyDoneLink = true;\r\n            if (isExistingLinkEffects)\r\n                return { stop: true };\r\n        }\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = this.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.pairedWith = cardUnit.index;\r\n        cardPilot.location = this.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.apOrigin += cardPilot.ap;\r\n        cardUnit.hpOrigin += cardPilot.hp;\r\n        cardUnit.hpMaxOrigin += cardPilot.hp;\r\n        cardUnit.verso = false;\r\n        cardPilot.verso = false;\r\n        this.handleMainEffectsCard(game, cardPilot, true);\r\n\r\n        if (isLink) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default pair;\r\n","class ai {\r\n    static newTurnForAI(game, task) {\r\n        if (!task.haveBeenRefresh) {\r\n            task.haveBeenRefresh = true;\r\n            game.cards.forEach(card => card.AiUsed = null);\r\n            this.addTaskFirst({ id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true });\r\n            return { stop: true };\r\n        }\r\n\r\n        const result = this.refreshAiTurn(game, task, game.player2);\r\n        if (result && result.taskAdded)\r\n            this.startTasks(game);\r\n\r\n        return result;\r\n    }\r\n\r\n    static refreshAiTurn(game, task, player) {\r\n\r\n        const cardsAvailable = player.hand.filter(x => x.selectable);\r\n        const combos = this.getAiCombos(game, task, player, cardsAvailable);\r\n\r\n        let result = this.handleAiHand(game, task, player, cardsAvailable, combos);\r\n        if (result.stop || result.taskAdded)\r\n            return result;\r\n\r\n        result = this.handleAiField(game, task, player);\r\n        if (result.taskAdded)\r\n            return result;\r\n\r\n        this.endTurn(game);\r\n        return {};\r\n    }\r\n\r\n    static handleAiPopup(game, task) {\r\n        const selectChoiceNull = task.text.includes('action card');\r\n        if (selectChoiceNull && task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.cards && task.cards.length > 0) {\r\n            task.task.cardChoice = task.cards[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        this.deletePopup();\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default ai;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass aiCombos {\r\n    static getAiCombos(game, task, player, cardsAvailable) {\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card));\r\n        const pilots = cardsAvailable.filter(card => this.isCardPilot(card));\r\n\r\n        return {\r\n            pilotLinkUnits: this.getAiCombosPilotLinkUnit(game, task, player, units, pilots),\r\n            pilotLinkUnitsOnFieldWithEffects: this.getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots)\r\n        };\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnit(game, task, player, units, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        units.forEach(unit => {\r\n            const costRemaining = player.resourcesAvailable - unit.cost;\r\n            const pilot = pilots.find(pilot => this.isLink(unit, pilot) && pilot.cost <= costRemaining);\r\n            if (pilot) {\r\n                unit.AiUsed = pilot.index;\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        player.field.filter(unit => !unit.pair).forEach(unit => {\r\n            const unitHasEffect = this.hasLinkEffect(unit);\r\n            const pilot = pilots.find(pilot => !pilot.AiUsed && this.isLink(unit, pilot) && (unitHasEffect || this.hasLinkEffect(pilot)));\r\n            if (pilot) {\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default aiCombos;\r\n","class aiPlay {\r\n    static handleAiHand(game, task, player, cardsAvailable, combos) {\r\n        if (player.base.length < 1) {\r\n            const bases = cardsAvailable.filter(card => this.isCardBase(card));\r\n            if (bases.length > 0)\r\n                return this.playCombo(player, { unit: bases[0] });\r\n        }\r\n\r\n        if (combos.pilotLinkUnits.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnits[0]);\r\n\r\n        if (combos.pilotLinkUnitsOnFieldWithEffects.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnitsOnFieldWithEffects[0]);\r\n\r\n        const combo = this.handleStrategy(game, player, cardsAvailable);\r\n        if (combo.stop || combo.taskAdded)\r\n            return combo;\r\n        if (combo && combo.unit)\r\n            return this.playCombo(player, combo);\r\n\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card))\r\n            .sort((a, b) => b.level - a.level);\r\n        if (units.length > 0)\r\n            return this.playCombo(player, { unit: units[0] });\r\n\r\n        return {};\r\n    }\r\n\r\n    static playCombo(player, combo) {\r\n        let tasks = [];\r\n        if (combo.unit && combo.unit.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.unit));\r\n\r\n        if (combo.pilot && combo.pilot.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.pilot, combo.unit));\r\n\r\n        this.addTasksFirst(tasks);\r\n        return { taskAdded: tasks.length > 0 };\r\n    }\r\n\r\n    static handleAiField(game, task, player) {\r\n        const unitsThatCanAttack = player.field\r\n            .filter(card => this.isCardUnit(card) && card.canAttack)\r\n            .sort((a, b) => b.ap - a.ap);\r\n        const attacker = unitsThatCanAttack[0];\r\n        if (!attacker)\r\n            return {};\r\n\r\n        const notEnoughShield = this.getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker);\r\n        const target = this.getTarget(game, task, player, attacker, notEnoughShield);\r\n        this.declareAiAttack(attacker, target);\r\n        return { taskAdded: true };\r\n    }\r\n\r\n    static getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker) {\r\n        let attackMinimimForWin = game.player1.shield.length + 1;\r\n        if (game.player1.base.length > 0) {\r\n            attackMinimimForWin += 1;\r\n            const base = game.player1.base[0];\r\n            if (base.hp > attacker.ap)\r\n                attackMinimimForWin += 1;\r\n        }\r\n        return attackMinimimForWin <= unitsThatCanAttack.length;\r\n    }\r\n\r\n    static getTarget(game, task, player, attacker, notEnoughShield) {\r\n        const targets = game.player1.field.filter(x => this.isValidTarget(game.player1, attacker, x) && x.hp <= attacker.ap);\r\n        const target = targets.length < 1 ? null : targets.sort((a, b) => b.level - a.level)[0];\r\n\r\n        if (target && attacker.breach)\r\n            return target;\r\n\r\n        if (notEnoughShield)\r\n            return null;\r\n\r\n        return target;\r\n    }\r\n\r\n    static getPlayCardTasks(player, card1, card2) {\r\n        const value = `I Play ${card1.name} ${card2 ? 'with ' + card2.name : ''}`;\r\n        return [\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            { id: this.play.name, card1, card2, zone: player.positions.field, regularPlay: true }\r\n        ]\r\n    }\r\n\r\n    static declareAiAttack(attacker, target) {\r\n        const value = `I attack with ${attacker.name} (Level ${attacker.level}, AP ${attacker.ap}) ${target ? 'against ' + target.name : ''}`;\r\n        this.addTasksFirst([\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            {\r\n                id: this.attack.name,\r\n                attacker, isPlayer1: false,\r\n                target\r\n            }\r\n        ]);\r\n    }\r\n}\r\n\r\n\r\nexport default aiPlay;\r\n","class aiStrategy {\r\n    static handleStrategy(game, player, cardsAvailable) {\r\n        let result = null;\r\n\r\n        const base = player.base.length > 0 ? player.base[0] : null;\r\n        if (base && base.active) {\r\n            result = this.handleStrategyCard(game, player, cardsAvailable, base);\r\n            if (result.stop || result.taskAdded)\r\n                return result;\r\n        }\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playAsap\");\r\n        if (result.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnits\");\r\n        if (result.length > 0 && game.player2.field.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnitsRested\");\r\n        if (result.length > 0 && game.player2.field.filter(x => !x.active).length > 0)\r\n            return { unit: result[0] };\r\n\r\n        return {};\r\n    }\r\n\r\n    static handleStrategyCard(game, player, cardsAvailable, card) {\r\n        let lunchMainEffectCard = false;\r\n\r\n        if (card.id === 'GD01-124'){ // Side 7\r\n            const hasActiveUnitThatNeedRepair = player.field.find(x => x.hp < x.hpMax);\r\n            lunchMainEffectCard = hasActiveUnitThatNeedRepair;\r\n        }\r\n\r\n        else if (card.id === 'ST01-016') { // Asticassia School of Technology, Earth House\r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST01-015' && player.resourcesAvailable > 1){  // White base            \r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST04-015'){ // Archangel\r\n            const hasInactiveBlocker = player.field.find(x => !x.active && this.hasEffect(x, 'blocker'));\r\n            lunchMainEffectCard = player.resourcesAvailable > 1 && hasInactiveBlocker;\r\n        } \r\n\r\n        if (lunchMainEffectCard) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name, cardChoice: card });\r\n            return { taskAdded: true };\r\n        }\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default aiStrategy;\r\n","import effectsLuncher from './effectsLuncher';\r\nimport effectsTarget from './effectsTarget';\r\nimport mainEffects from './mainEffects';\r\nimport positioner from './positioner';\r\nimport selectable from './selectable';\r\nimport cardAction from './cardAction';\r\nimport conditions from './conditions';\r\nimport cardMove from './cardMove';\r\nimport cardLife from './cardLife';\r\nimport cardPlay from './cardPlay';\r\nimport refresh from './refresh';\r\nimport effects from './effects';\r\nimport attack from './attack';\r\nimport setup from './setup';\r\nimport popup from './popup';\r\nimport tasks from './tasks';\r\nimport utils from './utils';\r\nimport show from './show';\r\nimport turn from './turn';\r\nimport tuto from './tuto';\r\nimport pair from './pair';\r\nimport ai from './ai';\r\nimport aiCombos from './aiCombos';\r\nimport aiPlay from './aiPlay';\r\nimport aiStrategy from './aiStrategy';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass game {\r\n    static game = null;\r\n    static index = 1;\r\n    static delay = 500;\r\n    static needTaskEndRefresh;\r\n    static cardHighlight = [];\r\n    static isStart;\r\n    static quickstart;\r\n\r\n    static setup(width, height, cards, decklistPlayer1, decklistPlayer2, quickstart, useTuto) {\r\n        this.cards = cards.cards;\r\n        this.quickstart = quickstart;\r\n        this.game = {\r\n            logs: '',\r\n            cards: [],\r\n            tasks: [{ id: 'setupGame' }],\r\n            cardList: cards.cards,\r\n            gundamCards: cards,\r\n            decklistPlayer1, decklistPlayer2,\r\n            incruises: [],\r\n            effects: [],\r\n            tuto:useTuto\r\n        };\r\n\r\n        const scripts = [\r\n            tasks, utils, popup, setup, positioner, turn, refresh, selectable, show, mainEffects,\r\n            cardLife, cardMove, cardPlay, cardAction, effectsLuncher, effectsTarget, conditions, effects, pair, attack,\r\n            ai, aiCombos, aiPlay, aiStrategy\r\n        ];\r\n        if(useTuto)\r\n            scripts.push(tuto); // = [tuto].concat(scripts);\r\n\r\n        utils.addFunction(scripts, this, useTuto);\r\n        this.game.grid = this.createGrid(width, height);\r\n        this.continue(this.game);\r\n        this.isStart = true;\r\n        return this.game;\r\n    }\r\n\r\n    static continue(game) {\r\n        if (this.isStart) {\r\n            this.addTaskFirst({ id: this.mulligan.name }, { id: this.nextTurn.name });\r\n            this.isStart = false;\r\n        }\r\n        this.endAnimation(game);\r\n        let result = this.handleTasks(game);\r\n        if (!game.refresh && !game.isPlayer1) {\r\n            this.addTask({ id: this.newTurnForAI.name });\r\n            result = this.continue(game);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        this.startTasks(game);\r\n        this.addTask({ id: this.play.name, card1, card2, zone, regularPlay: true });\r\n        return this.continue(game);\r\n    }\r\n\r\n    static useEffect(game) {\r\n        this.startTasks(game);\r\n        return this.lunchMainEffectCard(game);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.popup.task.choice = choice;\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.popup.task.cardChoice = card;\r\n        return game;\r\n    }\r\n\r\n    static tutoNext(game, next=true){\r\n        game.showTextTuto.next=next;\r\n        this.continueTuto(game);\r\n        return this.continue(game);\r\n    }\r\n\r\n    static showLocationCards(game, location, isPlayer1) {\r\n        const player = this.getPlayer(isPlayer1);\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            cards: player[location],\r\n            task: {},\r\n            isPlayer1: true,\r\n            text: `${location} of player ${player.index}`,\r\n            choices: [{ text: 'ok' }]\r\n        });\r\n        return game;\r\n    }\r\n\r\n    static endTurn(game, card1, card2, drop) {\r\n        this.startTasks(game);\r\n        game.tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n        return game;\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        this.game.isVictory = isPlayer1;\r\n        const message = isPlayer1 ? 'Victory' : 'Defeat';\r\n        return { end: true };\r\n    }\r\n}\r\n\r\n\r\nexport default game;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: _vm.card.fadeOut },style:({\n    left: _vm.card.position.x + 'px',\n    top: _vm.card.position.y + 'px',\n    width: _vm.card.position.width + 'px',\n    height: _vm.card.position.height + 'px',\n    transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n    'z-index': _vm.card.zindex,\n    cursor: _vm.shine ? 'pointer' : '',\n    border: _vm.card.fx ? '1px solid yellow' : ''\n  }),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(_vm.card.fxRed)?_c('div',{class:{ bgRed: 1, circle: 1, absolute: 1, fadeInOut: !_vm.card.fxTextCancelFadeout },style:(_vm.getRedFxStyle(_vm.card))}):_vm._e(),(!_vm.card)?_c('div',[_vm._v(\"No card\")]):(_vm.card.verso === true)?_c('img',{class:{ w100p: true, h100p: true, absolute: true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + 'empty.webp')}}):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute: true },style:({\n    'object-fit': 'cover',\n    'object-position': _vm.card.bgposition,\n    'pointer-events': 'none'\n  }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(_vm.card.fxText)?_c('div',{class:{ absolute: 1, 'text-center': 1, 'text-center-vertical': 1, fontSize150em: 1, 'text-shadow-black': 1, fadeInOut: !_vm.card.fxTextCancelFadeout },style:({ ..._vm.getRedFxStyle(_vm.card), 'mask-image': '', 'color': 'red' })},[_vm._v(\" \"+_vm._s(_vm.card.fxText)+\" \")]):_vm._e(),(!_vm.card.verso && !_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"w100p h100p\",style:({ transform: !_vm.card.position.rotation || _vm.card.position.rotation == 0 ? '' : 'rotate(-90deg)' })},[_c('div',{staticClass:\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\",staticStyle:{\"width\":\"70px\",\"height\":\"30px\",\"top\":\"-10px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")])]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine circle15px\",staticStyle:{\"top\":\"0px\",\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div @click=\"$emit('click', card)\"\r\n    :class=\"{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: card.fadeOut }\" :style=\"{\r\n      left: card.position.x + 'px',\r\n      top: card.position.y + 'px',\r\n      width: card.position.width + 'px',\r\n      height: card.position.height + 'px',\r\n      transform: 'rotate(' + card.position.rotation + 'deg)',\r\n      'z-index': card.zindex,\r\n      cursor: shine ? 'pointer' : '',\r\n      border: card.fx ? '1px solid yellow' : ''\r\n    }\">\r\n    <div v-if=\"card.fxRed\" :class=\"{ bgRed: 1, circle: 1, absolute: 1, fadeInOut: !card.fxTextCancelFadeout }\"\r\n      :style=\"getRedFxStyle(card)\">\r\n    </div>\r\n\r\n\r\n    <div v-if=\"!card\">No card</div>\r\n\r\n    <!-- Card Image-->\r\n    <img v-else-if=\"card.verso === true\" :class=\"{ w100p: true, h100p: true, absolute: true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + 'empty.webp')\" />\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute: true }\" draggable=\"false\" :style=\"{\r\n      'object-fit': 'cover',\r\n      'object-position': card.bgposition,\r\n      'pointer-events': 'none'\r\n    }\" :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n\r\n    <!-- fxText-->\r\n    <div v-if=\"card.fxText\"\r\n      :class=\"{ absolute: 1, 'text-center': 1, 'text-center-vertical': 1, fontSize150em: 1, 'text-shadow-black': 1, fadeInOut: !card.fxTextCancelFadeout }\"\r\n      :style=\"{ ...getRedFxStyle(card), 'mask-image': '', 'color': 'red' }\">\r\n      {{ card.fxText }}\r\n    </div>\r\n\r\n    <!-- stats-->\r\n    <div v-if=\"!card.verso && !hidestat && (card.ap || card.hp)\" class=\"w100p h100p\"\r\n      :style=\"{ transform: !card.position.rotation || card.position.rotation == 0 ? '' : 'rotate(-90deg)' }\">\r\n      <div class=\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\"\r\n        style=\"width:70px; height:30px; top:-10px; background-color: #FFFFFFB0;\">\r\n        {{ card.ap }} - {{ card.hp }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- red background-->\r\n    <div class=\"w100p h100p absolute shine circle15px\" v-if=\"card && card.dead\"\r\n      style=\"top:0px; background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat'],\r\n  methods: {\r\n    getRedFxStyle(card) {\r\n      return {\r\n        opacity: card.fxTextCancelFadeout ? 1 : 0,\r\n        left: '-100%',\r\n        top: '-71.3%',\r\n        width: (this.card.position.width * 3) + 'px', height: (this.card.position.width * 3) + 'px',\r\n        'mask-image': 'radial-gradient(rgba(0 0 0 /0) 40%, black 45%, rgba(0 0 0 /0) 70%)'\r\n      };\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=8679530e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8679530e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#F44336', _vm.p1max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#3F51B5', _vm.p1yellow + _vm.p1blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#FFEB3B', _vm.p1yellow))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#F44336', _vm.p2max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#3F51B5', _vm.p2yellow + _vm.p2blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#FFEB3B', _vm.p2yellow))}),(_vm.p1yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(true, _vm.p1yellow))},[_vm._v(_vm._s(_vm.p1yellow)+\" \")]):_vm._e(),(_vm.p2yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(false, _vm.p2yellow))},[_vm._v(_vm._s(_vm.p2yellow)+\" \")]):_vm._e(),(_vm.p1blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(true, _vm.p1yellow + _vm.p1blue))},[_vm._v(\" \"+_vm._s(_vm.p1yellow + _vm.p1blue)+\" \")]):_vm._e(),(_vm.p2blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(false, _vm.p2yellow + _vm.p2blue))},[_vm._v(\" \"+_vm._s(_vm.p2yellow + _vm.p2blue)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"relative\" style=\"width: 100%; height: 100%;\">\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#F44336', p1max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#3F51B5', p1yellow + p1blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#FFEB3B', p1yellow)\"></div>\r\n\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#F44336', p2max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#3F51B5', p2yellow + p2blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#FFEB3B', p2yellow)\"></div>\r\n\r\n        <div v-if=\"p1yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(true, p1yellow)\">{{ p1yellow }}\r\n        </div>\r\n        <div v-if=\"p2yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(false, p2yellow)\">{{ p2yellow }}\r\n        </div>\r\n\r\n        <div v-if=\"p1blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(true, p1yellow + p1blue)\">\r\n            {{ p1yellow + p1blue }}\r\n        </div>\r\n        <div v-if=\"p2blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(false, p2yellow + p2blue)\">\r\n            {{ p2yellow + p2blue }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.banana {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    mask-image: radial-gradient(rgba(0 0 0 /0) 40%, black 45%);\r\n}\r\n\r\n.text {\r\n    color: black;\r\n    background: #FFEB3B;\r\n    border-radius: 50%;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'banana-bars',\r\n    props: ['width', 'p1yellow', 'p1blue', 'p2yellow', 'p2blue', 'p1max', 'p2max', 'max'],\r\n    methods: {\r\n        getBananaStyle(isPlayer1, color, value) {\r\n            const percent = value * 100 / this.max;\r\n            const margin = 10;\r\n            const angle = isPlayer1 ? 225 : 45;\r\n            const anglePercent = percent * 180 / 100;\r\n            const anglePercentMinusMargin = anglePercent - margin;\r\n            return {\r\n                transform: `rotate(${angle}deg) scaleX(-1)`,\r\n                background: `conic-gradient(transparent 0deg, \r\n                                            ${color} ${margin}deg, \r\n                                            ${color} ${anglePercentMinusMargin}deg, \r\n                                            transparent ${anglePercent}deg)`\r\n            };\r\n        },\r\n        getTextStyle(isPlayer1, value) {\r\n            const percent = value / this.max;\r\n            const percentIncruise = this.width / 100;\r\n            let leftValue = isPlayer1 ? this.getParabolicY(15, 68, 76, percent) : this.getParabolicY(64, 11, 5, percent);\r\n            leftValue *= percentIncruise;\r\n\r\n            let topValue = isPlayer1 ? this.getParabolicY(70, 68, 14, percent) : this.getParabolicY(9, 12, 61, percent);\r\n            topValue *= percentIncruise;\r\n\r\n            return { width: 25 + 'px', height: 25 + 'px', left: leftValue + 'px', top: topValue + 'px' };\r\n        },\r\n        getParabolicY(y0, y50, y100, t) {\r\n            const a = 2 * y0 - 4 * y50 + 2 * y100;\r\n            const b = -3 * y0 + 4 * y50 - y100;\r\n            const c = y0;\r\n            return a * t * t + b * t + c;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bananaBars.vue?vue&type=template&id=0d48b94b&scoped=true&\"\nimport script from \"./bananaBars.vue?vue&type=script&lang=js&\"\nexport * from \"./bananaBars.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bananaBars.vue?vue&type=style&index=0&id=0d48b94b&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d48b94b\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('img',{staticClass:\"w100p h100p\",staticStyle:{\"object-fit\":\"contain\"},attrs:{\"src\":require('@/assets/Gundam/' + _vm.icon)},on:{\"click\":function($event){return _vm.$emit('click')}}}),_c('div',{staticClass:\"absolute text-center w100p text-shadow-black\",staticStyle:{\"top\":\"35%\"}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.length)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <img @click=\"$emit('click')\" class=\"w100p h100p\" style=\"object-fit:contain\" :src=\"require('@/assets/Gundam/' + icon)\" />\r\n        <div class=\"absolute text-center w100p text-shadow-black\" style=\"top: 35%;\">\r\n            {{ text }}\r\n            <br>\r\n            {{ length }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    name: 'deck-icon',\r\n    props: ['icon', 'length', 'text']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckIcon.vue?vue&type=template&id=07473bde&\"\nimport script from \"./deckIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./deckIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p mask bg2\" style=\"height: 100dvh\" :key=\"refreshG\">\r\n        <span v-if=\"game\">\r\n            <!-- Drag and drop field-->\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.halfPlayer2)\"></div>\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.centerZoneP2)\"></div>\r\n            <div class=\"absolute bg2\" :style=\"getFieldStyleObj(game.grid.halfPlayer1)\"></div>\r\n            <div class=\"absolute diagonal-split\" :style=\"getFieldStyleObj(game.grid.resources)\">\r\n            </div>\r\n            <div class=\"absolute text-center textVerticalCenter fontSize075em\"\r\n                :style=\"{ ...getFieldStyleObj(game.grid.resources), transform: 'rotate(-45deg)' }\">\r\n                Resources\r\n            </div>\r\n            <banana-bars :p1yellow=\"game.player1.resourcesAvailable - game.player1.resourcesEx\"\r\n                :p1blue=\"game.player1.resourcesEx\" :p1max=\"game.player1.resourcesMax\"\r\n                :p2yellow=\"game.player2.resourcesAvailable - game.player2.resourcesEx\"\r\n                :p2blue=\"game.player2.resourcesEx\" :p2max=\"game.player2.resourcesMax\" :max=\"game.resourcesMax\"\r\n                :style=\"getFieldStyleObj(game.grid.resources)\" :width=\"game.grid.resources.width\">\r\n            </banana-bars>\r\n\r\n            <!-- Player 1 -->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Deck)\" text=\"Deck\"\r\n                :length=\"game.player1.deck.length\" :icon=\"game.player1.deckIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Trash)\" text=\"Trash\"\r\n                :length=\"game.player1.trash.length\" :icon=\"game.player1.trashIcon\"\r\n                @click=\"showLocationCards('trash', true)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Base)\" text=\"Base\"\r\n                :icon=\"game.player1.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Shield)\" text=\"Shield\"\r\n                :length=\"game.player1.shield.length\" :icon=\"game.player1.shieldIcon\">\r\n            </deck-icon>\r\n            <div v-if=\"game\" class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player1Hand)\">\r\n            </div>\r\n            <div v-if=\"game\" class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player1Field)\">\r\n            </div>\r\n\r\n            <!-- Player 2-->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Deck)\" text=\"Deck\"\r\n                :length=\"game.player2.deck.length\" :icon=\"game.player2.deckIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Trash)\" text=\"Trash\"\r\n                :length=\"game.player2.trash.length\" :icon=\"game.player2.trashIcon\"\r\n                @click=\"showLocationCards('trash', false)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Base)\" text=\"Base\"\r\n                :icon=\"game.player2.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Shield)\" text=\"Shield\"\r\n                :length=\"game.player2.shield.length\" :icon=\"game.player2.shieldIcon\">\r\n            </deck-icon>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player2Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player2Field)\">\r\n            </div>\r\n\r\n            <!-- Buttons -->\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEffect)\">\r\n                <v-btn target=\"_blank\"\r\n                    :class=\"{ bg: true, shine: !freeze && game.player1.hasEffects, w100p: true, h100p: true }\"\r\n                    @click=\"useEffect\" style=\"min-width:0px;\">\r\n                    <span>Use<br>Effect</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEndTurn)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg: true, shine: !freeze, w100p: true, h100p: true }\"\r\n                    style=\"min-width:0px;\" @click=\"nextTurn\">\r\n                    <span v-if=\"game.grid.buttonEndTurn.width > 50\">End<br>Turn</span><span v-else>End</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute vertical-scroll\" v-html=\"game.logs\" :style=\"getFieldStyleObj(game.grid.logZone)\">\r\n            </div>\r\n\r\n            <!-- TutoMasks-->\r\n            <div v-for=\"(tutoMask, index) in game.tutoMasks\" :key=\"'TutoMask' + index\"\r\n                :class=\"{ absolute: 1, bg2: tutoMask.isPlayer1, bg: !tutoMask.isPlayer1 }\"\r\n                :style=\"getFieldStyleObj(tutoMask)\">\r\n            </div>\r\n\r\n            <!-- Highlight and TextZone-->\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.textZone)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardCenter)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardLeft)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.highlightCardRight)\">\r\n            </div>\r\n\r\n            <!-- cards -->\r\n            <div v-for=\"card in cards\" :key=\"'B' + card.index\">\r\n                <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                    :hidestat=\"card.hidestat\" @click=\"showCard(card)\">\r\n                </gameCard>\r\n            </div>\r\n\r\n            <!-- Tuto Text -->\r\n            <div v-if=\"game.showTextTuto\" class=\"absolute fadeIn\"\r\n                :style=\"{ ...getFieldStyleObj(game.showTextTuto), 'z-index': game.showTextTuto.zindex ? game.showTextTuto.zindex : 56 }\">\r\n                <!-- Arrow-->\r\n                <div class=\"bgWhite absolute\" v-if=\"game.showTextTuto.arrow\"\r\n                    :style=\"{ ...getFieldStyleObj(game.showTextTuto.arrow), transform: 'rotate(45deg)', 'z-index':-1 }\"></div>\r\n\r\n                <div class=\"w100p h100p bgWhite colorBlack flex\"\r\n                    style=\"flex-direction: column; justify-content: center;\">\r\n\r\n                    <div class=\"text-center\">{{ game.showTextTuto.text }}</div>\r\n                    <div v-if=\"!game.showTextTuto.hideNext\" class=\"m5px bgYellow circle10px\"\r\n                        style=\"align-self: flex-end;\">\r\n                        <v-btn class=\"bg2 shine\" @click=\"tutoNext\">Next</v-btn>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </span>\r\n\r\n        <drag-drop-arrow id=\"0\" :sources=\"sources\" @drop=\"dropPoint\" @click=\"clickDrop\" :targets=\"targets\"\r\n            :freeze=\"freeze || game?.popup\">\r\n        </drag-drop-arrow>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game && game.popup\" class=\"absolute w100p h100p m5px\"\r\n            style=\"top:0px; display: flex; overflow: hidden; flex-direction: column; z-index: 80;\">\r\n            <div class=\"flex-grow\" style=\"min-height: 10%;\"> </div>\r\n            <div class=\"w100p\">\r\n                <div class=\"flex flex-wrap w100p\" style=\"justify-content:center\">\r\n                    <v-btn class=\"m10px\" style=\"background-color: #FFFF00F0;\" @click=\"showOrHidePopup(false)\">\r\n                        <span v-if=\"popupShow\">Hide Popup</span><span v-else>Show Popup</span>\r\n                    </v-btn>\r\n                    <div v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"popupShow\" style=\"background-color: #FFFF00F0; width:100%; overflow-y: auto;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p mp5px\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p horizontal-scroll\" v-if=\"game?.popup.cards && game?.popup.cards.length > 0\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\"\r\n                        :style=\"{ width: game?.grid.card100.height + 'px' }\">\r\n                        <div class=\"text-center colorBlack\">{{ card.location }} P{{ card.isPlayer1 ? '1' : '2' }}\r\n                        </div>\r\n                        <img :style=\"{ width: game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }\"\r\n                            @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game\" id=\"divTextEffect\" class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\"\r\n            :style=\"{\r\n                ...getFieldStyleObj(game.grid.textZone), 'z-index': 11, height: 0\r\n            }\">\r\n            <div v-html=\"text\"></div>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\"\r\n            :style=\"{ top: '80px', width: '100%', height: '0px', 'z-index': 13 }\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 70;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute\" style=\"top:0px; left:0px;\">\r\n            <!-- Debug -->\r\n            {{ game?.tutoStep }}\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport cards from '../data/gundamCards.json';\r\nimport gameGundam from './gundam/game';\r\nimport gameCard from './card';\r\nimport bananaBars from './bananaBars.vue';\r\nimport deckIcon from './deckIcon.vue';\r\nimport dragDropArrow from './dragDropArrow.vue';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: ['deck1', 'deck2', 'quickstart', 'tuto'],\r\n    components: { gameCard, bananaBars, deckIcon, dragDropArrow },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: null,\r\n        text: null,\r\n        popupShow: true,\r\n        ignoreEvent: [],\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        sources: [],\r\n        targets: []\r\n    }),/*\r\n    watch: {\r\n        deck1() { this.setDecks();},\r\n        deck2() { this.setDecks();}\r\n    },*/\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n\r\n        this.cardList = cards.cards;\r\n        this.setDecks();\r\n    },\r\n    methods: {\r\n        setDecks() {\r\n            this.decklistPlayer1 = this.deck1;\r\n            this.decklistPlayer2 = this.deck2;\r\n            if (this.decklistPlayer1 && this.decklistPlayer2)\r\n                this.start();\r\n        },\r\n        start() {\r\n            this.game = gameGundam.setup(this.$vuetify.breakpoint.width,\r\n                this.$vuetify.breakpoint.height,\r\n                cards,\r\n                this.decklistPlayer1,\r\n                this.decklistPlayer2,\r\n                this.quickstart,\r\n                this.tuto);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.endTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameGundam.continue(this.game);\r\n            if (this.game.end) {\r\n                this.$emit('end', this.game.isVictory);\r\n                return;\r\n            }\r\n            if (this.game.popup || this.game.freeze) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.freezeButtons)\r\n                this.freeze = true;\r\n\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        useEffect() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.useEffect(this.game);\r\n            this.continue();\r\n        },\r\n        dropPoint(event) {\r\n            if (!event || !event.target || !event.target.text)\r\n                return;\r\n\r\n            if (event.target.text === 'Play')\r\n                this.playCard(event.source.card, null, this.game.grid.player1Field);\r\n            if (event.target.text === 'Pair')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player1Field);\r\n            if (event.target.text === 'Attack')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player2Field);\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameGundam.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        showLocationCards(location, isPlayer1) {\r\n            this.game = gameGundam.showLocationCards(this.game, location, isPlayer1);\r\n            this.refreshGame();\r\n        },\r\n        showOrHidePopup() {\r\n            this.popupShow = !this.popupShow;\r\n        },\r\n        tutoNext(next = true) {\r\n            this.game = gameGundam.tutoNext(this.game, next);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            this.sources = this.game.player1.drags;\r\n\r\n            this.showTextEffect(this.game.showTitle, 'title', 'divTitleParent', { height: 0 });\r\n            this.showTextEffect(this.game.textEffect?.text, 'text', 'divTextEffect', { height: 0 });\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gameGundam.delay;\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gameGundam.delay;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = cardsToAnimate.length < 1 && !this.game.showTitle && !this.game.textEffect ? 10 : gameGundam.delay;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTextEffect(text, property, divId, to) {\r\n            if (!text || this.ignoreEvent.includes(property))\r\n                return;\r\n\r\n            const animationTime = 200;\r\n            this.ignoreEvent.push(property);\r\n            this[property] = text;\r\n\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 100 }, to, false, animationTime); }, 10 + animationTime * 4);\r\n            setTimeout(() => { this.ignoreEvent = this.ignoreEvent.filter(x => x !== property); }, 10 + animationTime * 6);\r\n        },\r\n\r\n        // --------- showCard\r\n        clickDrop(event) {\r\n            this.showCard(event.card);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.highlightCardCenter : { x: 0, y: 0, width: 200, height: 280 };\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gameGundam.delay);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n                this.game.cardCenter = this.cardCenter.position.height > 0 ? this.cardCenter : null;\r\n                this.tutoNext(false);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=457546bf&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=457546bf&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            function getAnimValue(property, anim, time) {\r\n                let t = time;\r\n                let from = null;\r\n                let to = null;\r\n                let progress = 0;\r\n\r\n                if (anim.delay) {\r\n                    t = (t < 0.5) ? (t + 0.5) : (t - 0.5);\r\n                }\r\n\r\n                if (!anim.mid || !anim.mid[property]) {\r\n                    progress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n                    from = anim.from;\r\n                    to = anim.to;\r\n                }\r\n                else if (t < 0.5) {\r\n                    t = t / 0.5;\r\n                    progress=t;\r\n                    from = anim.from;\r\n                    to = anim.mid;\r\n                } else {\r\n                    t = (t - 0.5) / 0.5;\r\n                    progress=t;\r\n                    from = anim.mid;\r\n                    to = anim.to;\r\n                }\r\n\r\n                return from[property] + (to[property] - from[property]) * progress;\r\n            }\r\n\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = getAnimValue('x', anim, t);\r\n                const currentY = getAnimValue('y', anim, t);\r\n                const currentWidth = getAnimValue('width', anim, t);\r\n                const currentHeight = getAnimValue('height', anim, t);\r\n                const currentRotation = getAnimValue('rotation', anim, t);\r\n                const currentOpacity = getAnimValue('opacity', anim, t);\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.opacity = currentOpacity;\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = val1[property];\r\n            const value = val2[property];\r\n            if (value)\r\n                result[property] += value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static setIfNull(from, mid) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = from[property];\r\n            const value = mid[property];\r\n            if (value)\r\n                result[property] = value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.element = document.getElementById(anim.id);\r\n            if (!anim.element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.from = anim.from ?? {\r\n                x: this.pxStringToInt(anim.element.style.left),\r\n                y: this.pxStringToInt(anim.element.style.top),\r\n                rotation: anim.element.style.rotation,\r\n                height: anim.element.style.height,\r\n                width: anim.element.style.width,\r\n                delay: false\r\n            };\r\n            anim.from.rotation = anim.from.rotation ?? 0;\r\n            anim.from.opacity = anim.from.opacity ?? 1;\r\n            anim.from.height = anim.from.height ?? anim.element.clientHeight;\r\n            anim.to = anim.isIncrement ? this.add(anim.from, anim.to) : anim.to;\r\n            anim.mid = !anim.mid ? null : anim.isIncrement ? this.add(anim.from, anim.mid) : anim.mid;\r\n        });\r\n        this.animateElements(animations, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071,\n\t\"./empty.webp\": 8621,\n\t\"./empty2.webp\": 66626,\n\t\"./emptyOld.webp\": 40879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./CardsGundam.png\": 4859,\n\t\"./EncyclopedieGundam.png\": 15831,\n\t\"./GundamEncyclopedie.png\": 94627,\n\t\"./GundamLogo.jpg\": 30262,\n\t\"./GundamLogo2.png\": 68499,\n\t\"./cards/EXB-001.webp\": 43631,\n\t\"./cards/EXBP-001.webp\": 69411,\n\t\"./cards/GD01-004.webp\": 19862,\n\t\"./cards/GD01-004_p1.webp\": 91962,\n\t\"./cards/GD01-005.webp\": 80632,\n\t\"./cards/GD01-008.webp\": 13406,\n\t\"./cards/GD01-009.webp\": 39343,\n\t\"./cards/GD01-011.webp\": 57985,\n\t\"./cards/GD01-013.webp\": 25257,\n\t\"./cards/GD01-015.webp\": 29370,\n\t\"./cards/GD01-016.webp\": 24272,\n\t\"./cards/GD01-018.webp\": 62998,\n\t\"./cards/GD01-026.webp\": 83759,\n\t\"./cards/GD01-026_p1.webp\": 58145,\n\t\"./cards/GD01-028.webp\": 21495,\n\t\"./cards/GD01-030.webp\": 94485,\n\t\"./cards/GD01-031.webp\": 38537,\n\t\"./cards/GD01-034.webp\": 63515,\n\t\"./cards/GD01-040.webp\": 66732,\n\t\"./cards/GD01-041.webp\": 70958,\n\t\"./cards/GD01-068.webp\": 46040,\n\t\"./cards/GD01-070.webp\": 45504,\n\t\"./cards/GD01-070_p1.webp\": 85993,\n\t\"./cards/GD01-072.webp\": 8042,\n\t\"./cards/GD01-075.webp\": 52313,\n\t\"./cards/GD01-076.webp\": 85876,\n\t\"./cards/GD01-077.webp\": 97867,\n\t\"./cards/GD01-081.webp\": 18546,\n\t\"./cards/GD01-088.webp\": 14026,\n\t\"./cards/GD01-088_p1.webp\": 68437,\n\t\"./cards/GD01-089.webp\": 27418,\n\t\"./cards/GD01-091.webp\": 81708,\n\t\"./cards/GD01-097.webp\": 34893,\n\t\"./cards/GD01-099.webp\": 49483,\n\t\"./cards/GD01-100.webp\": 93330,\n\t\"./cards/GD01-100_p1.webp\": 92990,\n\t\"./cards/GD01-105.webp\": 67155,\n\t\"./cards/GD01-107.webp\": 66642,\n\t\"./cards/GD01-107_p1.webp\": 60768,\n\t\"./cards/GD01-117.webp\": 79955,\n\t\"./cards/GD01-118.webp\": 70779,\n\t\"./cards/GD01-118_p1.webp\": 57707,\n\t\"./cards/GD01-120.webp\": 90273,\n\t\"./cards/GD01-124.webp\": 8279,\n\t\"./cards/R-001.webp\": 96567,\n\t\"./cards/R-002.webp\": 38857,\n\t\"./cards/ST01-001.webp\": 16906,\n\t\"./cards/ST01-001_p1.webp\": 6864,\n\t\"./cards/ST01-002.webp\": 23582,\n\t\"./cards/ST01-005.webp\": 7162,\n\t\"./cards/ST01-007.webp\": 56694,\n\t\"./cards/ST01-008.webp\": 70791,\n\t\"./cards/ST01-010.webp\": 45022,\n\t\"./cards/ST01-011.webp\": 56581,\n\t\"./cards/ST01-011_p1.webp\": 1978,\n\t\"./cards/ST01-012.webp\": 13866,\n\t\"./cards/ST01-013.webp\": 79915,\n\t\"./cards/ST01-015.webp\": 51310,\n\t\"./cards/ST01-016.webp\": 86882,\n\t\"./cards/ST02-001.webp\": 58864,\n\t\"./cards/ST02-001_p1.webp\": 76074,\n\t\"./cards/ST02-002.webp\": 23941,\n\t\"./cards/ST02-005.webp\": 55045,\n\t\"./cards/ST02-010.webp\": 99834,\n\t\"./cards/ST02-012.webp\": 57160,\n\t\"./cards/ST02-013.webp\": 55214,\n\t\"./cards/ST02-015.webp\": 34078,\n\t\"./cards/ST03-007.webp\": 82235,\n\t\"./cards/ST03-008.webp\": 55340,\n\t\"./cards/ST03-011.webp\": 56486,\n\t\"./cards/ST03-011_p1.webp\": 92329,\n\t\"./cards/ST03-016.webp\": 77816,\n\t\"./cards/ST04-001.webp\": 22859,\n\t\"./cards/ST04-001_p1.webp\": 46858,\n\t\"./cards/ST04-002.webp\": 18971,\n\t\"./cards/ST04-005.webp\": 54511,\n\t\"./cards/ST04-010.webp\": 80363,\n\t\"./cards/ST04-013.webp\": 14005,\n\t\"./cards/ST04-015.webp\": 81633,\n\t\"./cards/T-001.webp\": 32442,\n\t\"./cards/T-002.webp\": 46514,\n\t\"./cards/T-003.webp\": 88739,\n\t\"./cards/T-006.webp\": 17071,\n\t\"./cards/empty.webp\": 8621,\n\t\"./cards/empty2.webp\": 66626,\n\t\"./cards/emptyOld.webp\": 40879,\n\t\"./centerZone.png\": 17852,\n\t\"./centerZone2.png\": 75025,\n\t\"./centerZone3.png\": 95130,\n\t\"./deck1.png\": 69877,\n\t\"./deck2.png\": 85350,\n\t\"./deck3.png\": 58251,\n\t\"./deck4.png\": 13665,\n\t\"./deck5.png\": 35931,\n\t\"./deck6.png\": 23094,\n\t\"./gundam.png\": 63111,\n\t\"./gundam2.png\": 98815,\n\t\"./head.png\": 83639,\n\t\"./wallpaper.webp\": 45648,\n\t\"./wallpaper2.webp\": 81121,\n\t\"./wingzero2.gif\": 70898\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73890;","var map = {\n\t\"./Gundam/cards/empty.webp\": 8621\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50655;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["render","_vm","this","_c","_self","staticClass","_l","sources","point","index","key","class","absolute","pointCircle","colorYellow","show","style","top","y","left","x","width","height","attrs","on","$event","drag","$emit","display","source","targets","filter","target","colorGreen","_v","_s","text","staticStyle","id","color","staticRenderFns","name","props","component","components","arrowDiv","data","delay","animations","mouse","watch","resetSources","mounted","window","addEventListener","updateMouse","mouseUp","beforeUnmount","removeEventListener","methods","e","touch","touches","length","clientX","clientY","updateAnimation","forEach","element","document","getElementById","animate","freeze","helperAnimation","setTimeout","isInside","box","minX","minY","maxX","maxY","createAnimation","find","from","destination","animation","rotation","getAngleDeg","widthHalf","to","mid","opacity","isIncrement","angleRad","Math","atan2","PI","refreshG","getFieldStyleObj","game","transform","player1","resourcesAvailable","resourcesMax","player2","grid","resources","bg","w100p","h100p","buttonEndTurn","logZone","domProps","logs","tutoMasks","tutoMask","cards","card","showTextTuto","choice","popup","position","effectsLuncher","static","trigger","isEffectExisting","card1","result","lunchEffectTriggerForOneCard","effects","getEffects","cancelMoveToTrash","getCancelMoveToTrash","addTaskFirst","applyEffectCard","card2","isExistingCard1Effect","isExistingCard2Effect","tasks","push","cardUnit","cardPilot","addTasksFirst","ignorePair","map","fx","pair","concat","effectsThatCancelMoveToTrash","sendToHand","deploy","effect","includes","task","getEffectText","join","tasksDelay","hide","showCardsEffect","applyEffect","addTasks","toString","value","effect2","ap","hp","incruises","removeEndTurn","players","player","field","recalculateApHp","lost","log","opponent","targetResult","handleEffectTarget","stop","end","isEffectMatchConditions","cost","playCardCost","oneTurn","isConditionsAfterRespected","rest","setActive","_defineProperty","effectsTarget","cardChoice","popupTargetCards","pairedWith","isCardUnit","active","hadBlocker","hand","targetId","attribute","targetAttribute","hasEffect","Error","choices","optional","isPlayer1","mainEffects","trigger_main","refreshPlayersMainEffect","hasEffects","lunchMainEffectCard","positioner","screenWidth","screenHeight","border2","border","widthMargin","heightMargin","boxHeight","boxWidth","isVertical","card100","player2Hand","location","locationHand","player2Field","locationField","centerZone","centerZoneP2","player1Field","player1Hand","createVerticalGrid","createHorizontalGrid","cardSizeReduce","player1Deck","player1Trash","boxWidthVertical","buttonEffect","halfPlayer1","halfPlayer2","heightQuarter","textZone","highlightCardCenter","highlightCardLeft","getCardSize","highlightCardRight","drop","boxHeightVertical","player1Shield","locationShield","player1Base","locationBase","locationDeck","locationTrash","player2Shield","player2Base","player2Deck","player2Trash","clone","count","cardHeightPercent","desiredWidth","desiredHeight","cardSize","total","degree","wrapCut","centerEmptyZone","zoneHeight","totalCards","cardSizeModified","floor","indexModified","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","totalWidth","elementWidth","sizeWidth","ratio","margin","maxSize","i","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","ceil","ratioInverted","heightDesired","widthDesired","sens","widthEdit","heightEdit","isValid","alignPositionNextToUsingSens","isHorizontal","xOffset","yOffset","arrow","addArrow","selectable","max","isCostAvailable","level","isTurnPlayer","canAttack","cardAction","askForActionCardsForThisPlayer","property","noActionCard","trigger_action","taskAttack","move","actionCard","playerIndex","conditions","isConditionsRespected","conditionsAfter","condition","hasAttribute","trash","isCardCommand","cardMove","cardSpawn","moveCard","spawnIfNot","addIn","positions","deck","zindex","locationFrom","locationTo","removeByIndex","splice","onField","isTemporaryCard","fadeOut","hidestat","verso","handleMainEffectsCard","link","needToRefreshAllField","cardPlay","zone","playFromHand","prepareAttack","playThisCard","sendBack","sendCardBackToSquareOne","isSamePlayer","addTaskPos2","attack","attacker","breach","wrongCost","regularPlay","positionDrag","refresh","playCost","isPilot","isCardPilot","isCommand","pilotOrCommand","askPilotOrCommand","isExisting","effectsAlreadyDone","trigger_onplay","isCardBase","base","addTasksPos2","trigger_command","resourcesEx","refreshPlayerArea","cardsToRemoveIndex","setSelectable","resource","baseIcon","shieldIcon","getIcon","shield","deckIcon","trashIcon","textEffect","useZoneSize","bgposition","getWrapPosition","adjustRotationSize","getPairPosition","percent","previous","reverPercentHalf","loseX","loseY","positionOld","wait","showTitle","tuto","continueTuto","triggerRefreshAlreadyDone","lunchEffectTriggerMultiple","trigger_refresh","needTaskEndRefresh","refreshOnlyTextEffect","cardHighlight","refreshFieldAndHand","refreshDragAndDrop","drags","unitWithoutPilots","drops","unit","getPos","ennemyTarget","isValidTarget","spawnOrMove","costOrigin","reduceValue","JSON","stringify","createCard","values","undefined","min","playToken","destroyUnit","hpMax","hpOrigin","hpMaxOrigin","getAndRemoveFirst","bottomCard","shieldProtection","cardPlayer","getPlayer","alreadyDone","blocker","highManeuver","addTask","play","attackActiveEnnemy","immuneAp","step","attackStep","stepSelectBlocker","selectBlocker","stepSelectActionCards","askForActionCards","stepSelectCardOpponent","selectCardOpponent","stepEffectBattle","effectBattle","stepShowFight","showFight","stepFight","fight","nextStep","array","indexOf","blockers","burstEffect","trigger_burst","showCards","battleEffectsAlreadyDone","trigger_battle","damage","activeBreach","tasksAttackerDead","setup","quickstart","resourceStart","handStartLength","createPlayer","decklistPlayer1","decklistPlayer2","random","fields","playerOpponent","decklist","createDeck","empty","split","line","info","quantity","parseInt","cardList","createUniqueRare","sortRandom","rareKeyWord","rareCards","gundamCards","files","replace","rareCard","firstCard","sort","removeIds","addShielsAndBase","nextTurn","shieldStartLength","deletePopup","handleAiPopup","actionPlayer","actionOpponent","tasksString","taskEndRefresh","indexTask","addTasksIndex","first","resetZIndex","message","alert","obj","Object","assign","cla","useTuto","ignore","c","getOwnPropertyNames","method","list","slice","valueOld","valueNew","title","taskTextShow","fxRed","hideFx","fxText","turn","getOpponent","global","trigger_end","getPlayerTurn","playerId","startTasks","idTask","taskMoveAndShowCenter","removeOneTurnEffect","setSelectableFalse","baseText","turnIndex","trigger_turn","properties","prop","startsWith","tutoStep","next","tutoSteps","autoNextStep","isDone","action","context","tutoText","used","fr","en","welcome","playUnit","cantAttack","endTurn","zoom","showLevelCost","showLink","showApHp","showResources","showResources2","showResources3","playLevel3","playIt","resourcesUsed","ennemyBase","rested","showApHp2","showApHp3","showEffect","p2LinkUnit","p2AttackBase","p2AttackUnit","unitTrash","linkUnit","linkPilot","attackLink","addTutoMask","tutoSmall","getTextTuto","alignPositionNextTo","conditionNexTurn","hideNext","freezeButtons","cardCenter","isGood","fxTextCancelFadeout","newTurnForAI","isLink","isExistingPairEffects","effectsAlreadyDonePair","lunchEffectTriggerForTwoCard","trigger_onpair","isExistingLinkEffects","effectsAlreadyDoneLink","trigger_onlink","locationPair","apOrigin","ai","haveBeenRefresh","AiUsed","refreshAiTurn","taskAdded","cardsAvailable","combos","getAiCombos","handleAiHand","handleAiField","selectChoiceNull","aiCombos","units","pilots","pilotLinkUnits","getAiCombosPilotLinkUnit","pilotLinkUnitsOnFieldWithEffects","getAiCombosPilotLinkUnitFieldWithEffects","costRemaining","pilot","a","b","unitHasEffect","hasLinkEffect","aiPlay","bases","playCombo","combo","handleStrategy","getPlayCardTasks","unitsThatCanAttack","notEnoughShield","getNotEnoughShield","getTarget","declareAiAttack","attackMinimimForWin","aiStrategy","handleStrategyCard","strategy","hasActiveUnitThatNeedRepair","hasInactiveBlocker","scripts","utils","cardLife","addFunction","createGrid","continue","isStart","mulligan","endAnimation","handleTasks","isVictory","bgYellow","circle15px","cursor","shine","bgRed","circle","fadeInOut","getRedFxStyle","_e","require","folder","preventDefault","fontSize150em","dead","getBananaStyle","p1max","p1yellow","p1blue","p2max","p2yellow","p2blue","getTextStyle","angle","anglePercent","anglePercentMinusMargin","background","percentIncruise","leftValue","getParabolicY","topValue","y0","y50","y100","t","icon","gameCard","bananaBars","dragDropArrow","popupShow","ignoreEvent","body","overflow","setDecks","deck1","deck2","start","gameGundam","$vuetify","breakpoint","refreshGame","animTextEffect","useEffect","dropPoint","event","playCard","selectChoice","selectChoiceCard","showLocationCards","showOrHidePopup","tutoNext","showTextEffect","beginAnimation","animationTime","cardsToAnimate","divId","clickDrop","showCard","center","getCard","getFieldStyle","w","h","duration","anim","animateElements","startTime","performance","now","update","currentTime","getAnimValue","time","progress","pow","elapsedTime","currentX","currentY","currentWidth","currentHeight","currentRotation","currentOpacity","requestAnimationFrame","val1","val2","animateMultiple","pxStringToInt","clientHeight","add","console","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}