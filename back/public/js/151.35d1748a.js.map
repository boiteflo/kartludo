{"version":3,"file":"js/151.35d1748a.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/setup.js","webpack://front/./src/games/gundam/positioner.js","webpack://front/./src/games/gundam/cardMove.js","webpack://front/./src/games/gundam/refresh.js","webpack://front/./src/games/gundam/tasks.js","webpack://front/./src/games/gundam/array.js","webpack://front/./src/games/gundam/game.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/deck.vue","webpack://front/src/games/deck.vue","webpack://front/./src/games/deck.vue?7d6b","webpack://front/./src/games/deck.vue?2d1a","webpack://front/./src/games/deckList.vue","webpack://front/./src/games/scripts/gameTask.js","webpack://front/./src/games/scripts/gundam/effects.js","webpack://front/./src/games/scripts/global.js","webpack://front/./src/games/scripts/positioner.js","webpack://front/./src/games/deckListCard.vue","webpack://front/src/games/deckListCard.vue","webpack://front/./src/games/deckListCard.vue?d81c","webpack://front/./src/games/deckListCard.vue?43bb","webpack://front/src/games/deckList.vue","webpack://front/./src/games/deckList.vue?5bfd","webpack://front/./src/games/deckList.vue?5ba8","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/Gundam/ sync ^\\.\\/.*$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p mask\",staticStyle:{\"height\":\"92vh\"}},[(_vm.decklistShow)?_c('deck-list',{staticStyle:{\"top\":\"50px\"},attrs:{\"decklist\":_vm.decklistShow,\"cardlist\":_vm.cardList,\"folder\":\"Gundam/cards/\"},on:{\"cardclick\":_vm.showCardDeckList,\"cancel\":function($event){return _vm.showDeckList(null)},\"validate\":_vm.selectDeckList}}):_vm._e(),(!_vm.game)?_c('div',[_c('h2',[_vm._v(\"Select deck for the \"+_vm._s(_vm.decklistPlayer1 ? 'opponent' : 'player'))]),_c('div',{staticClass:\"flex flex-wrap flex-space-around fontSize32\"},_vm._l((_vm.deckList),function(deck,index){return _c('deck',{key:'Deck' + index,attrs:{\"deck\":deck,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showDeckList(deck)}}})}),1)]):_vm._e(),(_vm.game)?_c('span',[_c('div',{staticClass:\"absolute bg2\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer1))}),_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer2))}),_c('img',{staticClass:\"w100p, absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.centerZone), 'object-fit': 'cover' }),attrs:{\"src\":require('@/assets/Gundam/centerZone.png')}}),_vm._v(\" \"+_vm._s(_vm.game.player1.deckIcon)+\" \"),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Base), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.baseIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Shield), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.shieldIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Deck), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.deckIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Trash), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.trashIcon)}}),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Base.text))},[_vm._v(\" Base \"+_vm._s(_vm.game.player1.deckIcon)+\" \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Shield.text))},[_vm._v(\" Shield : \"+_vm._s(_vm.game.player1.shield.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Deck.text))},[_vm._v(\" Deck : \"+_vm._s(_vm.game.player1.deck.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Trash.text))},[_vm._v(\" Trash : \"+_vm._s(_vm.game.player1.trash.length)+\" \")]),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Field))}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Base), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.baseIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Shield), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.shieldIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Deck), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.deckIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Trash), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.trashIcon)}}),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Base.text))},[_vm._v(\" Base \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Shield.text))},[_vm._v(\" Shield : \"+_vm._s(_vm.game.player2.shield.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Deck.text))},[_vm._v(\" Deck : \"+_vm._s(_vm.game.player2.deck.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize1em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Trash.text))},[_vm._v(\" Trash : \"+_vm._s(_vm.game.player2.trash.length)+\" \")]),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Field))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.textZone))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardCenter))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardLeft))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardRight))}),_c('div',{staticClass:\"absolute bgYellow circle10px\",style:(_vm.getFieldStyleObj(_vm.game.grid.rightButton))},[_c('v-btn',{class:{ bg2: true, shine: !_vm.freeze, fontSize1em: true, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End Turn \")])],1),_c('div',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.leftButton))},[_c('v-btn',{class:{ bg: true, fontSize1em: true, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" Logs \")])],1)]):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game && false)?_c('div',[_c('div',{staticClass:\"bgYellow absolute circle10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"13\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n\r\nclass setup {\r\n\r\n    static setupGame(game) {\r\n        game.player1 = this.createPlayer(game, true, game.decklistPlayer1);\r\n        game.player2 = this.createPlayer(game, false, game.decklistPlayer2);\r\n        game.isPlayer1 = false; // Math.floor(Math.random() * 2) == 1;\r\n\r\n        const handStartLength = 5;\r\n        for (let i = 0; i < handStartLength; i++) {\r\n            this.addTasks({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true });\r\n            this.addTasks({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: false });\r\n        }\r\n\r\n        this.addTasks({ id: this.mulligan.name });\r\n    }\r\n\r\n    static createPlayer(game, isPlayer1, decklist) {\r\n        const deck = this.createDeck(game, isPlayer1, decklist);\r\n\r\n        const result = {\r\n            isPlayer1, deck, shield: [], hand: [], field: [], trash: [], base: [], empty: [],\r\n            positions : {\r\n                deck : isPlayer1 ? game.grid.player1Deck : game.grid.player2Deck,\r\n                shield : isPlayer1 ? game.grid.player1Shield : game.grid.player2Shield,\r\n                hand : isPlayer1 ? game.grid.player1Hand : game.grid.player2Hand,\r\n                field : isPlayer1 ? game.grid.player1Field : game.grid.player2Field,\r\n                trash : isPlayer1 ? game.grid.player1Trash : game.grid.player2Trash,\r\n                base : isPlayer1 ? game.grid.player1Base : game.grid.player2Base,\r\n                empty: {}\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static createDeck(game, isPlayer1, decklist) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = game.cardList.find(x => x.id == id);\r\n            if (!card)\r\n                throw new Error(\"This card doesn't exist : \" + id);\r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(this.createCard(card.id));\r\n        })\r\n\r\n        result.forEach(x => {\r\n            x.index = this.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = this.locationDeck;\r\n        });\r\n\r\n        result = this.sortRandom(result);\r\n        return result;\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        card.hpMax = card.hp;\r\n        card.effects = !card.effects ? [] : card.effects.map(fx => this.clone(fx));\r\n        return card;\r\n    }\r\n\r\n    static sortRandom(cards) {\r\n        return cards.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    static mulligan() {\r\n        console.log('mulligan ?');\r\n    }\r\n}\r\n\r\n\r\nexport default setup;\r\n","class positioner {\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createGrid(screenWidth, screenHeight) {\r\n        const grid = {};\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        grid.width = screenWidth - grid.border2;\r\n        grid.height = screenHeight - grid.border2;\r\n\r\n        const boxHeight = (grid.height - (grid.border * 6)) / 6;\r\n        grid.centerZone = {\r\n            x: 0,\r\n            y: (0.5 * grid.height) - (0.5 * boxHeight),\r\n            width: grid.width - grid.border2,\r\n            height: boxHeight,\r\n            zone: 'center0',\r\n            location: 'locationCenter',\r\n            show: true\r\n        };\r\n        grid.centerZone.heightQuarter = grid.centerZone.height / 4;\r\n\r\n        let width = (grid.width - 100 - (10 * grid.border)) / 8;\r\n        const textHeight = grid.border * 4;\r\n        const iconHeight = grid.centerZone.heightQuarter * 2 - textHeight;\r\n\r\n        // Player 1\r\n        const player1TextLine = grid.centerZone.y + grid.centerZone.heightQuarter + grid.border;\r\n        const player1DeckLine = player1TextLine + (grid.border * 5);\r\n        let x = this.getDeckX(grid, width, 0, true);\r\n        grid.player1Base = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationBase\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 1, true);\r\n        grid.player1Shield = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationShield\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 2, true);\r\n        grid.player1Deck = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationDeck\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 3, true);\r\n        grid.player1Trash = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationTrash\r\n        };\r\n\r\n        // Player 2\r\n        const player2TextLine = grid.centerZone.y + grid.centerZone.height - grid.centerZone.heightQuarter - grid.border * 5;\r\n        const player2DeckLine = player2TextLine - (grid.border * 3) - iconHeight;\r\n        x = this.getDeckX(grid, width, 0, false);\r\n        grid.player2Base = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationBase\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 1, false);\r\n        grid.player2Shield = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationShield\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 2, false);\r\n        grid.player2Deck = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationDeck\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 3, false);\r\n        grid.player2Trash = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationTrash\r\n        };\r\n\r\n        // Buttons\r\n        width = ((grid.width - 100) / 4) - (2 * grid.border2);\r\n        let height = grid.centerZone.heightQuarter - grid.border2;\r\n        let y = grid.centerZone.y + grid.border;\r\n        grid.rightButton = {\r\n            width, height, y, x: grid.width - width - grid.border2,\r\n        };\r\n        grid.leftButton = {\r\n            width, height, y: y, x: grid.rightButton.x - width - grid.border\r\n        };\r\n\r\n        // Hand and Field\r\n        x = 0;\r\n        width = grid.width;\r\n        height = grid.height / 2;\r\n        grid.halfPlayer1 = { x, width, height, y: grid.height / 2 };\r\n        grid.halfPlayer2 = { x, width, height, y: 0 };\r\n\r\n        grid.player1Hand = {\r\n            x: 0, y: grid.height - grid.border - boxHeight,\r\n            width: grid.width - grid.border2, height: boxHeight,\r\n            location: this.locationHand\r\n        }\r\n        grid.player1Field = {\r\n            x: 0, y: grid.centerZone.y + grid.centerZone.height + grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight * 1.5,\r\n            location: this.locationField\r\n        }\r\n\r\n        grid.player2Hand = {\r\n            x: 0, y: grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight,\r\n            location: this.locationHand\r\n        }\r\n        grid.player2Field = {\r\n            x: 0, y: grid.player2Hand.y + grid.player2Hand.height + grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight * 1.5,\r\n            location: this.locationHand\r\n        }\r\n\r\n        // Highlight center cards\r\n        grid.textZone = { ...grid.player2Hand };\r\n        grid.highlightCardCenter = { y: grid.player2Field.y, height: grid.height - grid.player2Field.y };\r\n        grid.highlightCardLeft = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 2, 1), y: grid.highlightCardCenter.y };\r\n        grid.highlightCardRight = { ...grid.highlightCardLeft, x:grid.highlightCardLeft.x + grid.highlightCardLeft.width };\r\n        grid.highlightCardCenter = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 1, 1), y: grid.highlightCardCenter.y };\r\n\r\n        return grid;\r\n    }\r\n\r\n    static getDeckX(grid, width, index, isPlayer1) {\r\n        let value = 55 + (index * (width + grid.border));\r\n        value = isPlayer1 ? value : -1 * value - width;\r\n        return (grid.width / 2) + value;\r\n    }\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', this.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', this.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', this.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', this.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', this.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', this.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', this.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', this.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', this.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', this.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', this.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', this.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', this.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', this.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = this.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([this.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == this.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!this.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = this.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.15);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        let x = (width - desiredWidth) / 2;\r\n        let y = (height - desiredHeight) / 2;\r\n\r\n        if(count > 1){\r\n            x= (width - (count * desiredWidth)) /2;\r\n        }\r\n\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n        \r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","class cardMove {\r\n    \r\n    static spawnOrMove(game, task, player) {\r\n        const cardSpawn = this.move(player, task.card1, task.from, task.to);\r\n        //this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!this.game.cards.find(x => x.index === card.index))\r\n            this.game.cards = this.addIn(this.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? this.game.player1 : this.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = locationFrom && locationFrom != 'pair' ? locationFrom : null;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if (from)\r\n            player[from] = this.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard || (card.isTemporaryCard && locationTo === this.locationField))\r\n            player[to] = this.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === this.locationTrash;\r\n        card.location = locationTo;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [this.locationHand, this.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport default cardMove;\r\n","class refresh {\r\n\r\n    static refreshFieldAndHand(player) {\r\n        player.baseIcon = player.base.length > 0 ? 'cards/' + player.base[0].id + '.webp' : 'deck6.png';\r\n        player.shieldIcon = this.getIcon(player.shield.length);\r\n        player.deckIcon = this.getIcon(player.deck.length);\r\n        player.trashIcon = this.getIcon(player.trash.length);\r\n    }\r\n\r\n    static getIcon(length){\r\n        return length < 1 ? 'deck6.png'\r\n            : length < 2 ? 'deck5.png'\r\n            : length < 6 ? 'deck4.png'\r\n            : length < 15 ? 'deck3.png'\r\n            : length < 40 ? 'deck2.png'\r\n            : 'deck1.png';\r\n    }\r\n}\r\n\r\n\r\nexport default refresh;\r\n","\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass tasks {    \r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1\r\n                : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1\r\n                    : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = isPlayer1 ? game.player2 : game.player1;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            const result = {}; this[task.id](game, task, player, opponent);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? this.delay : task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (this.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n    \r\n    static addTask(task) { return this.addTasks[task]; }\r\n    static addTasks(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.game.tasks = this.game.tasks.concat(tasks);\r\n        return {};\r\n    }\r\n\r\n    static addTaskFirst(task) { return this.addTasksFirst([task]); }\r\n    static addTasksFirst(tasks) {\r\n        this.game.tasks = tasks.concat(this.game.tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        //game.endRefresh();\r\n        this.needTaskEndRefresh = false;\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        this.cardHighlight = [];\r\n\r\n        this.refreshFieldAndHand(game.player1);\r\n        this.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;\r\n","class array {   \r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n}\r\n\r\n\r\nexport default array;\r\n","import setup from './setup';\r\nimport positioner from './positioner';\r\nimport cardMove from './cardMove';\r\nimport refresh from './refresh';\r\nimport tasks from './tasks';\r\nimport array from './array';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass game {\r\n    static game = null;\r\n    static index = 1;\r\n    static delay;\r\n    static needTaskEndRefresh;\r\n    static cardHighlight = [];\r\n\r\n    static setup(width, height, cards, decklistPlayer1, decklistPlayer2) {\r\n        this.cards = cards.cards;\r\n        this.game = {cards:[], tasks:[{id:'setupGame'}], cardList: cards.cards, decklistPlayer1, decklistPlayer2};\r\n        this.addFunction([tasks, array, setup, positioner, refresh, cardMove], this);\r\n        this.game.grid=this.createGrid(width, height);\r\n        return this.continue(this.game);\r\n    }\r\n\r\n    static continue(game){\r\n        // this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static playCard(game, card1, card2, drop){\r\n        \r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        \r\n    }\r\n\r\n    static selectChoiceCard(game, card){\r\n        \r\n    }\r\n\r\n    static nextTurn(game, card1, card2, drop){\r\n        \r\n    }\r\n\r\n\r\n    /*\r\n\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        if (cardUnit.link.includes('['))\r\n            return cardUnit.link.includes(cardPilot.name);\r\n        else {\r\n            const targetStr = cardUnit.link.replace('(', '').replace(')', '');\r\n            return cardPilot.attribute.includes(targetStr);\r\n        }\r\n    }\r\n\r\n    static destroyUnit(card1, delay = true) {\r\n        card1.dead = true;\r\n        return [\r\n            { id: gameTask.taskApplyEffect.name, card1, trigger: effects.ondestroyed },\r\n            { id: gameTask.taskMove.name, delay, card1, to: this.locationTrash, isPlayer1: card1.isPlayer1 }\r\n        ];\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Victory' : 'Defeat';\r\n        alert(message);\r\n        return { end: true };\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n        */\r\n\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static addFunction(cla, obj) {\r\n        const ignore = ['length', 'name', 'prototype'];\r\n        cla.forEach(c => {\r\n            Object.getOwnPropertyNames(c).forEach(method => {\r\n                if (!ignore.includes(method))\r\n                    obj[method] = c[method];\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n    static test(message){\r\n        alert(message);\r\n    }\r\n}\r\n\r\n\r\nexport default game;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow circle15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine circle15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow circle15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine circle15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=407d3193&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"407d3193\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative cursorHand parentHover\",staticStyle:{\"width\":\"400px\",\"height\":\"340px\"},on:{\"click\":function($event){return _vm.$emit('click', _vm.deck)}}},[_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(-15deg)\",\"left\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardLeft\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card2 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(15deg)\",\"right\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardRight\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card3 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(0deg)\",\"left\":\"25%\",\"height\":\"82%\",\"top\":\"30px\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card1 + '.webp')}})]),_c('div',{staticClass:\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter circle15px\",staticStyle:{\"width\":\"40%\",\"top\":\"65%\",\"left\":\"30%\"},attrs:{\"id\":\"title\"}},[_vm._v(\" \"+_vm._s(_vm.deck.name)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div @click=\"$emit('click', deck)\" class=\"relative cursorHand parentHover\"\r\n        style=\"width:400px; height:340px;\">\r\n        <div id=\"cardLeft\" style=\"width:50%; transform: rotate(-15deg); left:30px; height: 82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card2 + '.webp')\">\r\n        </div>\r\n        <div id=\"cardRight\" style=\"width:50%; transform: rotate(15deg); right:30px; height:82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card3 + '.webp')\">\r\n        </div>\r\n        <div style=\"width:50%; transform: rotate(0deg); left:25%; height: 82%; top:30px\" class=\"bgYellow absolute\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card1 + '.webp')\">\r\n        </div>\r\n        <div id=\"title\" class=\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter circle15px\"\r\n            style=\"width:40%; top:65%; left:30%;\">\r\n            {{deck.name}}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card{\r\n    transition: left .5s ease, right .5s ease, transform .5s ease;\r\n}\r\n#title {transition: background-color .5s ease;}\r\n\r\n.parentHover:hover #cardLeft {\r\n    transform: rotate(-22deg) !important;\r\n    left:0px !important;\r\n}\r\n.parentHover:hover #cardRight {\r\n    transform: rotate(22deg) !important;\r\n    right:0px !important;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'game-deck',\r\n    props: ['deck', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deck.vue?vue&type=template&id=eb582cfe&scoped=true&\"\nimport script from \"./deck.vue?vue&type=script&lang=js&\"\nexport * from \"./deck.vue?vue&type=script&lang=js&\"\nimport style0 from \"./deck.vue?vue&type=style&index=0&id=eb582cfe&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb582cfe\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p bg2 h100p\"},[_c('div',{staticClass:\"relative w100p\",staticStyle:{\"margin-left\":\"300px\"}},_vm._l((_vm.cardData),function(card,index){return _c('decklist-card',{key:'Decklist card ' + index,attrs:{\"card\":card,\"folder\":_vm.folder},on:{\"cardclick\":function($event){return _vm.$emit('cardclick', card)},\"clickdown\":function($event){return _vm.incruise(card,-1)},\"clickup\":function($event){return _vm.incruise(card,1)}}})}),1),_c('div',{staticClass:\"m5px h100p bgWhite fontSize125em\",staticStyle:{\"width\":\"300px\"}},[_c('v-btn',{staticClass:\"w100p bg\",staticStyle:{\"height\":\"45px\"},on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(\"Back\")]),_c('div',{staticClass:\"w100p text-center\"},[_vm._v(_vm._s(_vm.resume))]),_c('deck',{staticStyle:{\"width\":\"280px\",\"height\":\"238px\"},attrs:{\"deck\":_vm.decklist,\"folder\":_vm.folder}}),_c('v-btn',{staticClass:\"w100p shine bg2\",staticStyle:{\"height\":\"45px\"},on:{\"click\":_vm.validate}},[_vm._v(\"Valider\")]),_c('br'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.list),expression:\"list\"}],staticClass:\"w100p h100p\",domProps:{\"value\":(_vm.list)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.list=$event.target.value},_vm.setList]}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import global from './global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass gameTask {\r\n    static addTasks(tasks) {\r\n        global.needTaskEndRefresh = true;\r\n        global.game.tasks = global.game.tasks.concat(tasks);\r\n    }\r\n\r\n    static addTasksFirst(tasks) {\r\n        global.game.tasks = tasks.concat(global.game.tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1 : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1 : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            const result = this[task.id](game, task, player);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? global.delay : task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (global.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        game.manager.endRefresh();\r\n        global.needTaskEndRefresh = false;\r\n        global.cardHighlight = [];\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        game.manager.refreshFieldAndHand(game.player1);\r\n        game.manager.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n\r\n    /* ----------------------------- Tasks  */\r\n\r\n    static taskRefreshField(game, task, player) {\r\n        game.manager.refreshFieldAndHand(player);\r\n        this.taskTextHide(game, task, player);\r\n    }\r\n\r\n    static taskTitleShow(game, task, player) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task, player) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: global.clone(global.grid.centerMini.text)\r\n        };\r\n        game.textEffect.to = global.clone(game.textEffect.position);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static taskTextHide(game, task, player) {\r\n        game.refreshOnlyTextEffect = false;\r\n        if (!game.textEffect)\r\n            return;\r\n\r\n        game.textEffect.position.height = global.grid.centerMini.text.height;\r\n        game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n        game.refreshOnlyTextEffect = true;\r\n    }\r\n\r\n    static taskMove(game, task, player) {\r\n        global.spawnOrMove(player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static taskAttackPlayerAnimation(game, task, player) {\r\n        const opponent = global.getPlayer(!player.isPlayer1);\r\n        const heartPosition = opponent.isPlayer1 ? global.grid.player1Heart : global.grid.player2Heart;\r\n        task.card1.to = { ...task.card1.position, x: heartPosition.x, y: heartPosition.y };\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        const card = global.spawnOrMove(player, task.card1, task.from, task.to);\r\n        const taskCenter = { id: this.taskCardToCenter.name, card1: card, isPlayer1: task.isPlayer1, delay: true };\r\n        global.game.tasks = global.addListInArrayAfterIndex(global.game.tasks, 1, [taskCenter]);\r\n    }\r\n\r\n    static taskCardsToMiniCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? global.grid.centerMini.card1 : global.grid.centerMini.card3;\r\n        task.card1.to = global.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n\r\n        if (task.card2) {\r\n            global.spawnIfNot(task.card2);\r\n            global.cardHighlight.push(task.card2);\r\n            task.card2.to = global.clone(global.grid.centerMini.card2);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n        }\r\n\r\n        if (task.text) {\r\n            this.taskTextShow(game, task, player);\r\n        }\r\n    }\r\n\r\n    static taskCardToCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        task.card1.to = global.clone(global.grid.center);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n    }\r\n\r\n    static taskAttack(game, task, player) {\r\n        return game.manager.attack(task);\r\n    }\r\n\r\n    static taskPopup(game, task, player) {\r\n        if (!game.cardChoice && !game.choice) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        }\r\n    }\r\n\r\n    static taskPlayCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, task.regularPlay);\r\n    }\r\n\r\n    static taskPairCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.pair(cardPlayer, task.card1, task.card2);\r\n    }\r\n\r\n    static taskApplyEffect(game, task, player) {\r\n        return game.manager.applyEffect(player, task.card1, task.card2, task.trigger);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n    static ondestroyed = 'ondestroyed';\r\n    static onRefreshField = 'onRefreshField';\r\n    static end = 'end';\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static handleEffects(player, card1, card2, trigger) {\r\n        const effectsRemainings = this.getEffectsRemaining(trigger, card1, card2);\r\n        if (!effectsRemainings || effectsRemainings.length < 1)\r\n            return {};\r\n\r\n        const text = effectsRemainings.map(x => this.getEffectText(x)).join('<br>');\r\n        const isShowingEffect = global.cardHighlight.find(x => x.index === card1.index);\r\n\r\n        if (!isShowingEffect) {\r\n            global.game.tasks = [{ id: gameTask.taskCardsToMiniCenter.name, delay:true, card1, card2, text }]\r\n                .concat(global.game.tasks);\r\n            return { stop: true };\r\n        } \r\n        // else gameTask.addTasks([{ id: gameTask.taskRefreshField.name, isPlayer1: card1.isPlayer1 }]);\r\n\r\n        return this.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if (effect.effects)\r\n            result = result.concat(effect.effects.map(x => this.getEffectText(x)).join(', '));\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        card1.effectsRemaining = this.getEffectsRemaining(trigger, card1, card2);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        const opponent = global.getPlayer(!player.isPlayer1);\r\n        const needNewCard2 = ['opponentUnitHpUnderValue', 'opponentUnitRested', 'playerUnitWithAttribute', 'playerUnit'];\r\n        let card2Obj = effect.target && needNewCard2.includes(effect.target) ? null : card2;\r\n\r\n        if (effect.target && !card2Obj) {\r\n            if (effect.card2) {\r\n                card2Obj = effect.card2;\r\n            }\r\n            else if (global.game.cardChoice) {\r\n                card2Obj = global.game.cardChoice;\r\n                effect.card2 = card2Obj;\r\n                global.deletePopup();\r\n                delete (global.game.cardChoice);\r\n            }\r\n            else {\r\n                let cards = [];\r\n                if (effect.target === 'opponentUnitHpUnderValue') {\r\n                    cards = opponent.field.filter(x => global.isCardUnit(x) && x.hp < effect.value);\r\n                }\r\n                else if (effect.target === 'opponentUnitRested') {\r\n                    cards = opponent.field.filter(x => global.isCardUnit(x) && !x.active);\r\n                }\r\n                else if (effect.target === 'playerUnit') {\r\n                    cards = player.field.filter(x => global.isCardUnit(x));\r\n                }\r\n                else if(effect.target === 'playerUnitWithAttribute'){\r\n                    cards = player.field.filter(x => global.isCardUnit(x) && x.attribute.includes(effect.targetAttribute));\r\n                }\r\n                else if (effect.target === 'unit') {\r\n                    alert('cant do that');\r\n                    global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                    return { stop: true }\r\n                }\r\n\r\n                if (cards.length < 1) {\r\n                    console.log(`Can't play the effect of ${card1.name} (${effect.id}) because there is no target available`);\r\n                    return {};\r\n                }\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select available target',\r\n                    cards\r\n                }].concat(global.game.tasks);\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        return this[effect.id](player, card1, card2Obj, effect);\r\n    }\r\n\r\n    /*\r\n    -------------------------------- Effects ------------------------------------\r\n    */\r\n\r\n    static dealDamage(player, card1, card2, effect) {\r\n        card2.hp -= effect.value;\r\n        if (card2.hp < 1) {\r\n            const tasks = global.destroyUnit(card2, false);\r\n            gameTask.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static discard(player, card1, card2, effect) {\r\n        const card = global.game.cardChoice;\r\n        if (!card) {\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n\r\n        global.deletePopup();\r\n        global.move(player, card, null, global.locationTrash);\r\n    }\r\n\r\n    static pilotToHand(player, card1, card2, effect) {\r\n        if (!card1.pair)\r\n            return;\r\n\r\n        const card = card1.pair;\r\n        delete (card1.pair);\r\n        card.isPaired = false;\r\n        global.move(player, card, null, global.locationHand);\r\n    }\r\n\r\n    static gainEffects(player, card1, card2, effect) {\r\n        card1.effects = card1.effects.concat(effect.effects);\r\n    }\r\n\r\n    static rest(player, card1, card2, effect) {\r\n        global.setActive(card2, false);\r\n    }\r\n\r\n    static repair(player, card1, card2, effect) {\r\n        const card = card2 ? card2 : card1;\r\n        card.hp = Math.min(card.hp + effect.value, card.hpMax);\r\n    }\r\n\r\n    static get1ShieldToHand(player, card1, card2, effect) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card = player.shield.splice(0, 1)[0];\r\n        const text = 'Get one shield to hand';\r\n        card.location = player.positions.shield.location;\r\n        gameTask.addTasks([{\r\n            id: gameTask.taskMove.name,\r\n            card1: card,\r\n            to: global.locationHand,\r\n            isPlayer1: player.isPlayer1\r\n        }]);\r\n        global.logEffect(effect, text);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(player, card1, card2, effect) {\r\n        if (!global.game.cardChoice) {\r\n            const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        else {\r\n            const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n            player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n            global.deletePopup();\r\n        }\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(player, card1, card2, effect) {\r\n        if (player.base || card2.index)\r\n            return;\r\n\r\n        const shield = player.shield[0];\r\n        const stop = shield.level < effect.value;\r\n        if (stop)\r\n            global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n        return { stop };\r\n    }\r\n\r\n    static gainThisTurn(player, card1, card2, effect) {\r\n        const effectClone = global.clone(effect);\r\n        delete effectClone.target;\r\n        effectClone.id = effectClone.effect2;\r\n        global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n        this.applyEffect(player, card2, null, effectClone);\r\n        card2.removeEndTurn = [effectClone];\r\n    }\r\n\r\n    static incruise(player, card1, card2, effect) {\r\n        card1.ap += effect.ap;\r\n        card1.hp += effect.hp;\r\n        card1.hpMax += effect.hp;\r\n        global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationHand);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToField(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationField);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToBase(player, card1, card2, effect) {\r\n        //global.move(player, card1, null, global.locationHand);\r\n        //global.logEffect(effect, `${card1.name} is send to hand`);\r\n        card1.location = global.locationShield;\r\n        gameTask.addTasks([{ id: gameTask.taskPlayCard.name, card1: card1, zone: player.positions.field }]);\r\n        return {};\r\n    }\r\n\r\n    static placeExResource(player, card1, card2, effect) {\r\n        player.resourcesEx += effect.value;\r\n        player.resourcesAvailable += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n    }\r\n\r\n    static placeRestedResource(player, card1, card2, effect) {\r\n        player.resourcesMax += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n    }\r\n\r\n    static breach(player, card1, card2, effect) {\r\n        if (!card1.breach || card1.breach < effect.value) {\r\n            card1.breach = effect.value;\r\n            global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static highManeuver(player, card1, card2, effect) {\r\n        if (!card1.highManeuver) {\r\n            card1.highManeuver = true;\r\n            global.logEffect(effect, `${card1.name} has highManeuver`);\r\n        }\r\n    }\r\n\r\n    static deploy(player, card1, card2, effect) {\r\n        const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n        if (targets.length < 1) return;\r\n        const card = targets[0];\r\n        card.selectable = false;\r\n        card.canAttack = false;\r\n        global.move(player, card, card.location, global.locationField);\r\n        global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n        this.apply(GameGundamEffect.onplay, player, card, null);\r\n    }\r\n\r\n    static attackActiveEnnemy(player, card1, card2, effect) {\r\n        if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n            card1.attackActiveEnnemy = effect.value;\r\n            global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(player, card1, card2, effect) {\r\n        if (card1.breach) {\r\n            if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                card1.immuneAp = effect.value;\r\n                global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n    static cardHighlight = [];\r\n    static needTaskEndRefresh = false;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        card.hpMax = card.hp;\r\n        card.effects = !card.effects ? [] : card.effects.map(fx=> this.clone(fx));\r\n        return card;\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = locationFrom && locationFrom!= 'pair' ? locationFrom: null;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if(from)\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard || (card.isTemporaryCard && locationTo === this.locationField) )\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n        card.location = locationTo;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        if(cardUnit.link.includes('['))\r\n            return cardUnit.link.includes(cardPilot.name);\r\n        else{\r\n            const targetStr = cardUnit.link.replace('(','').replace(')','');\r\n            return cardPilot.attribute.includes(targetStr);\r\n        }\r\n    }\r\n\r\n    static destroyUnit(card1, delay =true) {\r\n        card1.dead = true;\r\n        return [\r\n            { id: gameTask.taskApplyEffect.name, card1, trigger: effects.ondestroyed },\r\n            { id: gameTask.taskMove.name, delay, card1, to: this.locationTrash, isPlayer1: card1.isPlayer1 }\r\n        ];\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n        return {end:true};\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        // grid.field.cardHeightPercent = 0.54;\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6, grid.field.cardHeightPercent);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width: width - (2 * grid.x1), height: height - (2 * grid.y1), location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = 5; // (height - (grid.centerMini.card1.height * 1)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.card3 = { ...grid.centerMini.card1, x: grid.centerMini.card1.x + (grid.centerMini.card1.width / 2) };\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        grid.player1Heart = {x: width/2, y:height};\r\n        grid.player2Heart = {x: width/2, y:0};\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = global.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!global.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n        //let originXCenter = originX + ((width - (maxSize.width * maxSize.wrapCut))/2);\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n/*\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n*/\r\n\r\n\r\nexport default positioner;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute\",style:({ width: _vm.card.position.width + 'px', top: _vm.card.position.y + 'px', left: _vm.card.position.x + 'px' })},[_c('img',{staticClass:\"w100p\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"click\":function($event){return _vm.$emit('cardclick', _vm.card)}}}),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgRedHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickdown', _vm.card)}}},[_vm._v(\"-\")]):_vm._e(),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgGreenHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickup', _vm.card)}}},[_vm._v(\"+\")]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"absolute\"\r\n        :style=\"{ width: card.position.width + 'px', top: card.position.y + 'px', left: card.position.x + 'px' }\">\r\n        <img class=\"w100p\" style=\"object-fit: cover;\" :src=\"require('@/assets/' + folder + card.id + '.webp')\"\r\n            @click=\"$emit('cardclick', card)\">\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickdown', card)\" class=\"bgRedHover absolute\" style=\"bottom:50px; width:50%\">-</v-btn>\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickup', card)\" class=\"bgGreenHover absolute\" style=\"bottom:50px; width:50%\">+</v-btn>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    name: 'decklist-card',\r\n    components: {},\r\n    props: ['card', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckListCard.vue?vue&type=template&id=2de2b056&\"\nimport script from \"./deckListCard.vue?vue&type=script&lang=js&\"\nexport * from \"./deckListCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"w100p bg2 h100p\">\r\n        <div class=\"relative w100p\" style=\"margin-left:300px\">\r\n            <decklist-card v-for=\"(card, index) in cardData\" :key=\"'Decklist card ' + index\" :card=\"card\"\r\n                :folder=\"folder\" @cardclick=\"$emit('cardclick', card)\" @clickdown=\"incruise(card,-1)\" @clickup=\"incruise(card,1)\">\r\n            </decklist-card>\r\n        </div>\r\n        <div style=\"width: 300px;\" class=\"m5px h100p bgWhite fontSize125em\">\r\n            <v-btn class=\"w100p bg\" style=\"height:45px\" @click=\"$emit('cancel')\">Back</v-btn>\r\n            <div class=\"w100p text-center\">{{ resume }}</div>\r\n            <deck :deck=\"decklist\" :folder=\"folder\" style=\"width:280px; height:238px\"> </deck>\r\n            <v-btn class=\"w100p shine bg2\" style=\"height:45px\" @click=\"validate\">Valider</v-btn>\r\n            <br>\r\n            <textarea class=\"w100p h100p\" v-model=\"list\" @input=\"setList\">\r\n        </textarea>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport positioner from './scripts/positioner';\r\nimport decklistCard from './deckListCard.vue';\r\nimport deck from './deck';\r\n\r\nexport default {\r\n    name: 'deck-list',\r\n    components: { deck, decklistCard },\r\n    props: ['decklist', 'folder', 'cardlist'],\r\n    data: () => ({\r\n        list: '',\r\n        resume: '',\r\n        listCorrect: '',\r\n        cardData: null,\r\n        stopRefresh: false\r\n    }),\r\n    mounted() {\r\n        this.list = this.decklist.list.split(',').join('\\n');\r\n        this.refresh();\r\n    },\r\n    methods: {\r\n        validate() {\r\n            this.$emit('validate', { list: this.listCorrect });\r\n        },\r\n        refresh() {\r\n            const result = [];\r\n            const resultText = [];\r\n            const cards = this.list.split('\\n');\r\n            const listCorrect = [];\r\n            let index=0;\r\n\r\n            cards.forEach(line => {\r\n                index+= line.length;\r\n                let info = line.split('x');\r\n                let quantity = parseInt(info[0]);\r\n                if (info.length < 2 || isNaN(quantity) || quantity < 1) {\r\n                    resultText.push(line);\r\n                }\r\n                else {\r\n                    const id = this.getId(info[1]);\r\n                    const card = this.cardlist?.find(x => x.id == id);\r\n\r\n                    if (card) {\r\n                        result.push({ id, quantity, buttons:quantity===1 });\r\n                        listCorrect.push(`${quantity}x${id}`);\r\n                        resultText.push(`${quantity}x ${id} ${card.name}`);\r\n                        if(!line.includes(' ')){\r\n                            this.list = this.insertStringAt(this.list, index, ' ' + card.name + '\\n');\r\n                            index+= 2 + card.name.length;\r\n                        }\r\n                    } \r\n                }\r\n\r\n            });\r\n\r\n            const ratio = 107 / 200;\r\n            positioner.getWrapMaxPositions(this.$vuetify.breakpoint.width - 310, this.$vuetify.breakpoint.height - 10, result, ratio);\r\n            result.forEach(card => {\r\n                for (let i = 1; i < card.quantity; i++) {\r\n                    result.push({ \r\n                        id: card.id, \r\n                        buttons: i === card.quantity-1,\r\n                        position: { ...card.position, y: card.position.y + (i * 0.06 * card.position.height) } });\r\n                }\r\n            });\r\n\r\n            this.resume = `${result.length} cards`;\r\n            this.listCorrect = listCorrect.join(',');\r\n            this.cardData = result;\r\n        },\r\n        getId(str) {\r\n            return str.trim().split(' ')[0];\r\n        },\r\n        setList() {\r\n            if (this.stopRefresh)\r\n                return;\r\n            this.stopRefresh = true;\r\n            this.refresh();\r\n            this.stopRefresh = false;\r\n        },\r\n        incruise(card, pitch){\r\n            const index = this.list.indexOf(card.id);\r\n            const quantity = parseInt(this.list.charAt(index-2))+pitch;\r\n            this.list = this.insertStringAt(this.list, index-2, quantity);\r\n            this.setList();\r\n        },\r\n        insertStringAt(content, index, str){\r\n            return content.substring(0, index) + str + content.substring(index+1);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckList.vue?vue&type=template&id=29d22ed5&\"\nimport script from \"./deckList.vue?vue&type=script&lang=js&\"\nexport * from \"./deckList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p mask\" :key=\"refreshG\" style=\"height:92vh\">\r\n\r\n        <!-- DeckList Show-->\r\n        <deck-list v-if=\"decklistShow\" :decklist=\"decklistShow\" :cardlist=\"cardList\" folder=\"Gundam/cards/\"\r\n            style=\"top:50px\" @cardclick=\"showCardDeckList\" @cancel=\"showDeckList(null)\" @validate=\"selectDeckList\">\r\n        </deck-list>\r\n\r\n        <!-- DeckLists -->\r\n        <div v-if=\"!game\">\r\n            <h2>Select deck for the {{ decklistPlayer1 ? 'opponent' : 'player' }}</h2>\r\n            <div class=\"flex flex-wrap flex-space-around fontSize32\">\r\n                <deck v-for=\"(deck, index) in deckList\" :key=\"'Deck' + index\" :deck=\"deck\" folder=\"Gundam/cards/\"\r\n                    @click=\"showDeckList(deck)\">\r\n                </deck>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), bg: box.zone.endsWith('0'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 'locationHand'\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n         -->\r\n\r\n        <span v-if=\"game\">\r\n            <!-- Drag and drop field-->\r\n            <div class=\"absolute bg2\" :style=\"getFieldStyleObj(game.grid.halfPlayer1)\">\r\n            </div>\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.halfPlayer2)\">\r\n            </div>\r\n\r\n            <img class=\"w100p, absolute\" :style=\"{ ...getFieldStyleObj(game.grid.centerZone), 'object-fit': 'cover' }\"\r\n                :src=\"require('@/assets/Gundam/centerZone.png')\" />\r\n\r\n            <!-- Player 1-->\r\n             {{  game.player1.deckIcon }}\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Base), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.baseIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Shield), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.shieldIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Deck), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.deckIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Trash), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.trashIcon)\" />\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player1Base.text)\">\r\n                Base {{ game.player1.deckIcon }}\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player1Shield.text)\">\r\n                Shield : {{ game.player1.shield.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player1Deck.text)\">\r\n                Deck : {{ game.player1.deck.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player1Trash.text)\">\r\n                Trash : {{ game.player1.trash.length }}\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player1Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player1Field)\">\r\n            </div>\r\n\r\n            <!-- Player 2-->\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Base), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.baseIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Shield), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.shieldIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Deck), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.deckIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Trash), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.trashIcon)\" />\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player2Base.text)\">\r\n                Base\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player2Shield.text)\">\r\n                Shield : {{ game.player2.shield.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player2Deck.text)\">\r\n                Deck : {{ game.player2.deck.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize1em text-center\" :style=\"getFieldStyleObj(game.grid.player2Trash.text)\">\r\n                Trash : {{ game.player2.trash.length }}\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player2Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player2Field)\">\r\n            </div>\r\n\r\n            <!-- Highlight and TextZone-->\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.textZone)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardCenter)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardLeft)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.highlightCardRight)\">\r\n            </div>\r\n\r\n            <div class=\"absolute bgYellow circle10px\" :style=\"getFieldStyleObj(game.grid.rightButton)\">\r\n                <v-btn target=\"_blank\"\r\n                    :class=\"{ bg2: true, shine: !freeze, fontSize1em: true, w100p: true, h100p: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    End Turn\r\n                </v-btn>\r\n            </div>\r\n\r\n            <div class=\"absolute\" :style=\"getFieldStyleObj(game.grid.leftButton)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg: true, fontSize1em: true, w100p: true, h100p: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    Logs\r\n                </v-btn>\r\n            </div>\r\n        </span>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game && false\">\r\n            <div class=\"bgYellow absolute circle10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:13\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameGundam from './gundam/game';\r\nimport gameCard from './card';\r\nimport deck from './deck';\r\nimport deckList from './deckList';\r\nimport cards from '../data/gundamCards.json';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard, deck, deckList },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n        center: null,\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        decklistShow: null,\r\n        deckList: []\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        //this.center = positioner.getCardSize(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, 1, 1);\r\n        this.cardList = cards.cards;\r\n        this.decklistPlayer1 = cards.decklist[3].list;\r\n        this.decklistPlayer2 = cards.decklist[3].list;\r\n        this.start();\r\n    },\r\n    methods: {\r\n        showDeckList(decklist) {\r\n            this.decklistShow = decklist;\r\n        },\r\n        selectDeckList(decklist) {\r\n            if (!this.decklistPlayer1)\r\n                this.decklistPlayer1 = decklist.list;\r\n            else {\r\n                this.decklistPlayer2 = decklist.list;\r\n                this.start();\r\n            }\r\n            this.decklistShow = null;\r\n        },\r\n        start() {\r\n            this.game = gameGundam.setup(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, cards, this.decklistPlayer1, this.decklistPlayer2);\r\n            // this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, this.decklistPlayer1, this.decklistPlayer2);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameGundam.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameGundam.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gameGundam.delay;\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gameGundam.delay;\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            console.log(JSON.stringify(cardsToAnimate));\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gameGundam.delay;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            }\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCardDeckList(card) {\r\n            const newCard = { ...card };\r\n            newCard.position = { ...card.position, x: card.position.x + 300 };\r\n            this.showCard(newCard);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.center : this.center;\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gameGundam.delay);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if (this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if (!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=71b9112d&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=71b9112d&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"71b9112d\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? {\r\n                x: this.pxStringToInt(element.style.left),\r\n                y: this.pxStringToInt(element.style.top),\r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) : anim.to;\r\n            animationsArray.push({ element, from, to });\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071,\n\t\"./empty.webp\": 8621,\n\t\"./empty2.webp\": 66626\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./CardsGundam.png\": 4859,\n\t\"./EncyclopedieGundam.png\": 15831,\n\t\"./GundamEncyclopedie.png\": 94627,\n\t\"./GundamLogo.jpg\": 30262,\n\t\"./GundamLogo2.png\": 68499,\n\t\"./cards/EXB-001.webp\": 43631,\n\t\"./cards/EXBP-001.webp\": 69411,\n\t\"./cards/GD01-004.webp\": 19862,\n\t\"./cards/GD01-004_p1.webp\": 91962,\n\t\"./cards/GD01-005.webp\": 80632,\n\t\"./cards/GD01-008.webp\": 13406,\n\t\"./cards/GD01-009.webp\": 39343,\n\t\"./cards/GD01-011.webp\": 57985,\n\t\"./cards/GD01-013.webp\": 25257,\n\t\"./cards/GD01-015.webp\": 29370,\n\t\"./cards/GD01-016.webp\": 24272,\n\t\"./cards/GD01-018.webp\": 62998,\n\t\"./cards/GD01-026.webp\": 83759,\n\t\"./cards/GD01-026_p1.webp\": 58145,\n\t\"./cards/GD01-028.webp\": 21495,\n\t\"./cards/GD01-030.webp\": 94485,\n\t\"./cards/GD01-031.webp\": 38537,\n\t\"./cards/GD01-034.webp\": 63515,\n\t\"./cards/GD01-040.webp\": 66732,\n\t\"./cards/GD01-041.webp\": 70958,\n\t\"./cards/GD01-068.webp\": 46040,\n\t\"./cards/GD01-070.webp\": 45504,\n\t\"./cards/GD01-070_p1.webp\": 85993,\n\t\"./cards/GD01-072.webp\": 8042,\n\t\"./cards/GD01-075.webp\": 52313,\n\t\"./cards/GD01-076.webp\": 85876,\n\t\"./cards/GD01-077.webp\": 97867,\n\t\"./cards/GD01-081.webp\": 18546,\n\t\"./cards/GD01-088.webp\": 14026,\n\t\"./cards/GD01-088_p1.webp\": 68437,\n\t\"./cards/GD01-089.webp\": 27418,\n\t\"./cards/GD01-091.webp\": 81708,\n\t\"./cards/GD01-097.webp\": 34893,\n\t\"./cards/GD01-099.webp\": 49483,\n\t\"./cards/GD01-100.webp\": 93330,\n\t\"./cards/GD01-100_p1.webp\": 92990,\n\t\"./cards/GD01-105.webp\": 67155,\n\t\"./cards/GD01-107.webp\": 66642,\n\t\"./cards/GD01-107_p1.webp\": 60768,\n\t\"./cards/GD01-117.webp\": 79955,\n\t\"./cards/GD01-118.webp\": 70779,\n\t\"./cards/GD01-118_p1.webp\": 57707,\n\t\"./cards/GD01-120.webp\": 90273,\n\t\"./cards/GD01-124.webp\": 8279,\n\t\"./cards/R-001.webp\": 96567,\n\t\"./cards/R-002.webp\": 38857,\n\t\"./cards/ST01-001.webp\": 16906,\n\t\"./cards/ST01-001_p1.webp\": 6864,\n\t\"./cards/ST01-002.webp\": 23582,\n\t\"./cards/ST01-005.webp\": 7162,\n\t\"./cards/ST01-007.webp\": 56694,\n\t\"./cards/ST01-008.webp\": 70791,\n\t\"./cards/ST01-010.webp\": 45022,\n\t\"./cards/ST01-011.webp\": 56581,\n\t\"./cards/ST01-011_p1.webp\": 1978,\n\t\"./cards/ST01-012.webp\": 13866,\n\t\"./cards/ST01-013.webp\": 79915,\n\t\"./cards/ST01-015.webp\": 51310,\n\t\"./cards/ST01-016.webp\": 86882,\n\t\"./cards/ST02-001.webp\": 58864,\n\t\"./cards/ST02-001_p1.webp\": 76074,\n\t\"./cards/ST02-002.webp\": 23941,\n\t\"./cards/ST02-005.webp\": 55045,\n\t\"./cards/ST02-010.webp\": 99834,\n\t\"./cards/ST02-012.webp\": 57160,\n\t\"./cards/ST02-013.webp\": 55214,\n\t\"./cards/ST02-015.webp\": 34078,\n\t\"./cards/ST03-007.webp\": 82235,\n\t\"./cards/ST03-008.webp\": 55340,\n\t\"./cards/ST03-011.webp\": 56486,\n\t\"./cards/ST03-011_p1.webp\": 92329,\n\t\"./cards/ST03-016.webp\": 77816,\n\t\"./cards/ST04-001.webp\": 22859,\n\t\"./cards/ST04-001_p1.webp\": 46858,\n\t\"./cards/ST04-002.webp\": 18971,\n\t\"./cards/ST04-005.webp\": 54511,\n\t\"./cards/ST04-010.webp\": 80363,\n\t\"./cards/ST04-013.webp\": 14005,\n\t\"./cards/ST04-015.webp\": 81633,\n\t\"./cards/T-001.webp\": 32442,\n\t\"./cards/T-002.webp\": 46514,\n\t\"./cards/T-003.webp\": 88739,\n\t\"./cards/T-006.webp\": 17071,\n\t\"./cards/empty.webp\": 8621,\n\t\"./cards/empty2.webp\": 66626,\n\t\"./centerZone.png\": 17852,\n\t\"./deck1.png\": 69877,\n\t\"./deck2.png\": 85350,\n\t\"./deck3.png\": 58251,\n\t\"./deck4.png\": 13665,\n\t\"./deck5.png\": 35931,\n\t\"./deck6.png\": 23094,\n\t\"./gundam.png\": 63111,\n\t\"./gundam2.png\": 98815,\n\t\"./head.png\": 83639,\n\t\"./wingzero2.gif\": 70898\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73890;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXB-001.webp\": 43631,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-004.webp\": 19862,\n\t\"./Gundam/cards/GD01-004_p1.webp\": 91962,\n\t\"./Gundam/cards/GD01-005.webp\": 80632,\n\t\"./Gundam/cards/GD01-008.webp\": 13406,\n\t\"./Gundam/cards/GD01-009.webp\": 39343,\n\t\"./Gundam/cards/GD01-011.webp\": 57985,\n\t\"./Gundam/cards/GD01-013.webp\": 25257,\n\t\"./Gundam/cards/GD01-015.webp\": 29370,\n\t\"./Gundam/cards/GD01-016.webp\": 24272,\n\t\"./Gundam/cards/GD01-018.webp\": 62998,\n\t\"./Gundam/cards/GD01-026.webp\": 83759,\n\t\"./Gundam/cards/GD01-026_p1.webp\": 58145,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-030.webp\": 94485,\n\t\"./Gundam/cards/GD01-031.webp\": 38537,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-068.webp\": 46040,\n\t\"./Gundam/cards/GD01-070.webp\": 45504,\n\t\"./Gundam/cards/GD01-070_p1.webp\": 85993,\n\t\"./Gundam/cards/GD01-072.webp\": 8042,\n\t\"./Gundam/cards/GD01-075.webp\": 52313,\n\t\"./Gundam/cards/GD01-076.webp\": 85876,\n\t\"./Gundam/cards/GD01-077.webp\": 97867,\n\t\"./Gundam/cards/GD01-081.webp\": 18546,\n\t\"./Gundam/cards/GD01-088.webp\": 14026,\n\t\"./Gundam/cards/GD01-088_p1.webp\": 68437,\n\t\"./Gundam/cards/GD01-089.webp\": 27418,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-097.webp\": 34893,\n\t\"./Gundam/cards/GD01-099.webp\": 49483,\n\t\"./Gundam/cards/GD01-100.webp\": 93330,\n\t\"./Gundam/cards/GD01-100_p1.webp\": 92990,\n\t\"./Gundam/cards/GD01-105.webp\": 67155,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/GD01-107_p1.webp\": 60768,\n\t\"./Gundam/cards/GD01-117.webp\": 79955,\n\t\"./Gundam/cards/GD01-118.webp\": 70779,\n\t\"./Gundam/cards/GD01-118_p1.webp\": 57707,\n\t\"./Gundam/cards/GD01-120.webp\": 90273,\n\t\"./Gundam/cards/GD01-124.webp\": 8279,\n\t\"./Gundam/cards/R-001.webp\": 96567,\n\t\"./Gundam/cards/R-002.webp\": 38857,\n\t\"./Gundam/cards/ST01-001.webp\": 16906,\n\t\"./Gundam/cards/ST01-001_p1.webp\": 6864,\n\t\"./Gundam/cards/ST01-002.webp\": 23582,\n\t\"./Gundam/cards/ST01-005.webp\": 7162,\n\t\"./Gundam/cards/ST01-007.webp\": 56694,\n\t\"./Gundam/cards/ST01-008.webp\": 70791,\n\t\"./Gundam/cards/ST01-010.webp\": 45022,\n\t\"./Gundam/cards/ST01-011.webp\": 56581,\n\t\"./Gundam/cards/ST01-011_p1.webp\": 1978,\n\t\"./Gundam/cards/ST01-012.webp\": 13866,\n\t\"./Gundam/cards/ST01-013.webp\": 79915,\n\t\"./Gundam/cards/ST01-015.webp\": 51310,\n\t\"./Gundam/cards/ST01-016.webp\": 86882,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-001_p1.webp\": 76074,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./Gundam/cards/ST03-007.webp\": 82235,\n\t\"./Gundam/cards/ST03-008.webp\": 55340,\n\t\"./Gundam/cards/ST03-011.webp\": 56486,\n\t\"./Gundam/cards/ST03-011_p1.webp\": 92329,\n\t\"./Gundam/cards/ST03-016.webp\": 77816,\n\t\"./Gundam/cards/ST04-001.webp\": 22859,\n\t\"./Gundam/cards/ST04-001_p1.webp\": 46858,\n\t\"./Gundam/cards/ST04-002.webp\": 18971,\n\t\"./Gundam/cards/ST04-005.webp\": 54511,\n\t\"./Gundam/cards/ST04-010.webp\": 80363,\n\t\"./Gundam/cards/ST04-013.webp\": 14005,\n\t\"./Gundam/cards/ST04-015.webp\": 81633,\n\t\"./Gundam/cards/T-001.webp\": 32442,\n\t\"./Gundam/cards/T-002.webp\": 46514,\n\t\"./Gundam/cards/T-003.webp\": 88739,\n\t\"./Gundam/cards/T-006.webp\": 17071,\n\t\"./Gundam/cards/empty.webp\": 8621,\n\t\"./Gundam/cards/empty2.webp\": 66626,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","decklistShow","selectDeckList","style","getFieldStyleObj","game","grid","halfPlayer2","player1Shield","player1","length","player1Deck","text","deck","player1Trash","trash","player1Hand","player1Field","player2Shield","player2Deck","player2","player2Trash","player2Hand","player2Field","textZone","highlightCardCenter","highlightCardLeft","highlightCardRight","rightButton","class","shine","fontSize1em","w100p","h100p","getFieldStyle","textEffect","position","domProps","_e","card","selectable","$event","showCard","onDragOver","left","choice","setup","static","createPlayer","decklistPlayer1","decklistPlayer2","isPlayer1","handStartLength","i","addTasks","id","spawnOrMove","from","locationDeck","to","locationHand","mulligan","decklist","createDeck","result","shield","hand","field","base","empty","positions","player1Base","player2Base","split","forEach","line","info","quantity","parseInt","cardList","find","x","Error","push","createCard","index","getNextIndex","location","sortRandom","clone","cards","hpMax","hp","effects","map","fx","sort","Math","random","console","log","positioner","screenWidth","screenHeight","border2","border","height","boxHeight","centerZone","y","zone","show","heightQuarter","textHeight","iconHeight","player1TextLine","player1DeckLine","getDeckX","locationBase","locationShield","locationTrash","player2TextLine","player2DeckLine","leftButton","halfPlayer1","locationField","getCardSize","value","box","createZone","x15","y8","x0","y7","y9","y6","y10","y5","y11","y4","resource","y12","y3","locationResource","y13","x1","y0","x14","x2","cardHeightPercent","y1","y2","p1","p2","concat","centerMini","useZoneSize","wrapCut","zoneHeight","cardSize","degree","active","bgposition","getWrapPosition","cardHighlight","zindex","pair","getPairPosition","rotation","count","desiredWidth","desiredHeight","total","getCardPositionXY","mid","floor","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","totalWidth","elementWidth","sizeWidth","ratio","margin","maxSize","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","ceil","widthMargin","heightMargin","ratioInverted","heightDesired","widthDesired","_defineProperty","cardMove","task","player","cardSpawn","move","card1","addIn","locationFrom","locationTo","removeByIndex","splice","end","isTemporaryCard","hidestat","isPaired","needToRefreshAllField","includes","refresh","baseIcon","shieldIcon","getIcon","deckIcon","trashIcon","tasks","opponent","tasksString","join","stop","delay","wait","needTaskEndRefresh","taskEndRefresh","addTasksFirst","refreshOnlyTextEffect","refreshFieldAndHand","taskAttack","array","list","slice","filter","addFunction","createGrid","continue","handleTasks","card2","drop","popup","actionPlayer","actionOpponent","cardChoice","type","isCardPilot","isCardCommand","logs","effect","obj","Object","assign","cla","ignore","c","getOwnPropertyNames","method","message","alert","top","transform","cursor","$emit","absolute","folder","preventDefault","ap","dead","card3","cardData","resume","expression","target","setList","gameTask","global","manager","endRefresh","taskTextHide","showTitle","getPlayer","heartPosition","player1Heart","player2Heart","taskCenter","taskCardToCenter","addListInArrayAfterIndex","spawnIfNot","destination","taskTextShow","center","attack","cardPlayer","playCard","regularPlay","applyEffect","trigger","GameGundamEffect","removeEndTurn","lost","effectsRemainings","getEffectsRemaining","getEffectText","isShowingEffect","apply","taskCardsToMiniCenter","toString","effect2","effectsRemaining","nothing","toBeRemoved","oneTurn","multiTriggers","onpair","onlink","needNewCard2","card2Obj","isCardUnit","attribute","targetAttribute","logEffect","JSON","stringify","taskPopup","deletePopup","destroyUnit","setActive","min","taskMove","getAndRemoveFirst","select","bottomCard","level","effectClone","taskPlayCard","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","highManeuver","targets","canAttack","onplay","attackActiveEnnemy","immuneAp","cardUnit","cardPilot","isLink","effectResult","handleEffects","locationPair","targetStr","replace","taskApplyEffect","ondestroyed","divide","widthB","heightB","boxbig","card6","decklistCard","listCorrect","stopRefresh","validate","resultText","isNaN","getId","cardlist","buttons","insertStringAt","getWrapMaxPositions","breakpoint","str","trim","incruise","pitch","indexOf","charAt","content","substring","gameCard","deckList","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","showDeckList","gameGundam","refreshGame","nextTurn","animTextEffect","selectChoice","selectChoiceCard","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","endAnimation","animations","showCardMouseOver","showCardDeckList","newCard","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","positionDrag","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","positionOld","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","fields","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridX","getGridY","getGridPlace","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","t","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","animateMultiple","animationsArray","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}