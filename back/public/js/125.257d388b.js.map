{"version":3,"file":"js/125.257d388b.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\n        bgRed2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card2.x, _vm.game.grid.centerMini.card2.y,\n        _vm.game.grid.centerMini.card2.width, _vm.game.grid.centerMini.card2.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgYellow absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.text.x, _vm.game.grid.centerMini.text.y,\n        _vm.game.grid.centerMini.text.width, _vm.game.grid.centerMini.text.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize20\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l(([]),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game?.popup)?_c('div',[_vm._v(\" \"+_vm._s(_vm.game.popup)+\" \")]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"2\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 'RefreshField';\r\n    static taskShowTitle = 'ShowTitle';\r\n    static taskDrawToCenter = 'DrawToCenter';\r\n    static taskDrawToHand = 'DrawToHand';\r\n    static taskEndAnimation = 'EndAnimation';\r\n    static taskCardToMiniCenter = 'CardToMiniCenter';\r\n    static taskCardToMiniCenter2 = 'CardToMiniCenter2';\r\n    static taskTextToMiniCenter2 = 'TextToMiniCenter2';\r\n    static taskTextToTrash = 'TextToTrash';\r\n    static taskDeleteText = 'DeleteText';\r\n    static taskCardToCenter = 'CardToCenter';\r\n    static taskCardToTrash = 'CardToTrash';\r\n    static taskDeleteCard = 'DeleteCard';\r\n    static taskAttack = 'Attack';\r\n    static taskSelectCards = 'SelectCards';\r\n    static taskPlayCard = 'PlayCard';\r\n    static taskPlayCardWithEffect = 'PlayCardWithEffect';\r\n    static taskApplyEffect = 'ApplyEffect';\r\n    static taskCardToHand = 'CardToHand';\r\n    static taskPairCard = 'PairCard';\r\n    static taskPairCardWithEffect = 'PairCardWithEffect';\r\n\r\n    static addTasks(list, tasks) {\r\n        tasks.forEach(task => {\r\n            //if (!this.alreadyInclude(list, task))\r\n            list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid){\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if(task)\r\n            delete(task.delay);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        card1.effectsRemaining = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1)\r\n                return;\r\n            const card = player.shield.splice(0,1)[0];\r\n            const delay = global.delay;\r\n            const text = 'Get one shield to hand';\r\n            card.location = player.positions.shield.location;\r\n            gameTask.addTasks(global.game.tasks,\r\n                [\r\n                    { id: gameTask.taskCardToHand, delay, card1: card, isPlayer1: player.isPlayer1 },\r\n                    { id: gameTask.taskTextToTrash },\r\n                    { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n                    { id: gameTask.taskDeleteText },\r\n                    { id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 },\r\n                ]);\r\n            global.logEffect(effect, text);\r\n            return {};\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            if (!global.game.cardChoice) {\r\n                const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskSelectCards,\r\n                    text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                    cards,\r\n                    select: 'top2DeckCard1Top1BottomSelect'\r\n                }].concat(global.game.tasks);\r\n                return { stop: true }\r\n            }\r\n            else {\r\n                const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n                player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n                global.game.popup = null;\r\n                return {};\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const cancel = shield.level < effect.value;\r\n            if (cancel)\r\n                global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { cancel };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            //global.game.tasks = [{id: gameTask.taskMove, card1, location:global.locationHand}].concat(global.game.tasks);\r\n            gameTask.addTasks(global.game.tasks, [\r\n                { id: gameTask.taskMove, card1, location: global.locationHand, isPlayer1: player.isPlayer1 }\r\n                , { id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }\r\n            ]);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            global.move(player, card1, global.locationShield, global.locationField);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToBase') {\r\n            card1.location = player.positions.shield.location;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard, card1: card1, zone: player.positions.field }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.canAttack = false;\r\n            global.move(player, card, card.location, global.locationField);\r\n            global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n            this.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemyLvXOrLower') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneApXIfBreach') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay = 500;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 0;\r\n    static locationDeck = 1;\r\n    static locationShield = 2;\r\n    static locationHand = 3;\r\n    static locationField = 4;\r\n    static locationBase = 5;\r\n    static locationTrash = 6;\r\n    static locationResource = 7;\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawn(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.spawnNotShown(player, card, locationFrom, locationTo);\r\n        cardSpawn.zindex = 11;\r\n        global.game.cards = global.addIn(global.game.cards, cardSpawn);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnNotShown(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card.index);\r\n\r\n        card.position = player.positions[from];\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        return card;\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const exist = global.game.cards.find(x => x.index === card.index);\r\n        if (!exist)\r\n            this.spawn(player, card, locationFrom, locationTo, ignoreRefresh);\r\n        else\r\n            this.move(player, card, locationFrom, locationTo, ignoreRefresh);\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        player[from] = global.removeByIndex(player[from], card);\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2, isShowingEffect) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const task = { id: gameTask.taskPairCardWithEffect, card1: cardUnit, card2: cardPilot };\r\n        const effectResult = global.handleEffects(player, cardUnit, cardPilot, isShowingEffect, trigger, task);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Effects \r\n    static handleEffects(player, card1, card2, isShowingEffect, trigger, task) {\r\n        const effectsRemainings = effects.getEffectsRemaining(trigger, card1, card2);\r\n        const text = effectsRemainings.map(x => `${x.effect} ${x.value}`).join('<br>');\r\n        const delay = global.delay;\r\n        if (effectsRemainings && effectsRemainings.length > 0) {\r\n            if (!isShowingEffect) {\r\n                const taskShowCards = card2\r\n                    ? [\r\n                        { id: gameTask.taskCardToMiniCenter, card1: card1, isPlayer1: card1.isPlayer1 },\r\n                        { id: gameTask.taskCardToMiniCenter2, card1: card2, isPlayer1: card1.isPlayer1 }\r\n                    ]\r\n                    : [{ id: gameTask.taskCardToMiniCenter, card1: card1, isPlayer1: card1.isPlayer1 }];\r\n\r\n                gameTask.addTasks(global.game.tasks, taskShowCards.concat([{ id: gameTask.taskTextToMiniCenter2, delay, text }, task]));\r\n                return { stop: true };\r\n            } else\r\n                gameTask.addTasks(global.game.tasks, [\r\n                    { id: gameTask.taskTextToTrash, delay },\r\n                    { id: gameTask.taskDeleteText },\r\n                ]);\r\n        }\r\n\r\n        return effects.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Tasks \r\n    static startAttackAnimation(player, opponent, attacker, target, zone, breach) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1: attacker, isPlayer1: attacker.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay, card1: target, isPlayer1: target.isPlayer1 },\r\n            { id: gameTask.taskAttack, player, opponent, attacker, target, delay, zone, breach }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterThenBackToSquareOne(card1, card2) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay * 2, card1: card2, isPlayer1: card2.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card2.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenBackToSquareOne(card1, text) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenDeleteIt(card1, text) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskCardToTrash, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card1, removeBase = false) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskCardToTrash, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, removeBase, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenBackToSquareOne(card1) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToTrashThenDeleteIt(card1, removeBase = false) {\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToTrash, delay: this.delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, removeBase, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        effect.texts = (effect.texts ? effect.texts : []).concat([text]);\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = {\r\n            x: grid.x2, y: grid.y2,\r\n            width: grid['x' + (divide - 2)] - grid.x2, height: grid['y' + (divide - 2)] - grid.y2, location: 0, zone: 'centerMini1'\r\n        };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.text = {x: grid.x2, y:grid.y2 + grid.centerMini.card1.height, width: grid.centerMini.card1.width*2};\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize = false) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            card.to = this.getCardPosition(index, cards.length, position, cardSize, card);\r\n            card.location = position.location;\r\n            card.zindex= card.pair ? 2 : 1;\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getCardPosition(index, total, position, cardSize, card) {\r\n        const degree = card.active ? 0 : 90;\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawn(global.game.player1, null, global.locationDeck, global.locationHand, true);\r\n            global.spawn(global.game.player2, null, global.locationDeck, global.locationHand, true);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        global.delay = manager.getAnimDuration();\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskRefreshField, isPlayer1: true },\r\n            { id: gameTask.taskRefreshField, isPlayer1: false },\r\n            { id: gameTask.taskShowTitle, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: global.delay }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        game.manager.playCard(global.getPlayerTurn(), card1, card2, zone);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.manager.selectChoiceCard(game, card);\r\n        return game;\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks[0];// .splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n            // const opponent = task.isPlayer1 ? game.player2 : game.player1;\r\n\r\n            if (task.id === gameTask.taskRefreshField) {\r\n                // this.endAnimation(game);\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToCenter) {\r\n                const card = global.spawn(player, null, global.locationDeck, global.locationHand);\r\n                card.to = global.grid.center;\r\n                global.game.lastCard = card;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToHand) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskShowTitle) {\r\n                game.showTitle = task.value;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskEndAnimation) {\r\n                this.endAnimation(game);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteCard) {\r\n                global.game.cards = global.removeByIndex(global.game.cards, task.card1);\r\n                if (task.removeBase) {\r\n                    global.getPlayer(task.card1.isPlayer1).base = [];\r\n                }\r\n                if (task.card1.pair) {\r\n                    global.game.cards = global.removeByIndex(global.game.cards, task.card1.pair);\r\n                    delete (task.card1.pair);\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter) {\r\n                task.card1.to = global.grid.centerMini.card1;\r\n                task.card1.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter2) {\r\n                if (task.card1) {\r\n                    task.card1.to = global.clone(global.grid.centerMini.card2);\r\n                    task.card1.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToCenter) {\r\n                task.card1.to = global.grid.center;\r\n                task.card1.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToTrash) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.refreshFieldAndHand(cardPlayer);\r\n                if (task.card1.location !== global.locationTrash)\r\n                    global.move(cardPlayer, task.card1, task.card1.location, global.locationTrash, true);\r\n                task.card1.to = global.clone(cardPlayer.positions.trash);\r\n                if (task.card1.pair) {\r\n                    task.card1.pair.to = task.card1.to;\r\n                    global.move(cardPlayer, task.card1.pair, task.card1.pair.location, global.locationTrash, true);\r\n                }\r\n                task.card1.hidestat = true;\r\n                task.card1.to.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskAttack) {\r\n                game.manager.attack(task.player, task.opponent, task.attacker, task.target, task.zone, task.breach);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToMiniCenter2) {\r\n                game.textEffect = {\r\n                    text: task.text,\r\n                    position: global.clone(global.grid.centerMini.text)\r\n                };\r\n                game.textEffect.to = global.clone(game.textEffect.position);\r\n                game.textEffect.position.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToTrash) {\r\n                if (game.textEffect) {\r\n                    game.textEffect.position.height = global.grid.centerMini.text.height;\r\n                    game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n                    game.refreshOnlyTextEffect = true;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteText) {\r\n                game.refreshOnlyTextEffect = false;\r\n                delete (game.textEffect);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskSelectCards) {\r\n                if (!game.cardChoice) {\r\n                    game.popup = task;\r\n                    return game;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToHand) {\r\n                global.spawn(player, task.card1, task.card1.location, global.locationHand);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPlayCard) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPlayCardWithEffect) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, true);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            else if(task.id === gameTask.taskPairCard) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.pair(cardPlayer, task.card1, task.card2);\r\n            }\r\n\r\n            else if(task.id === gameTask.taskPairCardWithEffect) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.pair(cardPlayer, task.card1, task.card2, true);\r\n            }\r\n\r\n            else if(task.id === gameTask.taskMove){\r\n                global.spawnOrMove(player, task.card1, task.card1.location, global.locationHand);\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = global.isPlayer1 == card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, isShowingEffect) {\r\n        const noDropZone = !card2 && !zone;\r\n        if (noDropZone) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (card1.location === global.locationHand)\r\n            return this.playFromHand(player, card1, card2, zone, isShowingEffect);\r\n        else if (card1.location === global.locationField)\r\n            return this.attack(player, card1, card2, zone);\r\n        else\r\n            return this.playCard(player, card1, card2, zone, isShowingEffect, false);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone, isShowingEffect) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer || zone.location == global.locationHand) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        return this.playCard(player, card1, card2, zone, isShowingEffect, true);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect, playCost) {\r\n        if (!global.game.cards.find(x => x.index === card1.index)) {\r\n            global.game.cards.push(card1);\r\n        }\r\n\r\n        const task = { id: gameTask.taskPlayCardWithEffect, isPlayer1: card1.isPlayer1, card1, card2, zone };\r\n        const effectResult = global.handleEffects(player, card1, card2, isShowingEffect, effects.onplay, task);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        if (this.isCardUnit(card1)) {\r\n            card1.canAttack = false;\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskCardToTrash, card1: player.base[0] }]);\r\n\r\n            global.move(player, card1, card1.location, global.locationBase);\r\n            card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (this.isCardPilot(card1) && card2 && this.isCardUnit(card2)) {\r\n            if (card1.pair || card2.pair || card1.isPaired || card2.isPaired) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPairCard, card1, card2 }]);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardCommand(card1)) {\r\n            const effectResult = effects.apply(effects.command, player, card1);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n\r\n            global.move(player, card1, card1.location, global.locationTrash);\r\n            global.moveCardToMiniCenterWithTextThenDeleteIt(card1, 'giant effect');\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone, breach) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            if (card2.active) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            global.startAttackAnimation(player, opponent, card1, card2, zone, breach);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            global.startAttackAnimation(player, opponent, card1, target, zone);\r\n            return;\r\n        } else {\r\n            global.setActive(card1, false);\r\n\r\n            let card = opponent.shield.splice(0,1)[0];\r\n            const effectResult = effects.apply(effects.burst, opponent, card, card1);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            global.spawn(opponent, card, global.locationShield, global.locationTrash);\r\n            global.moveCardToCenterThenDeleteIt(card);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        const delay = global.delay;\r\n\r\n        let damage = breach ? breach : attacker.ap;\r\n        if(target.immuneAp && damage < target.immuneAp) \r\n            damage = 0;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        if(attacker.immuneAp && attacker < target.immuneAp) \r\n            damage = 0;\r\n        attacker.hp -= damage;\r\n\r\n        const activeBreach = !breach && this.isCardUnit(target) && attacker.breach && target.hp < 1;\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            global.move(player, attacker, attacker.location, player.positions.trash.location, true);\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : global.delay;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay: delayForTarget, card1: attacker, isPlayer1: attacker.isPlayer1 });\r\n        } else if(!activeBreach)\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            global.move(opponent, target, target.location, opponent.positions.trash.location, true);\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay, card1: target, isPlayer1: target.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        if (attacker.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card1: attacker, isPlayer1: attacker.isPlayer1 });\r\n        if (target.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card1: target, isPlayer1: target.isPlayer1 });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n        \r\n        if (activeBreach) {\r\n            this.attack(player, attacker, null, zone, attacker.breach);\r\n        }\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.cardChoice = card;\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 500; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.spawnNotShown(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.spawnNotShown(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        game.player1.deck = [global.createCard(\"ST02-015\")].concat(game.player1.deck);\r\n        game.player2.deck = [global.createCard(\"ST02-015\")].concat(game.player2.deck);\r\n\r\n        const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        playerOpponent.resourcesEx+=1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawn(player, card, global.locationBase, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        player.resourcesMax+=1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n        \r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand);\r\n        positioner.refresh(player.field, player.positions.field);\r\n        positioner.refresh(player.base, player.positions.base, true);      \r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect){\r\n        return cardHandler.play(player, card1, card2, zone, isShowingEffect);\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2, zone, breach){\r\n        cardHandler.attackCard(player, opponent, card1, card2, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static pair(player, card1, card2, isShowingEffect){\r\n        return global.pair(player, card1, card2, isShowingEffect);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"15%\",\"top\":\"-5px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:15%; top:-5px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=5a01d699&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5a01d699\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgRed2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card2.x, game.grid.centerMini.card2.y,\r\n            game.grid.centerMini.card2.width, game.grid.centerMini.card2.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgYellow absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.text.x, game.grid.centerMini.text.y,\r\n            game.grid.centerMini.text.width, game.grid.centerMini.text.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize20\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in []\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\">\r\n            {{ game.popup }}\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:2\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: false,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if(this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect(){\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height,\r\n                        rotation:0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card.moving) return;\r\n\r\n            // Gestion du touch ou de la souris\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=e920001e&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=e920001e&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e920001e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.delay) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if(duration === -1) \r\n            duration = global.delay;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-107.webp\": 66642,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize1em","textVerticalCenter","bgRed2","isPlayer1","style","getFieldStyle","grid","game","centerMini","card2","x","y","_e","text","textEffect","position","domProps","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","gameTask","static","list","tasks","forEach","task","push","find","isEqual","task1","task2","result","id","value","index","taskid","reverse","t","delay","_defineProperty","GameGundamEffect","trigger","player","card1","multiTriggers","onpair","onlink","effects","effect","includes","concat","effectsRemaining","length","nothing","toBeRemoved","stop","applyEffect","getEffectsRemaining","target","global","logEffect","JSON","stringify","shield","splice","location","positions","addTasks","taskCardToHand","taskTextToTrash","taskRefreshField","taskDeleteText","cardChoice","bottomCard","popup","cards","deck","getAndRemoveFirst","taskSelectCards","select","base","cancel","level","effectClone","clone","effect2","removeEndTurn","ap","hp","taskMove","locationHand","move","locationShield","locationField","refreshHandOpponent","taskPlayCard","zone","field","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","targets","hand","attribute","canAttack","apply","onplay","attackActiveEnnemy","immuneAp","lost","fx","log","join","locationEmpty","locationDeck","locationBase","locationResource","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnNotShown","zindex","addIn","from","getLocationArrayProperty","to","removeByIndex","active","exist","spawn","isShowingEffect","cardUnit","isCardUnit","cardPilot","isCardPilot","isLink","taskPairCardWithEffect","effectResult","handleEffects","pair","isPaired","getNextIndex","effectsRemainings","map","taskShowCards","taskCardToMiniCenter","taskCardToMiniCenter2","taskTextToMiniCenter2","degree","rotation","player1","player2","array","sort","Math","random","opponent","attacker","taskAttack","taskCardToTrash","taskDeleteCard","removeBase","taskCardToCenter","type","logs","texts","obj","Object","assign","positioner","border","border2","divide","widthB","heightB","boxbig","getCardSize","card6","center","x2","y2","min","createZone","x15","y8","y7","y9","y6","y10","y5","trash","y11","y4","locationTrash","resource","y12","y3","y13","x1","y0","x14","y1","show","p1","p2","useZoneSize","zoneHeight","cardSize","getCardPosition","getPairPosition","count","desiredWidth","desiredHeight","total","getXCenter","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","sizeWidth","gameManager","manager","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","playerId","taskShowTitle","taskDrawToCenter","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","playCard","getPlayerTurn","selectChoiceCard","refreshFieldAndHand","lastCard","taskDrawToHand","taskEndAnimation","getPlayer","cardPlayer","hidestat","attack","refreshOnlyTextEffect","taskPlayCardWithEffect","taskPairCard","spawnOrMove","cardHandler","max","isCostAvailable","cost","isTurnPlayer","noDropZone","playFromHand","sendCardBackToSquareOne","isSamePlayer","playCost","isCardBase","isCardCommand","command","moveCardToMiniCenterWithTextThenDeleteIt","getPlayerTurnOpponent","startAttackAnimation","end","setActive","burst","moveCardToCenterThenDeleteIt","battle","damage","activeBreach","dead","delayForTarget","message","alert","createDefaultBase","playerOpponent","isPlayer1Turn","removeOneTurnEffect","baseText","number","setSelectable","play","attackCard","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","moving","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}