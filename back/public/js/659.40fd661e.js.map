{"version":3,"file":"js/659.40fd661e.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\n        bgRed2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize20\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_vm._v(\" \"+_vm._s(_vm.game.textEffect?.text)+\" \")]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize12: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),_c('div',{staticClass:\"textVerticalCenter hide\",staticStyle:{\"z-index\":\"6\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"120px\"}},[_c('div',{staticClass:\"flex-wrap\",staticStyle:{\"background-color\":\"#FFFF00E0\",\"width\":\"80%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center m10px\"},[_vm._v(\"Titre\")]),_c('span',{staticClass:\"relative\"},_vm._l(([]),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):(choice.id)?_c('gameCard',{attrs:{\"card\":choice,\"folder\":\"Gundam/cards/\",\"shine\":true}}):_vm._e()],1)}),0)])]),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"2\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 1;\r\n    static taskShowTitle = 2;\r\n    static taskDrawToCenter = 3;\r\n    static taskDrawToHand = 4;\r\n    static taskEndAnimation = 5;\r\n    static taskCardToMiniCenter = 6;\r\n    static taskCardToMiniCenter2 = 7;\r\n    static taskTextToMiniCenter2 = 8;\r\n    static taskTextToTrash = 9;\r\n    static taskDeleteText = 10;\r\n    static taskCardToCenter = 11;\r\n    static taskCardToTrash = 12;\r\n    static taskDeleteCard = 13;\r\n    static taskAttack = 14;\r\n\r\n    static addTasks(list, tasks) {\r\n        tasks.forEach(task => {\r\n            //if (!this.alreadyInclude(list, task))\r\n            list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid){\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if(task)\r\n            delete(task.delay);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","/* eslint-disable */\r\nimport global from '../global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        effects = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n\r\n        effects.forEach(effect => {\r\n            if (result.stop) return;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                console.log('Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1) return;\r\n            global.spawn(player, null, global.locationShield, global.locationHand);\r\n            global.moveCardToMiniCenterWithTextThenBackToSquareOne(card1, 'Get one shield to hand');\r\n            return { stop: true }\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            /*let deckCards = [player.deck[0], player.deck[1]];\r\n            if (!card2) {\r\n                global.showPopupSelectHiddenCard(card1, \"which should go at the top deck ?\", deckCards);\r\n                return { stop: true }\r\n            }\r\n\r\n            deckCards = player.deck.splice(0, 2);\r\n            const bottomCard = deckCards.find(x => x.index !== card2.index);\r\n            player.deck = [card2].concat(player.deck).concat([bottomCard]);*/\r\n\r\n            global.log(`With ${card1.name}, move top 2 deck cards Above or bellow`);\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const cancel = shield.level < effect.value;\r\n            if (cancel)\r\n                global.log(`attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { cancel };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.log(`${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.log(`${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            global.spawnCard(player, card1, card1.location, global.locationHand);\r\n            global.log(`${card1.name} is send to hand`);\r\n            return { stop:true, cancel: true, refreshHandOpponent: true };\r\n        } \r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            global.move(player, card1, global.locationShield, global.locationField);\r\n            global.log(`${card1.name} is send to hand`);\r\n            return { stop:true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToBase') {            \r\n            player.base = [];\r\n            global.spawn(player, card1, global.locationShield, global.locationBase);\r\n            //global.moveCardToCenterThenBackToSquareOne(card1);\r\n            global.log(`${card1.name} is send to hand`);\r\n            this.apply(GameGundamEffect.onplay, player, card1, null);\r\n            return { stop:true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.log(`${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = global.getRes(player);\r\n            global.log(`${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.log(`${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.canAttack= false;\r\n            global.move(player, card, card.location, global.locationField);\r\n            global.log(`${card1.name} deploy ${card.name}`);\r\n            this.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemyLvXOrLower') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.log(`${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneApXIfBreach') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.log(`${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 0;\r\n    static locationDeck = 1;\r\n    static locationShield = 2;\r\n    static locationHand = 3;\r\n    static locationField = 4;\r\n    static locationBase = 5;\r\n    static locationTrash = 6;\r\n    static locationResource = 7;\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawn(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.spawnNotShown(player, card, locationFrom, locationTo);\r\n        cardSpawn.zindex = 11;\r\n        global.game.cards = global.addIn(global.game.cards, cardSpawn);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnNotShown(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card.index);\r\n\r\n        card.position = player.positions[from];\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        return card;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        player[from] = global.removeByIndex(player[from], card);\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, cardUnit, cardPilot) {\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n        effects.apply(effects.onpair, player, cardUnit, cardPilot);\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n            effects.apply(effects.onlink, player, cardUnit, cardPilot);\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Tasks \r\n    static startAttackAnimation(player, opponent, attacker, target) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card: attacker, isPlayer1: attacker.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay, card: target, isPlayer1: target.isPlayer1 },\r\n            { id: gameTask.taskAttack, player, opponent, attacker, target, delay }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterThenBackToSquareOne(card, card2) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay * 2, card: card2, isPlayer1: card2.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card2.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenBackToSquareOne(card, text) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenDeleteIt(card, text) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskCardToTrash, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card, removeBase = false) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskCardToTrash, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, removeBase, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenBackToSquareOne(card) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToTrashThenDeleteIt(card, removeBase = false) {\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToTrash, delay: 500, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, removeBase, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = {\r\n            x: grid.x2, y: grid.y2,\r\n            width: grid['x' + (divide - 2)] - grid.x2, height: grid['y' + (divide - 2)] - grid.y2, location: 0, zone: 'centerMini1'\r\n        };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize = false) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            card.to = this.getCardPosition(index, cards.length, position, cardSize, card);\r\n            card.location = position.location;\r\n            card.zindex= card.pair ? 2 : 1;\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getCardPosition(index, total, position, cardSize, card) {\r\n        const degree = card.active ? 0 : 90;\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: [] };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawn(global.game.player1, null, global.locationDeck, global.locationHand);\r\n            global.spawn(global.game.player2, null, global.locationDeck, global.locationHand);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskShowTitle, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: 500 }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        return game.manager.playCard(game, card1, card2, zone);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks.splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n            // const opponent = task.isPlayer1 ? game.player2 : game.player1;\r\n\r\n            if (task.id === gameTask.taskRefreshField) {\r\n                // this.endAnimation(game);\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToCenter) {\r\n                const card = global.spawn(player, null, global.locationDeck, global.locationHand);\r\n                card.to = global.grid.center;\r\n                global.game.lastCard = card;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToHand) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskShowTitle) {\r\n                game.showTitle = task.value;\r\n            }\r\n            \r\n            else if (task.id === gameTask.taskEndAnimation) {\r\n                this.endAnimation(game);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteCard) {\r\n                global.game.cards = global.removeByIndex(global.game.cards, task.card);\r\n                if (task.removeBase) {\r\n                    global.getPlayer(task.card.isPlayer1).base = [];\r\n                }\r\n                if(task.card.pair){\r\n                    global.game.cards = global.removeByIndex(global.game.cards, task.card.pair);\r\n                    delete(task.card.pair);\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter) {\r\n                task.card.to = global.grid.centerMini.card1;\r\n                task.card.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter2) {\r\n                if (task.card) {\r\n                    task.card.to = global.grid.centerMini.card2;\r\n                    task.card.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToCenter) {\r\n                task.card.to = global.grid.center;\r\n                task.card.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToTrash) {  \r\n                const cardPlayer = global.getPlayer(task.card.isPlayer1);              \r\n                game.manager.refreshFieldAndHand(cardPlayer);\r\n                task.card.to = global.clone(cardPlayer.positions.trash);\r\n                if(task.card.pair){\r\n                    task.card.pair.to = task.card.to;\r\n                    global.move(cardPlayer, task.card.pair, task.card.pair.location, global.locationTrash, true);\r\n                }\r\n                task.card.hidestat = true;\r\n                task.card.to.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskAttack) {\r\n                game.manager.attack(task.player, task.opponent, task.attacker, task.target);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToMiniCenter2) {\r\n                game.textEffect = {\r\n                    text: task.text,\r\n                    position: global.clone(global.grid.centerMini.card2)\r\n                };\r\n                game.textEffect.to = global.clone(game.textEffect.position);\r\n                game.textEffect.position.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToTrash) {\r\n                game.textEffect.position.height = global.grid.centerMini.card2.height;\r\n                game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteText) {\r\n                delete (game.textEffect);\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n\r\n            card.selectable = isCostAvailable;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone) {\r\n        const noDropZone = !card2 && !zone;\r\n        if (noDropZone || card1.isPlayer1 !== player.isPlayer1 || !card1.selectable) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (card1.location === global.locationHand)\r\n            this.playFromHand(player, card1, card2, zone);\r\n        else if (card1.location === global.locationField)\r\n            this.attack(player, card1, card2, zone);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer || zone.location == global.locationHand) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n        \r\n        const effectResult =effects.apply(effects.onplay, player, card1);\r\n        if(effectResult.stop){\r\n            return;\r\n        }\r\n\r\n        if (this.isCardUnit(card1)) {\r\n            card1.canAttack = false;\r\n            player.resourcesAvailable -= card1.cost;\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardPilot(card1) && card2 && this.isCardUnit(card2)) {\r\n            if (card2.pair) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            player.resourcesAvailable -= card1.cost;\r\n            global.pair(player, card2, card1);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardCommand(card1)) {\r\n            const effectResult =effects.apply(effects.command, player, card1);\r\n            if(effectResult.stop){\r\n                return;\r\n            }\r\n\r\n            global.move(player, card1, card1.location, global.locationTrash);\r\n            global.moveCardToMiniCenterWithTextThenDeleteIt(card1, 'giant effect');\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            if (card2.active) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            global.startAttackAnimation(player, opponent, card1, card2);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            global.startAttackAnimation(player, opponent, card1, target);\r\n            return;\r\n        } else {\r\n            global.setActive(card1, false);\r\n            \r\n            let card = opponent.shield[0];\r\n            const effectResult =effects.apply(effects.burst, opponent, card, card1);\r\n            if(effectResult.stop){\r\n                return;\r\n            }\r\n            \r\n            global.spawn(opponent, card, global.locationShield, global.locationTrash);\r\n            global.moveCardToCenterThenDeleteIt(card);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target) {\r\n\r\n        const effectResult =effects.apply(effects.battle, player, attacker);\r\n        if(effectResult.stop){\r\n            return;\r\n        }\r\n\r\n        const delay = 500;\r\n        let damage = attacker.ap;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        attacker.hp -= damage;\r\n\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            global.move(player, attacker, attacker.location, player.positions.trash.location, true);\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : 500;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay: delayForTarget, card: attacker, isPlayer1: attacker.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            global.move(opponent, target, target.location, opponent.positions.trash.location, true);\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay, card: target, isPlayer1: target.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        if (attacker.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card: attacker, isPlayer1: attacker.isPlayer1 });\r\n        if (target.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card: target, isPlayer1: target.isPlayer1 });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n        /*\r\n                if (!breach && global.isCardUnit(target) && card.breach && target.hp < 1) {\r\n                    result =this.attack(player, card, opponent.base ?? { text: 'shield' }, card.breach);\r\n                }\r\n        if (!breach) {\r\n            attack = breach ?? target.ap;\r\n            attack = card.immuneAp && card.immuneAp > attack ? 0 : attack;\r\n            card.hp -= attack;\r\n        }\r\n                    */\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.spawnNotShown(game.player1, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n            global.spawnNotShown(game.player2, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        playerOpponent.resourcesEx+=1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawn(player, card, global.locationBase, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        player.resourcesMax+=1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n        \r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand);\r\n        positioner.refresh(player.field, player.positions.field);\r\n        positioner.refresh(player.base, player.positions.base, true);      \r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone){     \r\n        const player = global.getPlayerTurn(); \r\n        cardHandler.play(player, card1, card2, zone);\r\n        return game;\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2){\r\n        cardHandler.attackCard(player, opponent, card1, card2);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\",staticStyle:{\"width\":\"35px\",\"height\":\"15px\",\"top\":\"-0px\",\"font-size\":\"12px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\"\r\n      style=\"width:35px; height:15px; top:-0px; font-size:12px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=4b139f02&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b139f02\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\r\n            bgRed2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize20\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            {{ game.textEffect?.text }}\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize12: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div class=\"textVerticalCenter hide\"\r\n            style=\"z-index:6; width:100%; height: 64px; position:fixed; top:0px; left:120px;\">\r\n\r\n            <div class=\"flex-wrap\" style=\"background-color: #FFFF00E0; width:80%; height:100%;\">\r\n                <h3 class=\"text-center m10px\">Titre</h3>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in []\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                        <gameCard v-else-if=\"choice.id\" :card=\"choice\" folder=\"Gundam/cards/\" :shine=\"true\">\r\n                        </gameCard>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:2\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: false,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = 490;\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : 500;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, 500);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card.moving) return;\r\n\r\n            // Gestion du touch ou de la souris\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=1b935918&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=1b935918&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b935918\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = 500) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = 500) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize12","textVerticalCenter","bgRed2","isPlayer1","style","getFieldStyle","grid","game","textEffect","position","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","choice","text","gameTask","static","list","tasks","forEach","task","push","find","x","isEqual","task1","task2","result","id","value","index","taskid","reverse","t","delay","_defineProperty","GameGundamEffect","trigger","player","card1","card2","multiTriggers","onpair","onlink","effects","effect","includes","concat","stop","applyEffect","target","console","log","JSON","stringify","shield","length","global","spawn","locationShield","locationHand","moveCardToMiniCenterWithTextThenBackToSquareOne","base","cancel","level","effectClone","clone","effect2","removeEndTurn","ap","hp","spawnCard","location","refreshHandOpponent","move","locationField","locationBase","apply","onplay","resourcesEx","resourcesAvailable","resAString","resourcesMax","getRes","breach","targets","hand","attribute","canAttack","attackActiveEnnemy","immuneAp","cards","lost","fx","join","locationEmpty","locationDeck","locationResource","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnNotShown","zindex","addIn","addTasks","taskRefreshField","from","getLocationArrayProperty","to","removeByIndex","splice","positions","active","cardUnit","cardPilot","pair","isPaired","isLink","getNextIndex","degree","rotation","player1","player2","array","sort","Math","random","opponent","attacker","taskCardToMiniCenter","taskCardToMiniCenter2","taskAttack","taskTextToMiniCenter2","taskTextToTrash","taskDeleteText","taskCardToTrash","taskDeleteCard","removeBase","taskCardToCenter","logs","obj","Object","assign","positioner","border","border2","divide","widthB","heightB","boxbig","field","getCardSize","center","centerMini","x2","y","y2","zone","createZone","x15","y8","y7","y9","y6","deck","y10","y5","trash","y11","y4","locationTrash","resource","y12","y3","y13","x1","y0","x14","y1","show","p1","p2","useZoneSize","zoneHeight","cardSize","getCardPosition","getPairPosition","count","desiredWidth","desiredHeight","total","getXCenter","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","sizeWidth","gameManager","manager","popup","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","createCard","sortRandom","empty","setup","createGame","nextTurn","playerId","taskShowTitle","taskDrawToCenter","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","playCard","refreshFieldAndHand","lastCard","taskDrawToHand","taskEndAnimation","getPlayer","cardPlayer","hidestat","attack","cardHandler","max","isCostAvailable","cost","noDropZone","playFromHand","sendCardBackToSquareOne","isSamePlayer","effectResult","isCardUnit","isCardPilot","isCardCommand","command","moveCardToMiniCenterWithTextThenDeleteIt","getPlayerTurnOpponent","startAttackAnimation","end","setActive","burst","moveCardToCenterThenDeleteIt","battle","damage","dead","delayForTarget","message","alert","type","createDefaultBase","playerOpponent","isPlayer1Turn","getPlayerTurn","removeOneTurnEffect","baseText","number","setSelectable","play","attackCard","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","_e","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","drop","setTimeout","setDrag","beginAnimation","animationTime","needToAnimateTextEffect","cardsToAnimate","animations","map","isIncrement","helperAnimation","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","moving","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","min","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}