{"version":3,"file":"js/355.9b68c569.js","mappings":"0IAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,UAAU,CAACJ,EAAIK,GAAIL,EAAIM,SAAS,SAASC,EAAMC,GAAO,OAAON,EAAG,MAAM,CAACO,IAAI,SAAWD,EAAME,MAAM,CAAEC,SAAU,EAAGC,YAAa,EAAGC,YAAaN,EAAMO,MAAOC,MAAO,CAAEC,IAAKT,EAAMU,EAAI,KAAMC,KAAMX,EAAMY,EAAI,KAAMC,MAAOb,EAAMa,MAAQ,KAAMC,OAAQd,EAAMc,OAAS,KAAM,UAAW,IAAMC,MAAM,CAAC,GAAK,SAAWd,GAAOe,GAAG,CAAC,UAAY,SAASC,GAAQ,OAAOxB,EAAIyB,KAAKlB,EAAM,EAAE,MAAQ,SAASiB,GAAQ,OAAOxB,EAAI0B,MAAM,QAASnB,EAAM,IAAI,IAAGL,EAAG,MAAM,CAACa,MAAO,CAAEY,QAAS3B,EAAI4B,OAAS,GAAK,SAAW,CAAC5B,EAAIK,GAAIL,EAAI6B,QAAQC,QAAOX,GAAKA,KAAI,SAASZ,EAAMC,GAAO,OAAON,EAAG,MAAM,CAACO,IAAI,SAAWD,GAAO,CAACN,EAAG,MAAM,CAACQ,MAAM,CAAEC,SAAU,EAAGC,YAAa,EAAGC,YAAab,EAAI+B,QAAUxB,EAAOyB,WAAYhC,EAAI+B,QAAUxB,GAAQQ,MAAO,CAAEC,IAAKT,EAAMU,EAAI,KAAMC,KAAMX,EAAMY,EAAI,KAAMC,MAAOb,EAAMa,MAAQ,KAAMC,OAAQd,EAAMc,OAAS,KAAM,UAAW,MAAQnB,EAAG,MAAM,CAACE,YAAY,uEAAuEW,MAAO,CAAEC,IAAKT,EAAMU,EAAI,KAAMC,KAAMX,EAAMY,EAAI,KAAMC,MAAOb,EAAMa,MAAQ,KAAMC,OAAQd,EAAMc,OAAS,KAAM,UAAW,KAAO,CAACnB,EAAG,MAAM,CAACF,EAAIiC,GAAGjC,EAAIkC,GAAG3B,EAAM4B,YAAY,IAAGjC,EAAG,MAAM,CAACa,MAAO,CAAE,iBAAkB,SAAW,CAACb,EAAG,MAAM,CAACE,YAAY,WAAWgC,YAAY,CAAC,IAAM,MAAM,KAAO,MAAM,MAAQ,MAAM,OAAS,OAAOd,MAAM,CAAC,GAAK,SAAWtB,EAAIqC,KAAK,CAACnC,EAAG,YAAY,CAACoB,MAAM,CAAC,MAAQtB,EAAIsC,UAAU,GAAGpC,EAAG,MAAM,CAACE,YAAY,WAAWgC,YAAY,CAAC,IAAM,MAAM,KAAO,MAAM,MAAQ,MAAM,OAAS,OAAOd,MAAM,CAAC,GAAK,SAAWtB,EAAIqC,KAAK,CAACnC,EAAG,YAAY,CAACoB,MAAM,CAAC,MAAQtB,EAAIsC,UAAU,MAAM,IAAI,EACnkD,EACIC,EAAkB,G,oBCFlBxC,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,SAAWpC,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,SAAWpC,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,SAAWpC,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,SAAWpC,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,SAAWpC,EAAG,MAAM,CAACE,YAAY,iBAAiBW,MAAO,CAAEC,IAAK,MAAOE,KAAM,MAAO,aAAc,aAAelB,EAAIsC,MAAO,cAAe,aAAetC,EAAIsC,UAC3hC,EACIC,EAAkB,GC+BtB,GACAC,KAAA,YACAC,MAAA,WCnCwP,I,UCQpPC,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAeA,EAAiB,QCmChC,GACAF,KAAA,kBACAC,MAAA,0BACAE,WAAA,CAAAC,SAAAA,GACAC,KAAAA,KAAA,CACAC,MAAA,KACAC,WAAA,GACAC,MAAA,CAAA7B,EAAA,EAAAF,EAAA,GACAqB,MAAA,MACAT,QAAA,GACAD,OAAA,KACAG,OAAA,OAEAkB,MAAA,CACA3C,UAAA,KAAA4C,cAAA,GAEAC,UACAC,OAAAC,iBAAA,iBAAAC,aACAF,OAAAC,iBAAA,eAAAE,SACAH,OAAAC,iBAAA,iBAAAC,aACAF,OAAAC,iBAAA,gBAAAE,SACA,KAAAL,cACA,EACAM,gBACAJ,OAAAK,oBAAA,iBAAAH,aACAF,OAAAK,oBAAA,eAAAF,SACAH,OAAAK,oBAAA,iBAAAH,aACAF,OAAAK,oBAAA,gBAAAF,QACA,EACAG,QAAA,CACAJ,YAAAK,GACA,MAAAC,EAAAD,GAAAA,EAAAE,SAAAF,EAAAE,QAAAC,OAAA,EAAAH,EAAAE,QAAA,MACA,KAAAb,MAAA7B,EAAAwC,EAAAI,QAAAJ,EAAAI,QAAAH,EAAAG,QACA,KAAAf,MAAA/B,EAAA0C,EAAAK,QAAAL,EAAAK,QAAAJ,EAAAI,QACA,KAAAC,iBACA,EACAf,eACA,KAAA5C,QAAA4D,SAAA,CAAA3D,EAAAC,KACA,MAAA2D,EAAAC,SAAAC,eAAA,SAAA7D,GACA2D,GAAAd,iBAAA,uBAAA5B,KAAAlB,IAAA,IAEA,KAAA+D,SACA,EACA7C,KAAAlB,GACA,KAAAgE,SAEA,KAAA3C,OAAArB,EACA,KAAAsB,QAAA,KAAAD,OAAAC,QACA,KAAAyC,UACA,EACAf,WACA,KAAA3B,SAAA,KAAAmB,YAAA,KAAAA,WAAAe,OAAA,QAAAS,SAEA,KAAA7C,MAAA,QAAAsB,MAAA,KAAAA,MAAApB,OAAA,KAAAA,OAAAG,OAAA,KAAAA,SACA,KAAAH,OAAA,KACA,EACA0C,UACA,KAAA1C,SAGA,KAAAqC,kBAEAO,IAAAA,gBAAA,KAAAzB,WAAA,KAAAD,MAAA,GACA2B,YAAA,KACA,KAAAH,SAAA,GACA,KAAAxB,MAAA,IACA,EACA4B,SAAAvD,EAAAF,EAAA0D,GACA,MAAAC,EAAAD,EAAAxD,EACA0D,EAAAF,EAAA1D,EACA6D,EAAAF,EAAAD,EAAAvD,MACA2D,EAAAF,EAAAF,EAAAtD,OACA,OAAAF,GAAAyD,GAAAzD,GAAA2D,GAAA7D,GAAA4D,GAAA5D,GAAA8D,CACA,EACAd,kBACA,SAAArC,OACA,SAEA,KAAAmB,YAAA,KAAAA,WAAAe,OAAA,KACA,KAAAf,WAAA,CACA,KAAAiC,gBAAA,cAAA3C,IAAA,GACA,KAAA2C,gBAAA,cAAA3C,IAAA,KAIA,KAAAN,OAAA,KAAAF,QAAAoD,MAAAN,GAAA,KAAAD,SAAA,KAAA1B,MAAA7B,EAAA,KAAA6B,MAAA/B,EAAA0D,KAEA,KAAArC,MAAA,KAAAP,OAAA,cACA,MAAAmD,EAAA,CAAA/D,EAAA,KAAAS,OAAAT,EAAA,KAAAS,OAAAR,MAAA,EAAAH,EAAA,KAAAW,OAAAX,EAAA,KAAAW,OAAAP,OAAA,GACA8D,EAAA,KAAApD,OACA,CAAAZ,EAAA,KAAAY,OAAAZ,EAAA,KAAAY,OAAAX,MAAA,EAAAH,EAAA,KAAAc,OAAAd,EAAA,KAAAc,OAAAV,OAAA,GADA,KAAA2B,MAGA,KAAAD,WAAAmB,SAAAkB,IACA,MAAAC,EAAA,KAAAC,YAAAJ,EAAAC,GAAA,IACA/D,GAAA,KAAAW,OAAA,IACAwD,EAAAnE,EAAA,EACAgE,EAAAF,KAAA/D,EAAA+D,EAAA/D,EACAiE,EAAAF,KAAAjE,EAAAiE,EAAAjE,EACAmE,EAAAF,KAAAG,SAAAA,EACAD,EAAAI,GAAAH,SAAAA,EACAD,EAAAI,GAAArE,EAAAgE,EAAAhE,EACAiE,EAAAI,GAAAvE,EAAAkE,EAAAlE,EACAmE,EAAAK,IAAAtE,EAAAiE,EAAAF,KAAA/D,GAAAiE,EAAAI,GAAArE,EAAAiE,EAAAF,KAAA/D,GAAA,EAAAoE,EACAH,EAAAK,IAAAxE,EAAAmE,EAAAF,KAAAjE,GAAAmE,EAAAI,GAAAvE,EAAAmE,EAAAF,KAAAjE,GAAA,EAAAsE,CAAA,GAEA,EACAP,gBAAA3C,EAAAS,GACA,MAAA1B,GAAA,KAAAW,OAAA,IACAmD,EAAA,CACAQ,QAAA,EACAtE,MAAA,EACAC,OAAA,GAEAoE,EAAA,CACAC,QAAA,EACAtE,QACAC,OAAAD,GAGAoE,EAAA,CACAE,QAAA,EACAtE,MAAA,EACAC,OAAA,GAEA,OAAAgB,KAAA6C,OAAAO,MAAAD,KAAA1C,QAAA6C,aAAA,EACA,EACAL,YAAA1D,EAAAG,GACA,MAAA6D,EAAAC,KAAAC,MAAA/D,EAAAd,EAAAW,EAAAX,EAAAc,EAAAZ,EAAAS,EAAAT,GACA,OAAAyE,GAAA,IAAAC,KAAAE,GACA,ICvL6P,ICQzP,GAAY,OACd,EACAhG,EACAwC,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,O,qFCnBYrC,EAAOC,WAAS,MAAU,KAAOM,EAAIT,EAAIgG,MAAAA,G,OAAS5F,EAAAA,MAAY,CAA0BgC,IAAAA,EAAAA,S,YAAsB,0BAAQ,aAAKpC,OAAQ,WAAiDe,CAAAA,EAAK,KAAMkF,EAAAA,OAAAA,CAAAA,EAAiBjG,MAAIkG,CAAyB,YAAU,cAAC9F,MAAAA,EAAW,iBAAc,2BAACW,EAAK,MAAMkF,CAA+C,YAAU,cAAC7F,MAAAA,EAAW,iBAAe,4BAACW,EAAK,MAAMkF,CAA8C,YAAU,eAAC7F,MAAAA,EAAW,iBAAC,YAAyB,eAACW,EAAK,MAAMkF,CAA4C,YAAU,0BAAC7F,MAAAA,EAAW,iBAAC,yBAAwDW,EAAK,MAAE,C,YAASkF,wD,MAA2CE,IAA4B,0CAAKnG,UAAO,mBAAyFsB,CAAAA,EAAK,GAAC,kC,MAAC,mBAAoB8E,EAAQC,KAAAA,KAAAA,W,MAAkD,CAAsC,SAAW,EAACH,KAAKE,QAAQE,mBAAY,2BAAC,OAAU,EAACtG,KAAIkG,QAAKK,YAA0D,MAAQ,EAAI,KAAK,QAAQ,aAAa,SAAW,EAACL,KAAKK,QAAQD,mBAAY,2BAAC,OAAS,EAACJ,KAAKI,QAAAA,YAAa,MAAQtG,EAAIkG,KAAKM,QAAKC,aAAe,wBAAIvG,MAAG,OAAY,wBAAwBa,EAAK,YAAMkF,CAA6C3E,YAAM,W,MAAC,EAAO,iBAAM,yB,MAAC,CAAsC,KAAOtB,OAAyB,kCAAIE,KAAG,OAAY,oBAAwBa,EAAK,YAAMkF,CAA8C3E,YAAM,W,MAAC,EAAO,iBAAO,0B,MAAC,CAAuC,KAAOtB,QAA2B,mCAAG,KAAC,0B,GAA0B,CAA2C,kBAAC,sCAAIE,KAAuCa,EAAK,YAAMkF,CAA6C3E,YAAM,W,MAAC,EAAO,iBAAM,yB,MAAC,CAAgC,YAAIpB,KAAG,OAAY,oBAAwBa,EAAK,YAAMkF,CAA+C3E,YAAM,W,MAAC,EAAO,iBAAQ,2B,MAAC,CAAwC,KAAOtB,SAA2B,oCAAKA,KAAQ,EAAEE,KAAG,QAAM,cAAsCa,EAAK,KAAMkF,EAAAA,MAAAA,CAA8C,YAAWjG,yBAAoBI,MAAAA,EAAW,iBAAC,OAAqB,oBAACW,EAAOf,KAAIiG,EAAAA,KAAAA,EAAgB,MAAKC,CAA0B,YAAUhG,sBAAgBE,MAAAA,EAAW,iBAAW,4BAACW,EAAOf,KAAIiG,EAAAA,YAAiBjG,CAA4BsB,YAAM,W,MAAC,EAAO,iBAAM,yB,MAAC,CAAsC,KAAOtB,OAAyB,kCAAIE,KAAG,OAAY,oBAAwBa,EAAK,YAAMkF,CAA8C3E,YAAM,W,MAAC,EAAO,iBAAO,0B,MAAC,CAAuC,KAAOtB,QAA2B,mCAAG,KAAC,0B,GAA0B,CAA4C,kBAAC,sCAAIE,KAAuCa,EAAK,YAAMkF,CAA6C3E,YAAM,W,MAAC,EAAO,iBAAM,yB,MAAC,CAAgC,YAAIpB,KAAG,OAAY,oBAAwBa,EAAK,YAAMkF,CAA+C3E,YAAM,W,MAAC,EAAO,iBAAQ,2B,MAAC,CAAwC,KAAOtB,SAA2B,oCAAIE,KAAQ,EAAC,2BAAmCa,EAAK,MAAMkF,CAA8C,YAAU,sBAAC7F,MAAAA,EAAW,iBAAC,OAAwB,oBAACW,EAAK,MAAMkF,CAA+C,YAAU,yBAAC7F,MAAAA,EAAW,iBAAC,4BAA6CW,EAAK,MAAMkF,CAA8C,YAAY,6CAAEvF,MAAM,8C,CAAEgG,EAAE,IAAM,C,MAAO,CAA8CC,IAAAA,EAAaC,OAAO,oCAAM,SAACxE,OAAAA,GAA8B,YAAC,CAACd,YAAM,OAAkB,MAAC,CAAG,OAAC,UAAsB,IAAIpB,MAAS,EAAEF,YAAmHe,CAAAA,EAAK,OAAMkF,CAAAA,EAAAA,GAAAA,OAAiBjG,EAAIkG,MAAKM,EAAKK,GAAAA,eAAa,YAAG,YAAY,6CAAEnG,MAAM,+C,CAAEgG,EAAE,IAAM,C,MAAO,CAAeC,IAAAA,EAAaC,OAAO,SAAM,SAACxE,OAAAA,GAA8B,YAAC,CAACd,YAAM,OAAkB,MAAC,CAAG,OAAC,UAAqB,IAAKtB,MAASwG,EAAI,WAAgKzF,CAAAA,EAAK,KAAMkF,KAAAA,cAAiBjG,MAASwG,GAAKM,EAAAA,OAAS,2EAACC,YAAS,2B,MAAC,mBAAuBb,EAAKc,KAAI,cAAC,UAAIhH,UAAYkG,EAAKe,GAAAA,EAAAA,KAAW,SAA0CxG,EAAG,GAAC,OAAU,WAAQ,c,OAAM,EAAC,O,IAAEE,WAAW,E,MAAOuG,CAAoBR,SAAKQ,EAAoB,gBAACnG,IAAOf,EAAIiG,WAAgC/F,MAAG,EAAM,qB,IAAmCa,EAAK,MAAMkF,CAA2C,YAAU,sBAAC7F,MAAAA,EAAW,iBAAC,OAAwB,iBAACW,EAAK,MAAMkF,CAAsD,YAAU,yBAAC7F,MAAAA,EAAW,iBAAC,OAAwB,4BAACW,EAAK,MAAMkF,CAAoD,YAAU,yBAAC7F,MAAAA,EAAW,iBAAC,OAAqB,0BAACW,EAAK,MAAMkF,CAAqD,YAAakB,sBAA2C,MAAOjH,EAAG,iBAAM,kCAACO,EAAG,GAAC,EAAM2G,MAAK5G,QAAAA,IAAAA,EAAAA,QAAAA,SAAAA,GAAK,OAAM,QAAU,CAAEc,IAAK,IAAC,S,CAAC,aAAW8F,C,MAAW,CAAY,OAAS,QAAgB,KAAO,EAAgC,OAAU,gBAAe,8BAAG,SAAC,Y,GAA0B,CAAyB,kBAAC,oBAAI,MAAwChH,E,IAA8BW,EAAK,KAAE,sB,YAASkF,kB,MAAyC,IAA4E,wCAAMjG,UAASqH,EAAAA,KAAAA,aAAuB,OAAM,gCAAgCtG,CAAAA,EAAK,KAAE,4B,YAASkF,mB,MAA+CE,IAA4B,mBAAa,2BAAEmB,UAAQ,gBAAiB,aAAI,OAAQ,oBAA8DlF,EAAAA,KAAY,S,YAAC,sC,YAA0B,CAA2B,iBAAS,SAAgB,2BAAIlC,OAAS,mBAAiC,CAACF,EAAG,MAAO,CAA+EI,YAAY,oBAA2BgC,CAAAA,EAAAA,GAAAA,EAAY,6DAAyL,OAAzL,S,YAAC,2BAAuB,aAAIlC,aAAW,aAAyBqB,CAAE,EAAC,K,YAASvB,YAAY,IAAIA,MAAO,EAAM,W,CAAwE,EAAI,GAAC,WAAG,8C,MAAC,CAAsB,OAAsB,QAASA,EAAIuE,QAA0B,kBAAG,OAAC,yB,GAAsB,CAAqB,iBAAKvE,MAAS,EAAGA,aAAkEoC,EAAAA,MAAY,sB,YAAO,4B,YAAgB,CAAO,UAAoB,eAA0B,SAAU,SAAI,0BAAIlC,UAAS,OAAyBkC,CAAAA,EAAAA,MAAW,C,YAAE,YAAkB,aAAIlC,aAAS,SAAuBA,EAAG,MAAM,CAACE,YAAY,SAAuBgC,CAAAA,EAAAA,MAAW,C,YAAE,uBAA0B,aAAIlC,kBAAW,WAAqBkC,CAAAA,EAAAA,EAAAA,EAAW,C,YAAE,QAA8B,YAAC,CAAG,mBAAC,a,GAA0B,CAAiC,kBAAC,4BAAKpC,I,CAA8JS,EAAG,UAAYD,EAAAA,OAAAA,CAAAA,EAAAA,GAAAA,gBAAAA,EAAAA,OAAAA,CAAAA,EAAAA,GAAAA,kBAAAA,EAAAA,GAAAA,EAAAA,MAAAA,MAAAA,SAAAA,SAAAA,EAAAA,GAAK,OAAI+G,EAAM,MAAK,CAAcnH,IAAAA,SAAY,GAAQmB,CAAE,EAAC,Y,YAAS,Q,GAAiB,CAA+B,kBAAC,wBAAIvB,IAAqFoC,CAAAA,EAAAA,GAAW,IAAC,8B,KAAC,iBAAmB,QAAW,C,YAAS,CAAO,mBAAa,YAAM,aAAIlC,aAAQ,SAAqE6G,CAAAA,EAAAA,KAAS,C,YAAY,wDAA6B,UAAK/G,UAAUwH,EAAML,GAAAA,EAAK,MAAQjB,MAAMsB,SAAmFxH,EAAIK,MAAQ6F,MAAMsB,OAAML,EAAO,YAASC,MAAK5G,OAAM,WAAC,YAAU,qC,EAAU,GAAC,QAAW,MAAGA,OAAK,c,OAACJ,EAAAA,MAAY,CAAmBW,IAAK,YAAE,E,YAAamF,mBAAiC,OAAKhG,MAAG,EAAM,iCAAuC,CAACF,EAAG,MAAO,CAA4Ee,YAAO,0B,CAAEK,EAAAA,GAAOpB,EAAIkG,GAAAA,EAAMM,UAAapF,KAAQ,EAAI,wC,MAAE,CAA2B+E,MAAAA,EAAW,WAAS,QAAQsB,MAAUpC,KAAyB,yBAAC/D,UAAM,yCAA4D,MAAC,CAAG,IAAC,6B,GAA0B,CAAiC,kBAAC,4BAAK,M,IAA2IP,GAAO,yC,YAC1hQkF,qE,MAA0C,IAAe5E,EAAM,iBAAE,sBAC1E,aAACC,OAAM,GAAqB,OAAIpB,GAAG,kB,CAAiB,SAA4B,UAAK,UAAUA,EAAG,KAAM,WAA0C,EAAE,c,YAAa,wB,MAAO,CAAUmB,IAAAA,OAAe,aAAgB,aAACC,UAAM,IAAsB,OAAIpB,GAAG,mBAA+B,CAACA,EAAG,MAAM,CAACE,YAAY,YAAmCgC,CAAAA,EAAAA,MAAW,C,YAAQ,mCAAM,aAAIpC,IAAOA,S,CAAyD,OAAU,qCAAI,YAAC,CAACsB,UAAM,M,MAAmB,CAAsB,gBAAyB,kBAAG,OAAC,iB,GAA0B,CAAyB,kBAAC,uBAAIpB,KAAiCkC,EAAAA,MAAW,C,YAAQ,W,YAAa,CAAK,UAAI,KAAG,UAElpBG,EAEJ,E,yDCNA,MAAMmF,EAeFC,kCAAkCR,EAAOS,GACrC,IAAIC,GAAmB,EAKvB,OAJAV,EAAMjD,SAAQ4D,IACV,MAAMC,EAAS9H,KAAK+H,6BAA6BF,EAAOF,GACxDC,EAAmBA,GAAoBE,EAAOF,gBAAgB,IAE3DA,CACX,CAEAF,oCAAoCG,EAAOF,GACvC,MAAMG,EAAS,CAAEF,kBAAkB,GAC7BI,EAAUhI,KAAKiI,WAAWJ,EAAOF,GACvC,OAAKK,GAAWA,EAAQnE,OAAS,IAGjCiE,EAAOF,kBAAmB,EAC1BE,EAAOI,kBAAoBlI,KAAKmI,qBAAqBH,GACrDhI,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAKqI,gBAAgB9F,KAAMsF,QAAOF,aAJ/CG,CAOf,CAEAJ,oCAAoCG,EAAOS,EAAOX,GAC9C,MAAMY,EAAwBvI,KAAKiI,WAAWJ,EAAOF,GAC/Ca,EAAwBxI,KAAKiI,WAAWK,EAAOX,GACrD,IAAKY,IAA0BC,EAC3B,OAAO,EAEX,MAAMC,EAAQ,GASd,OAPIF,GACAE,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKqI,gBAAgB9F,KAAMsF,QAAOc,SAAUd,EAAOe,UAAWN,EAAOX,YAEtFa,GACAC,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKqI,gBAAgB9F,KAAMsF,MAAOS,EAAOK,SAAUd,EAAOe,UAAWN,EAAOX,YAEjG3H,KAAK6I,cAAcJ,GACZA,EAAM5E,OAAS,CAC1B,CAEA6D,kBAAkBP,EAAMQ,EAASmB,GAC7B,IAAIhB,EAAS,GACb,OAAKX,GAASA,EAAKa,SAGnBF,EAASX,EAAKa,QAAQnG,QAAOb,GAAKA,EAAE2G,UAAYA,IAASoB,KAAIC,IAAe,IAAKA,EAAI7B,YAEhF2B,GAAc3B,EAAK8B,MAAQ9B,EAAK8B,KAAKjB,UACtCF,EAASA,EAAOoB,OAAO/B,EAAK8B,KAAKjB,QAAQnG,QAAOb,GAAKA,EAAE2G,UAAYA,IAASoB,KAAIC,IAAe,IAAKA,EAAI7B,KAAMA,EAAK8B,WAEhHnB,GAPIA,CAQf,CAEAJ,4BAA4BM,GACxB,MAAMmB,EAA+B,CAACnJ,KAAKoJ,WAAW7G,KAAMvC,KAAKqJ,OAAO9G,MACxE,QAAOyF,EAAQhD,MAAKsE,GAAUH,EAA6BI,SAASD,EAAOlH,KAC/E,CAEAsF,uBAAuBzB,EAAMuD,GACzB,IAAKA,EAAK3B,MACN,OAEJ,MAAMG,EAAUhI,KAAKiI,WAAWuB,EAAK3B,MAAO2B,EAAK7B,SAAS,GAC1D,GAAIK,EAAQnE,OAAS,EAAG,CACpB,MAAM3B,EAAO8F,EAAQe,KAAIC,GAAMhJ,KAAKyJ,cAAcT,KAAKU,KAAK,QAC5D,IAAIjB,EAAQ,GACRkB,EAAa,GACjB,MAAM9I,EAAOmH,EAAQnG,QAAOmH,IAAOA,EAAGY,OAAM/F,OAAS,EAEjDhD,GACA4H,EAAMC,KAAK,IAAKc,EAAMpH,GAAIpC,KAAK6J,gBAAgBtH,KAAML,OAAMW,MAAiB,EAAX7C,KAAK6C,QAE1E4F,EAAQA,EAAMS,OAAOlB,EAAQe,KAAIO,IAAmB,IAAKE,EAAMpH,GAAIpC,KAAK8J,YAAYvH,KAAM+G,cAC1FK,EAAalB,EAAM5G,QAAOX,GAAKA,EAAEoI,QAAUpI,EAAEoI,OAAOzG,QACpD4F,EAAQA,EAAM5G,QAAOX,IAAMA,EAAEoI,SAAWpI,EAAEoI,OAAOzG,QAE7C4F,EAAM5E,OAAS,GAAG7D,KAAK6I,cAAcJ,GACrCkB,EAAW9F,OAAS,GAAG7D,KAAK+J,SAASJ,EAC7C,CAEIH,EAAK3B,MAAMoB,MACXjJ,KAAKqI,gBAAgBpC,EAAM,IAAKuD,EAAM3B,MAAO2B,EAAK3B,MAAMoB,MAChE,CAEAvB,qBAAqB4B,GACjB,IAAIxB,EAAS,CAACwB,EAAOlH,IAAI4H,WAAYV,EAAOW,OAAOD,WAAYV,EAAOxH,QAAQkI,WAAYV,EAAOY,SAASF,YAU1G,OATIV,EAAOa,IACPrC,EAAOY,KAAK,MAAQY,EAAOa,IAE3Bb,EAAOc,IACPtC,EAAOY,KAAK,MAAQY,EAAOa,IAE3Bb,EAAOtB,UACPF,EAASA,EAAOoB,OAAOI,EAAOtB,QAAQe,KAAI7H,GAAKlB,KAAKyJ,cAAcvI,KAAIwI,KAAK,QAExE5B,EAAOiB,KAAI7H,GAAIA,GAAGmJ,QAAQ,cAAe,MAAKxI,QAAOX,GAAKA,GAAKA,EAAE2C,OAAS,IAAG6F,KAAK,IAC7F,CAEAhC,2BAA2BzB,GACvBA,EAAKqE,UAAYrE,EAAKqE,UAAUzI,QAAOX,IAAMA,EAAEqJ,gBAC/C,MAAMC,EAAU,CAACvE,EAAKE,QAASF,EAAKK,SACpCkE,EAAQvG,SAAQwG,IACZA,EAAOH,UAAYG,EAAOH,UAAUzI,QAAOX,IAAMA,EAAEqJ,gBACnDE,EAAOC,MAAMzG,SAAQkD,IACjBA,EAAKmD,UAAYnD,EAAKmD,UAAUzI,QAAOX,IAAMA,EAAEqJ,gBAC/CvK,KAAK2K,gBAAgB1E,EAAMwE,EAAQtD,EAAK,GAC1C,IAGNlB,EAAKiB,MAAMrF,QAAOX,GAAKA,EAAEqJ,gBAAetG,SAAQkD,IAC5C,MAAMyD,EAAO,GACbzD,EAAKoD,cAActG,SAAQ+E,WAChB7B,EAAK6B,EAAG5G,IACfwI,EAAKlC,KAAKM,EAAG5G,GAAG,IAEpB+E,EAAKoD,cAAgB,GACrBvK,KAAK6K,IAAK,GAAE1D,EAAK5E,aAAaqI,EAAKlB,KAAK,QAAQ,GAExD,CAEAhC,mBAAmBzB,EAAMuD,EAAMiB,EAAQK,GACnC,MAAMC,EAAe/K,KAAKgL,mBAAmB/E,EAAMuD,EAAMiB,EAAQK,GACjE,GAAIC,EAAaE,MAAQF,EAAaG,IAClC,OAAOH,EAEX,IAAK/K,KAAKmL,wBAAwBlF,EAAMuD,EAAMiB,EAAQK,GAClD,MAAO,CAAC,EAEZ,GAAItB,EAAKF,OAAO8B,KAAM,CAClB,GAAIX,EAAOrE,mBAAqBoD,EAAKF,OAAO8B,KAExC,OADApL,KAAK6K,IAAK,cAAarB,EAAKF,OAAOnC,KAAK5E,uCAAuCiH,EAAKF,OAAO8B,QACpF,CAAC,EAGZpL,KAAKqL,aAAaZ,EAAQjB,EAAKF,OAAO8B,KAC1C,CAaA,OAXI5B,EAAKF,OAAOgC,UACZ9B,EAAKlB,MAAMiC,cAAiBf,EAAKlB,MAAMiC,cACjCf,EAAKlB,MAAMiC,cAAcrB,OAAO,CAACM,EAAKF,SADW,CAACE,EAAKF,SAGjEE,EAAK+B,2BAA6BvL,KAAKuL,2BAA2BtF,EAAMuD,EAAMiB,EAAQK,GAClFtB,EAAKlB,QACLkB,EAAKlB,MAAMU,GAAKQ,EAAK+B,4BAErB/B,EAAKF,OAAOkC,MACZxL,KAAKyL,UAAUxF,EAAMuD,EAAKF,OAAOnC,MAAM,GAEpCnH,KAAKwJ,EAAKF,OAAOlH,IAAI6D,EAAMuD,EAAMiB,EAAQK,EACpD,GACHY,EAAAA,EAAAA,GArKKjE,EAAc,iBACQ,WAAQiE,EAAAA,EAAAA,GAD9BjE,EAAc,iBAEQ,WAAQiE,EAAAA,EAAAA,GAF9BjE,EAAc,iBAGQ,WAAQiE,EAAAA,EAAAA,GAH9BjE,EAAc,kBAIS,YAASiE,EAAAA,EAAAA,GAJhCjE,EAAc,iBAKQ,WAAQiE,EAAAA,EAAAA,GAL9BjE,EAAc,gBAMO,UAAOiE,EAAAA,EAAAA,GAN5BjE,EAAc,kBAOS,YAASiE,EAAAA,EAAAA,GAPhCjE,EAAc,iBAQQ,WAAQiE,EAAAA,EAAAA,GAR9BjE,EAAc,sBASa,gBAAaiE,EAAAA,EAAAA,GATxCjE,EAAc,cAUK,QAAKiE,EAAAA,EAAAA,GAVxBjE,EAAc,eAWM,SAAMiE,EAAAA,EAAAA,GAX1BjE,EAAc,cAYK,QAAKiE,EAAAA,EAAAA,GAZxBjE,EAAc,eAaM,QA2J1B,QCxKA,MAAMkE,EAEFjE,0BAA0BzB,EAAMuD,EAAMiB,EAAQK,GAC1C,GAAItB,EAAKF,OAAOxH,OAAQ,CACpB,GAAI0H,EAAKlC,OACL,MAAO,CAAE4D,KAAK,GACb,IAAK1B,EAAKoC,WACX,OAAO5L,KAAK6L,iBAAiB5F,EAAMuD,EAAMiB,EAAQK,GAEjDtB,EAAKlB,MAAQkB,EAAKoC,UAC1B,CAWA,OATKpC,EAAKlB,OAASkB,EAAKF,OAAOnC,KAAK2E,aAChCtC,EAAKb,SAAW1C,EAAKiB,MAAMlC,MAAK9D,GAAKA,EAAEX,QAAUiJ,EAAKF,OAAOnC,KAAK2E,eAEjEtC,EAAKlB,OAASkB,EAAKb,WACpBa,EAAKlB,MAAQkB,EAAKb,UAEjBa,EAAKlB,QACNkB,EAAKlB,MAAQkB,EAAKF,OAAOnC,MAEtB,CAAC,CACZ,CAEAO,wBAAwBzB,EAAMuD,EAAMiB,EAAQK,GACxC,IAAI5D,EAAQ,GACZ,GAA2B,6BAAvBsC,EAAKF,OAAOxH,OACZoF,EAAQ4D,EAASJ,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,IAAMA,EAAEkJ,GAAKZ,EAAKF,OAAOW,aAE3E,GAA2B,mCAAvBT,EAAKF,OAAOxH,OACjBoF,EAAQ4D,EAASJ,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,IAAMA,EAAEkJ,GAAKZ,EAAKF,OAAOW,OAAS/I,EAAE8K,cAEtF,GAA2B,uBAAvBxC,EAAKF,OAAOxH,OACjBoF,EAAQ4D,EAASJ,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,KAAOA,EAAE8K,cAE3D,GAA2B,iBAAvBxC,EAAKF,OAAOxH,OACjBoF,EAAQ4D,EAASJ,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,UAElD,GAA2B,eAAvBsI,EAAKF,OAAOxH,OACjBoF,EAAQuD,EAAOC,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,UAEhD,GAA2B,sBAAvBsI,EAAKF,OAAOxH,OACjBoF,EAAQuD,EAAOC,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,IAAMlB,KAAKiM,WAAW/K,UAEtE,GAA2B,mBAAvBsI,EAAKF,OAAOxH,OACjBoF,EAAQuD,EAAOyB,KAAKrK,QAAOX,GAAKA,EAAEkB,KAAOoH,EAAKF,OAAO6C,gBAEpD,GAA2B,4BAAvB3C,EAAKF,OAAOxH,OACjBoF,EAAQuD,EAAOC,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,IAAMA,EAAEkL,UAAU7C,SAASC,EAAKF,OAAO+C,wBAEvF,GAA2B,yBAAvB7C,EAAKF,OAAOxH,OACjBoF,EAAQuD,EAAOC,MAAM7I,QAAOX,GAAKlB,KAAK+L,WAAW7K,IAAMlB,KAAKsM,UAAUpL,EAAGsI,EAAKF,OAAOA,eAEpF,GAA2B,SAAvBE,EAAKF,OAAOxH,OACjB,MAAM,IAAIyK,MAAM,0CAEpB,GAAIrF,EAAMrD,OAAS,EAEf,OADA7D,KAAK6K,IAAK,cAAarB,EAAKF,OAAOnC,KAAK5E,SAASiH,EAAKF,OAAOlH,4CACtD,CAAE8I,KAAK,GAGlB,MAAMsB,EAAU,GAYhB,OAXIhD,EAAKF,OAAOmD,UACZD,EAAQ9D,KAAK,CAAExG,KAAM,SAEzBlC,KAAKiG,KAAKwC,MAAQ,CAAC,CACfrG,GAAIpC,KAAKuH,MAAMhF,KACfmK,UAAWjC,EAAOiC,UAClBlD,OACAtH,KAAM,0BACNsK,UACAtF,UACDgC,OAAOlJ,KAAKiG,KAAKwC,OACb,CAAEwC,MAAM,EACnB,EAIJ,QC5EA,MAAM0B,EACFjF,6BAA6BzB,EAAMkB,EAAM6E,GAChC7E,GAASA,EAAKa,SAAYb,EAAKa,QAAQhD,MAAK9D,GAAKA,EAAEyG,SAAW3H,KAAK4M,iBAIpE3G,EAAK+B,QADLgE,EACe/F,EAAK+B,QAAQkB,OAAO/B,EAAKa,QAAQnG,QAAOmH,GAAMA,EAAGrB,UAAY3H,KAAK4M,eAAc7D,KAAIC,IAAe,IAAKA,EAAI7B,OAAM5G,MAAO4G,EAAK5G,WAE9H0F,EAAK+B,QAAQnG,QAAOX,GAAKA,EAAEX,QAAU4G,EAAK5G,QAE7DP,KAAK6M,yBAAyB5G,GAClC,CAEAyB,gCAAgCzB,GAC5BA,EAAKE,QAAQ2G,WAAa7G,EAAK+B,QAAQnG,QAAOmH,IAA4B,IAAtBA,EAAG7B,KAAKuF,YAAoB7I,OAAS,EACzFoC,EAAKK,QAAQwG,WAAa7G,EAAK+B,QAAQnG,QAAOmH,IAA4B,IAAtBA,EAAG7B,KAAKuF,YAAqB7I,OAAS,CAC9F,CAEA6D,2BAA2BzB,EAAMuD,GAC7B,OAAKA,EAKDA,EAAKlC,OACE,CAAC,EAEPkC,EAAKoC,WAYH5L,KAAK+H,6BAA6ByB,EAAKoC,WAAY5L,KAAK4M,eAX3D5M,KAAKoI,aAAa,CACdhG,GAAIpC,KAAKuH,MAAMhF,KACfL,KAAO,wBACPgF,MAAOjB,EAAK+B,QAAQnG,QAAOX,GAAKA,EAAEiG,KAAKuF,YAAW3D,KAAI7H,GAAKA,EAAEiG,OAC7DqC,OAAMkD,WAAW,EACjBF,QAAS,CAAC,CAAEtK,KAAM,aAEf,CAAE+I,MAAM,KAffjL,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAK+M,oBAAoBxK,OAC1C0D,EAmBf,EAIJ,QC9CA,MAAM+G,EAYFtF,kBAAkBuF,EAAaC,GAC3B,MAAM3G,EAAO,CAEbA,OAAc,GACdA,EAAK4G,QAAwB,EAAd5G,EAAKc,OACpBd,EAAKpF,MAAQ8L,EACb1G,EAAKnF,OAAS8L,EACd3G,EAAK6G,YAAc7G,EAAKpF,MAAuB,EAAdoF,EAAKc,OACtCd,EAAK8G,aAAe9G,EAAKnF,OAAU,EAAImF,EAAKc,OAC5Cd,EAAK+G,WAAa/G,EAAKnF,OAAwB,EAAdmF,EAAKc,QAAe,IACrDd,EAAKgH,SAA4B,IAAjBhH,EAAK+G,UAAkB,IAEvC/G,EAAKiH,WAAajH,EAAKnF,OAASmF,EAAKpF,MAEjCoF,EAAKgH,SAAWhH,EAAK6G,YAAc,IACnC7G,EAAKgH,SAAWhH,EAAK6G,YAAc,GACvC7G,EAAKkH,QAAU,CAAEtM,MAAOoF,EAAKgH,SAAUnM,OAAQmF,EAAK+G,WAGpD,IAAIpM,EAAIqF,EAAKc,OAAQrG,EAAIuF,EAAKc,OAC1BlG,EAAQoF,EAAK6G,YAAc,EAAI7G,EAAK4G,QAAS/L,EAASmF,EAAK+G,UAAY,EAwE3E,OAvEA/G,EAAKmH,YAAc,CAAExM,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAOiB,SAAU3N,KAAK4N,cAC3E5M,GAAKuF,EAAKc,OAASjG,EAGnBD,EAAQoF,EAAK6G,YAAc7G,EAAKc,OAASd,EAAKgH,SAC9CnM,EAA0B,IAAjBmF,EAAK+G,UACd/G,EAAKsH,aAAe,CAAE3M,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAOiB,SAAU3N,KAAK8N,eAC5E9M,GAAKuF,EAAKc,OAASjG,EAGnBF,EAAIqF,EAAKc,OACTd,EAAKwH,WAAa,CAAE7M,IAAGF,IAAGG,MAAOoF,EAAK6G,YAAahM,OAAQmF,EAAK+G,WAChEtM,GAAKuF,EAAKc,OAASd,EAAK+G,UACxB/G,EAAKyH,aAAe,IAAKzH,EAAKwH,WAAY7M,EAAG,EAAGC,OAAQoF,EAAKwH,WAAW5M,MAAQ,KAAO,EAAIoF,EAAKc,QAGhGd,EAAK0H,aAAe,CAAE/M,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAK8N,eAC3E9M,GAAKuF,EAAKc,OAASjG,EAGnBA,EAASmF,EAAK+G,UACd/G,EAAK2H,YAAc,CAAEhN,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAK4N,cAEtErH,EAAKiH,WACLxN,KAAKmO,mBAAmB5H,GAExBvG,KAAKoO,qBAAqB7H,GAE9BA,EAAK0H,aAAaI,gBAAiB,EACnC9H,EAAKsH,aAAaQ,gBAAiB,EAGnCnN,EAAIqF,EAAK+H,YAAYpN,EACrBF,EAAIuF,EAAKgI,aAAavN,EAAIuF,EAAKgI,aAAanN,OAASmF,EAAKc,OAC1DjG,GAAUmF,EAAKnF,OAASmF,EAAK4G,QAAUnM,GAAK,EAC5CG,EAAQoF,EAAKiH,WAAajH,EAAKiI,iBAAmBjI,EAAKgH,SACvDhH,EAAKkI,aAAe,CAAEvN,IAAGF,IAAGG,QAAOC,UACnCJ,GAAKI,EAASmF,EAAKc,OACnBd,EAAKK,cAAgB,CAAE1F,IAAGF,IAAGG,QAAOC,UAEpCD,EAAQoF,EAAK+G,UACblM,EAASmF,EAAK+G,UACd/G,EAAKC,UAAY,CAAEtF,EAAIqF,EAAKpF,MAAQ,EAAMA,EAAQ,EAAIH,EAAGuF,EAAKwH,WAAW/M,EAAGG,QAAOC,UAEnFmF,EAAKmI,YAAc,CAAExN,EAAG,EAAGF,EAAGuF,EAAK0H,aAAajN,EAAGG,MAAOoF,EAAKpF,MAAOC,OAAQmF,EAAKnF,OAAS,GAC5FmF,EAAKoI,YAAc,CAAEzN,EAAG,EAAGF,EAAG,EAAGG,MAAOoF,EAAKpF,MAAOC,OAAQmF,EAAKwH,WAAW/M,GAE5EuF,EAAKwH,WAAWa,cAAgBrI,EAAKwH,WAAW3M,OAAS,EAGzDmF,EAAKsI,SAAW,IAAKtI,EAAKmH,YAAavM,MAAOoF,EAAKpF,MAAQoF,EAAK4G,SAChE5G,EAAKM,QAAU,IAAKN,EAAKmH,YAAaxM,EAAGqF,EAAKpF,MAAQ,EAAIoF,EAAKc,QAC/Dd,EAAKuI,oBAAsB,CAAE9N,EAAGuF,EAAKsH,aAAa7M,EAAGI,OAAQmF,EAAKnF,OAASmF,EAAKsH,aAAa7M,GAC7FuF,EAAKwI,kBAAoB,IAAK/O,KAAKgP,YAAYzI,EAAKpF,MAAOoF,EAAKuI,oBAAoB1N,OAAQ,EAAG,GAAIJ,EAAGuF,EAAKuI,oBAAoB9N,GAC/HuF,EAAK0I,mBAAqB,IAAK1I,EAAKwI,kBAAmB7N,EAAGqF,EAAKwI,kBAAkB7N,EAAIqF,EAAKwI,kBAAkB5N,OAC5GoF,EAAKuI,oBAAsB,IAAK9O,KAAKgP,YAAYzI,EAAKpF,MAAOoF,EAAKuI,oBAAoB1N,OAAQ,EAAG,GAAIJ,EAAGuF,EAAKuI,oBAAoB9N,GAGjIG,EAAQoF,EAAKgH,SACbnM,EAASmF,EAAK+G,UACd/G,EAAK0H,aAAaiB,KAAO,CACrBhO,EAAGqF,EAAK0H,aAAa/M,EAAKqF,EAAK0H,aAAa9M,MAAQ,EAAMA,EAAQ,EAClEH,EAAGuF,EAAK0H,aAAajN,EAAKuF,EAAK0H,aAAa7M,OAAS,EAAMA,EAAS,EACpED,QAAOC,SAAQc,KAAM,QAEzBqE,EAAKsH,aAAaqB,KAAO,CACrBhO,EAAGqF,EAAKsH,aAAa3M,EAAKqF,EAAKsH,aAAa1M,MAAQ,EAAMA,EAAQ,EAClEH,EAAGuF,EAAKsH,aAAa7M,EAAKuF,EAAKsH,aAAazM,OAAS,EAAMA,EAAS,EACpED,QAAOC,SAAQc,KAAM,UAGlBqE,CACX,CAEAmB,0BAA0BnB,GACtBA,EAAKiI,kBAAoBjI,EAAK6G,YAAe,EAAI7G,EAAKc,QAAW,EACjEd,EAAK4I,kBAA4C,IAAxB5I,EAAKiI,iBAAyB,IAEvD,IAAItN,EAAIqF,EAAK0H,aAAa/M,EAAIqF,EAAK0H,aAAa9M,MAAQoF,EAAKc,OACzDrG,EAAIuF,EAAKwH,WAAW/M,EACpBG,EAAQoF,EAAKiI,iBACbpN,EAASmF,EAAK4I,kBAGlB5I,EAAK6I,cAAgB,CAAElO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKqP,gBAG5EnO,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBd,EAAK+I,YAAc,CAAEpO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKuP,cAG1ErO,EAAIqF,EAAK6I,cAAclO,EACvBF,GAAKI,EAASmF,EAAKc,OACnBd,EAAK+H,YAAc,CAAEpN,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKwP,cAG1ExO,GAAKI,EAASmF,EAAKc,OACnBd,EAAKgI,aAAe,CAAErN,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKyP,eAC3EzO,GAAKI,EAASmF,EAAKc,OAGnBrG,EAAIuF,EAAKwH,WAAW/M,EACpBE,EAAIqF,EAAKc,OACTd,EAAKmJ,cAAgB,CAAExO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKqP,gBAG5EnO,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBd,EAAKoJ,YAAc,CAAEzO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKuP,cAG1ErO,EAAIqF,EAAKc,OACTrG,EAAIA,EAAII,EAASmF,EAAKc,OACtBd,EAAKqJ,YAAc,CAAE1O,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAOiB,SAAU3N,KAAKwP,cAG3ExO,EAAIA,EAAII,EAASmF,EAAKc,OACtBd,EAAKsJ,aAAe,CAAE3O,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKyP,cAC/E,CAEA/H,4BAA4BnB,GAExB,IAAIrF,EAAIqF,EAAK0H,aAAa/M,EAAIqF,EAAK0H,aAAa9M,MAAQoF,EAAKc,OACzDrG,EAAIuF,EAAKwH,WAAW/M,EACpBG,EAAQoF,EAAKgH,SACbnM,EAASmF,EAAK+G,UAClB/G,EAAK+H,YAAc,CAAEpN,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKwP,cAC1ExO,GAAKI,EAASmF,EAAKc,OAGnBd,EAAKgI,aAAe,CAAErN,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKyP,eAC3EzO,GAAKI,EAASmF,EAAKc,OAGnBrG,EAAIuF,EAAKwH,WAAW/M,EACpBE,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBlG,EAAQoF,EAAKgH,SACbnM,EAASmF,EAAK+G,UACd/G,EAAK6I,cAAgB,CAAElO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKqP,gBAG5EnO,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBd,EAAK+I,YAAc,CAAEpO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKuP,cAG1ErO,EAAIqF,EAAKc,OACTrG,EAAIuF,EAAKwH,WAAW/M,EACpBuF,EAAKqJ,YAAc,CAAE1O,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAOiB,SAAU3N,KAAKwP,cAC3ExO,GAAKI,EAASmF,EAAKc,OAGnBd,EAAKsJ,aAAe,CAAE3O,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKyP,eAC3EzO,GAAKI,EAASmF,EAAKc,OAGnBrG,EAAIuF,EAAKwH,WAAW/M,EACpBE,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBd,EAAKmJ,cAAgB,CAAExO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKqP,gBAG5EnO,EAAIA,EAAIC,EAAQoF,EAAKc,OACrBd,EAAKoJ,YAAc,CAAEzO,IAAGF,IAAGG,QAAOC,SAAQsL,WAAW,EAAMiB,SAAU3N,KAAKuP,aAC9E,CAEA7H,uBAAuBF,GACnB,MAAMM,EAAS9H,KAAK8P,MAAMtI,GAG1B,OAFAM,EAAO9G,GAAqB,IAAhB8G,EAAO1G,OACnB0G,EAAO1C,SAAW,EACX0C,CACX,CAEAJ,mBAAmBvG,EAAOC,EAAQ2O,EAAOC,GACrC,IAAIC,EAAe9O,GAAS4O,EAAQ,KAChCG,EAA+B,IAAfD,EAAqB,IACrCD,IACAE,GAAiBF,GAEjBE,EAAgB9O,IAChB8O,EAAgB9O,EAChB6O,EAA+B,IAAhBC,EAAsB,IACjCF,IACAC,GAAoC,EAAID,EAAT,IAGvC,IAAI9O,GAAKC,EAAQ8O,GAAgB,EAC7BjP,GAAKI,EAAS8O,GAAiB,EAMnC,OAJIH,EAAQ,IACR7O,GAAKC,EAAS4O,EAAQE,GAAiB,GAGpC,CAAE/O,IAAGF,IAAGG,MAAO8O,EAAc7O,OAAQ8O,EAChD,CAEAxI,uBAAuBF,EAAU2I,EAAUC,EAAO7P,EAAO8P,EAAQC,EAASC,GACtE,IAAIC,EAAahJ,EAASpG,OACtBoG,EAAS6G,iBACTmC,GAAc,KAElB,MAAMC,EAAaF,EAAkBH,EAAQ,EAAIA,EAC3CM,EAAmBH,EAAkBvQ,KAAKgP,YAAYxH,EAASrG,MAAOqP,EAAYC,EAAYjJ,EAASwI,mBAAqBG,EAClI,IAAI3K,EAAMI,KAAK+K,MAAMF,EAAa,GAClC,MAAMG,EAAgBL,GAAmBhQ,GAASiF,EAAMjF,EAAQ,EAAIA,EACpE,GAAIkQ,EAAaH,GAAW9I,EAASpG,OAAmC,EAA1BsP,EAAiBtP,OAC3D,OAAOpB,KAAK6Q,kBAAkBrJ,EAAUkJ,EAAkBD,EAAYG,EAAeP,GAEzF7K,EAAMI,KAAK+K,MAAMP,EAAQ,GACzB,MAAMU,EAAYvQ,EAAQiF,EAAMjF,EAAQA,EAAQiF,EAC1CuL,EAAYX,EAAQ5K,EACpBwL,EAAehR,KAAKgP,YAAYxH,EAASrG,MAAOqP,EAAa,EAAGO,EAAWvJ,EAASwI,mBACpFiB,EAAe1Q,EAAQiF,EAAMgC,EAAW,IAAKA,EAAUxG,EAAGwG,EAASxG,EAAIgQ,EAAa5P,QAC1F,OAAOpB,KAAK6Q,kBAAkBI,EAAcD,EAAcD,EAAWD,EAAWT,EACpF,CAEA3I,yBAAyBF,EAAU2I,EAAUC,EAAO7P,EAAO8P,GACvD,MAAO,CACHnP,EAAGsG,EAAStG,EAAIlB,KAAKkR,WAAW1J,EAASrG,MAAOgP,EAAShP,MAAOiP,EAAO7P,GACvES,EAAGwG,EAASxG,EACZG,MAAOgP,EAAShP,MAChBC,OAAQ+O,EAAS/O,OACjBgE,SAAUiL,EAElB,CAEA3I,kBAAkByJ,EAAYC,EAAchB,EAAO7P,GAC/C,MAAM8Q,EAAYF,EAAaf,EAC/B,OAAOiB,EAAY,EAAIA,EAAY9Q,EAAQ6Q,EAAe,CAC9D,CAEA1J,2BAA2BvG,EAAOC,EAAQ8F,EAAOoK,GAC7C,MAAMC,EAAS,GACf,IAAIC,EAAU,CAAErQ,MAAO,EAAGC,OAAQ,GAClC,IAAK,IAAIqQ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMC,EAAO1R,KAAK2R,gBAAgBxQ,EAAOC,EAAQ8F,EAAOqK,EAAQD,EAAOG,GACnED,EAAQrQ,MAAQuQ,EAAKvQ,QACrBqQ,EAAUE,EAClB,CAEA,MAAME,GAAoBzQ,EAAS,EAAIoQ,EAAWC,EAAQrQ,MAAQqQ,EAAQlB,UAAakB,EAAQlB,QAAU,GAEzG,IAAIpP,EAAIqQ,EACJvQ,EAAIuQ,EACJM,EAAY,EAChB3K,EAAMjD,SAAQkD,IACVA,EAAKK,SAAW,CAAEtG,IAAGF,IAAGG,MAAOqQ,EAAQrQ,MAAOC,OAAQoQ,EAAQpQ,QAC9DyQ,IACIA,EAAYL,EAAQlB,QACpBpP,GAAK0Q,EAAmBJ,EAAQrQ,OAEhC0Q,EAAY,EACZ7Q,GAAKuQ,EAASC,EAAQpQ,OACtBF,EAAIqQ,EACR,GAER,CAEA7J,uBAAuBvG,EAAOC,EAAQ8F,EAAOqK,EAAQD,EAAOhB,GACxD,MAAMwB,EAAelM,KAAKmM,KAAK7K,EAAMrD,OAASyM,GACxClD,EAAcjM,GAAUmP,EAAU,GAAKiB,EACvClE,EAAejM,GAAW0Q,EAAe,GAAKP,EAC9CS,EAAqB,EAAIV,EAAT,EAEtB,IAAIW,EAAgB5E,EAAeyE,EAC/BI,EAAeD,EAAgBX,EAOnC,OALIY,EAAe9E,EAAckD,IAC7B4B,EAAe9E,EAAckD,EAC7B2B,EAAgBC,EAAeF,GAG5B,CAAE7Q,MAAO+Q,EAAc9Q,OAAQ6Q,EAAe3B,UACzD,CAEA5I,2BAA2BzB,EAAMtE,EAAQR,GAAQ,EAAIC,GAAS,GAC1D,IAAI+Q,GAAQ,EACZ,MAAMC,GAAsB,GAAVjR,EAAcA,EAAQ,IAClCkR,GAAwB,GAAXjR,EAAeA,EAAS6E,EAAKM,KAAK+G,UACrD,IAAIxF,EAAS,CAAEwK,SAAS,GACxB,MAAOH,EAAO,IAAMrK,EAAOwK,QACvBH,IACArK,EAAS9H,KAAKuS,6BAA6BtM,EAAMtE,EAAQyQ,EAAWC,EAAYF,GAEpF,OAAOrK,CACX,CAEAJ,oCAAoCzB,EAAMtE,EAAQR,EAAOC,EAAQ+Q,GAC7D,IAAIjR,EAAa,IAATiR,EAAaxQ,EAAOT,EAAIS,EAAOR,MAAQ8E,EAAKM,KAAKc,OAC1C,IAAT8K,EAAaxQ,EAAOT,EAAIC,EAAQ8E,EAAKM,KAAKc,OACtC1F,EAAOT,EAAKS,EAAOR,MAAQ,EAAMA,EAAQ,EAE/CH,EAAa,IAATmR,EAAaxQ,EAAOX,EAAIW,EAAOP,OAAS6E,EAAKM,KAAKc,OAC3C,IAAT8K,EAAaxQ,EAAOX,EAAII,EAAS6E,EAAKM,KAAKc,OACvC1F,EAAOX,EAAKW,EAAOP,OAAS,EAAMA,EAAS,EAEjDkR,GAAU,EACd,MAAME,EAAyB,IAATL,GAAuB,IAATA,EAC9B3E,EAAuB,IAAT2E,GAAuB,IAATA,EAGlC,IAAIM,EAAUvR,EAAIC,EAAQ8E,EAAKM,KAAKpF,MAChCqM,GAAciF,EAAU,IACxBvR,EAAIA,EAAIuR,EAAUxM,EAAKM,KAAK4G,SAEhCsF,EAAUvR,EAAIC,EAAQ8E,EAAKM,KAAKc,OAASpB,EAAKM,KAAKpF,MAC/CsR,EAAU,IACVH,GAAU,GAGV9E,GAActM,EAAI+E,EAAKM,KAAKc,SAC5BnG,EAAI+E,EAAKM,KAAKc,QAEdnG,EAAI+E,EAAKM,KAAKc,SACdiL,GAAU,GAGd,IAAII,EAAU1R,EAAII,EAAS6E,EAAKM,KAAKnF,OACjCoR,GAAgBE,EAAU,IAC1B1R,EAAIA,EAAI0R,EAAUzM,EAAKM,KAAK4G,SAEhCuF,EAAU1R,EAAII,EAAS6E,EAAKM,KAAKc,OAASpB,EAAKM,KAAKnF,OAChDsR,EAAU,IACVJ,GAAU,GAGVE,GAAgBxR,EAAIiF,EAAKM,KAAKc,SAC9BrG,EAAIiF,EAAKM,KAAKc,QAEdrG,EAAIiF,EAAKM,KAAKc,SACdiL,GAAU,GAEd,MAAMxK,EAAS,CAAE5G,IAAGF,IAAGG,QAAOC,SAAQkR,UAASH,QAG/C,OAFArK,EAAO6K,MAAQ3S,KAAK4S,SAAS9K,EAAQnG,EAAQwQ,GAEtCrK,CACX,CAEAJ,gBAAgBzC,EAAMM,EAAI4M,GACtB,MAAMT,EAAO,GAIb,IAAIxQ,EAAKqE,EAAGrE,EAAKqE,EAAGpE,MAAQ,EAAK8D,EAAK/D,EAAKwQ,EAAO,EAC9C1Q,EAAKuE,EAAGvE,EAAKuE,EAAGnE,OAAS,EAAK6D,EAAKjE,EAAK0Q,EAAO,EACnD,OAAQS,GACJ,KAAK,EACDjR,GAAK,EAAEwQ,EAAO,EACd,MACJ,KAAK,EACD1Q,EAAIiE,EAAK7D,OAASsQ,EAAO,EACzB,MACJ,KAAK,EACDxQ,EAAI+D,EAAK9D,MAAQuQ,EAAO,EACxB,MACJ,KAAK,EACD1Q,GAAK,EAAE0Q,EAAO,EACd,MAGR,MAAO,CAAExQ,IAAGF,IAAGG,MAAOuQ,EAAMtQ,OAAQsQ,EAAMtM,SAAU,GACxD,GACHsG,EAAAA,EAAAA,GAxYKsB,EAAU,gBAEW,UAAOtB,EAAAA,EAAAA,GAF5BsB,EAAU,gBAGW,UAAOtB,EAAAA,EAAAA,GAH5BsB,EAAU,eAIU,SAAMtB,EAAAA,EAAAA,GAJ1BsB,EAAU,iBAKY,WAAQtB,EAAAA,EAAAA,GAL9BsB,EAAU,eAMU,SAAMtB,EAAAA,EAAAA,GAN1BsB,EAAU,gBAOW,UAAOtB,EAAAA,EAAAA,GAP5BsB,EAAU,eAQU,SAAMtB,EAAAA,EAAAA,GAR1BsB,EAAU,mBASc,aAAUtB,EAAAA,EAAAA,GATlCsB,EAAU,eAUU,QAiY1B,QC3YA,MAAM6F,EACFnL,qBAAqBzB,EAAMwE,GACvBA,EAAOyB,KAAKjI,SAAQkD,IAChB,MAAMd,EAAeT,KAAKkN,IAAIrI,EAAOpE,aAAcoE,EAAOrE,oBACpD2M,EAAkB5L,EAAK6L,OAAS3M,GAAgBc,EAAKiE,MAAQX,EAAOrE,mBACpE6M,EAAehN,EAAKyG,YAAcvF,EAAKuF,UAE7CvF,EAAK0L,WAAaE,GAAmBE,EACjCjT,KAAK+L,WAAW5E,IAASsD,EAAOC,MAAM7G,OAAS,IAC/CsD,EAAK0L,YAAa,EAAK,IAG/BpI,EAAOC,MAAMzG,SAAQkD,IACjBA,EAAK0L,WAAa1L,EAAK+L,SAAS,GAExC,CAGAxL,4BACI1H,KAAKiG,KAAKiB,MAAMjD,SAAQkD,GAAQA,EAAK0L,YAAa,GACtD,EAIJ,QCxBA,MAAMM,EAGFzL,yBAAyBzB,EAAMuD,EAAMiB,EAAQK,GACzC,IAAIhD,EAAS9H,KAAKoT,+BAA+BnN,EAAMuD,EAAM,qBAAsBsB,GACnF,OAAGhD,EAAOmD,KACCnD,EAEJ9H,KAAKoT,+BAA+BnN,EAAMuD,EAAM,mBAAoBiB,EAC/E,CAEA/C,sCAAsCzB,EAAMuD,EAAM6J,EAAU5I,GACxD,GAAIjB,EAAK6J,GACL,MAAO,CAAC,EAEZ,GAAI7J,EAAKlC,QAAUkC,EAAKlC,OAAOpF,OAASlC,KAAKsT,aAIzC,OAHA9J,EAAK6J,GAAY7J,EAAKlC,OACtBkC,EAAKlC,OAAS,KACdkC,EAAKoC,WAAa,KACX,CAAC,EAGZ,GAAIpC,EAAKoC,WASL,OARA5L,KAAKqL,aAAaZ,EAAQjB,EAAKoC,WAAWR,MAC1CpL,KAAK6I,cAAc,CACf,CAAEzG,GAAIpC,KAAKqI,gBAAgB9F,KAAMsF,MAAO2B,EAAKoC,WAAYjE,QAAS3H,KAAKuT,eAAgBC,WAAWhK,GAClG,CAAEpH,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO2B,EAAKoC,WAAYrG,GAAIvF,KAAKyP,iBAE3DjG,EAAK6J,GAAY7J,EAAKoC,WACtBpC,EAAKlC,OAAS,KACdkC,EAAKoC,WAAa,KACX,CAAEX,MAAM,GAGnB,MAAMyI,EAAajJ,EAAOyB,KAAKrK,QAAOX,GAAKA,EAAE8G,SAAW9G,EAAE8G,QAAQhD,MAAKgE,GAAMA,EAAGrB,UAAY3H,KAAKuT,kBAAmBrS,EAAEkK,MAAQX,EAAOrE,qBACrI,GAAIsN,EAAW7P,OAAS,EAAG,CACvB,MAAM8P,EAAclJ,EAAOiC,UAAY,IAAM,IAQ7C,OAPAzG,EAAKwC,MAAQ,CAAC,CACVrG,GAAIpC,KAAKuH,MAAMhF,KACfL,KAAO,oCAAmCyR,MAC1CzM,MAAOwM,EACPlK,OAAOkD,UAAUjC,EAAOiC,UACxBF,QAAS,CAAC,CAAEtK,KAAMlC,KAAKsT,iBACxBpK,OAAOjD,EAAKwC,OACR,CAAEwC,MAAM,EACnB,CAGA,OADAzB,EAAK6J,GAAY,CAAEnR,KAAMlC,KAAKsT,cACvB,CAAC,CACZ,GACH5H,EAAAA,EAAAA,GAlDKyH,EAAU,eACU,kBAoD1B,QCrDA,MAAMS,EACFlM,+BAA+BzB,EAAMuD,EAAMiB,EAAQK,GAC/C,OAAO9K,KAAK6T,sBAAsB5N,EAAMuD,EAAMiB,EAAQK,EAAUtB,EAAKF,OAAOsK,WAChF,CAEAlM,kCAAkCzB,EAAMuD,EAAMiB,EAAQK,GAClD,OAAO9K,KAAK6T,sBAAsB5N,EAAMuD,EAAMiB,EAAQK,EAAUtB,EAAKF,OAAOwK,gBAChF,CAEApM,6BAA6BzB,EAAMuD,EAAMiB,EAAQK,EAAU8I,GACvD,IAAKA,GAAcA,EAAW/P,OAAS,EACnC,OAAO,EAEX,IAAIiE,GAAS,EAqCb,OApCA8L,EAAW3P,SAAQ8P,IACf,IAAKjM,EACD,OAAOA,EAEU,YAAjBiM,EAAU3R,GACV0F,EAASA,GAAU9H,KAAKsM,UAAU9C,EAAKlB,MAAOyL,EAAU9J,OAElC,aAAjB8J,EAAU3R,GACf0F,EAASA,GAAU0B,EAAKlB,MAAMqF,WAAa3N,KAAK4N,aAE1B,cAAjBmG,EAAU3R,GACf0F,EAASA,GAAU0B,EAAKlB,MAAMqF,WAAa3N,KAAK8N,cAE1B,iBAAjBiG,EAAU3R,GACf0F,EAASA,GAAU7B,EAAKyG,YAAcjC,EAAOiC,UAEvB,kBAAjBqH,EAAU3R,GACf0F,EAASA,GAAU0B,EAAKZ,WAAaY,EAAKZ,UAAUoK,OAASe,EAAU9J,MAEjD,+BAAjB8J,EAAU3R,GACf0F,EAASA,GAAU2C,EAAOC,MAAM7I,QAAOsF,GAAQnH,KAAK+L,WAAW5E,IAASnH,KAAKgU,aAAa7M,EAAM4M,EAAU3H,aAAYvI,QAAUkQ,EAAU9J,MAEpH,2BAAjB8J,EAAU3R,GACf0F,EAASA,GAAU2C,EAAOwJ,MAAMpS,QAAOsF,GAAQnH,KAAKkU,cAAc/M,KAAOtD,QAAUkQ,EAAU9J,MAEvE,8BAAjB8J,EAAU3R,GACf0F,EAASA,GAAUgD,EAASoB,KAAKrI,QAAUkQ,EAAU9J,MAE/B,sBAAjB8J,EAAU3R,GACf0F,EAASA,GAAU0B,EAAKZ,WAAa5I,KAAKgU,aAAaxK,EAAKZ,UAAWmL,EAAU9J,OAE3D,yBAAjB8J,EAAU3R,KACf0F,EAASA,GAAU2C,EAAOC,MAAM7G,QAAUkQ,EAAU9J,MAAK,IAI1DnC,CACX,EAIJ,QCvDA,MAAMqM,EAEFzM,mBAAmBzB,EAAMuD,EAAMiB,GAC3B,MAAM2J,EAAYpU,KAAKqU,SAASpO,EAAMwE,EAAQjB,EAAK3B,MAAO2B,EAAKvE,KAAMuE,EAAKjE,IAE1E,OADAvF,KAAKsU,WAAWF,GACTA,CACX,CAEA1M,YAAYzB,EAAMuD,EAAMiB,GACpB,OAAOzK,KAAKqU,SAASpO,EAAMwE,EAAQjB,EAAK3B,MAAO2B,EAAKvE,KAAMuE,EAAKjE,GACnE,CAEAmC,kBAAkBP,GACd,IAAKA,EACD,OAECnH,KAAKiG,KAAKiB,MAAMlC,MAAK9D,GAAKA,EAAEX,QAAU4G,EAAK5G,UAC5CP,KAAKiG,KAAKiB,MAAQlH,KAAKuU,MAAMvU,KAAKiG,KAAKiB,MAAOC,IAElD,MAAMsD,EAAStD,EAAKuF,UAAY1M,KAAKiG,KAAKE,QAAUnG,KAAKiG,KAAKK,QAI9D,OAHKa,EAAKK,WACNL,EAAKK,SAAWxH,KAAK8P,MAAMrF,EAAO+J,UAAUC,OAChDtN,EAAKuN,OAAS,GACPvN,CACX,CAEAO,gBAAgBzB,EAAMwE,EAAQtD,EAAMwN,EAAcC,IACzCD,GAAgBxN,GAAQA,EAAKwG,WAC9BgH,EAAexN,EAAKwG,UAExB,IAAI1I,EAAO0P,GAA8BxN,GAAMwG,SAC/C1I,EAAe,QAARA,EAAiB,KAAOA,EAC/B,MAAMM,EAAKqP,EAUX,GARKzN,EAEIlC,IACLwF,EAAOxF,GAAQjF,KAAK6U,cAAcpK,EAAOxF,GAAOkC,IAFhDA,EAAOsD,EAAOxF,GAAM6P,OAAO,EAAG,GAAG,GAIhC3N,GAAQwN,IAAiB3U,KAAKwP,cAC/BxP,KAAKkL,IAAIT,EAAOiC,YAEfvF,EACD,OAEJ,MAAM4N,EAAU,CAAC/U,KAAK8N,cAAe9N,KAAKuP,cACrCpI,EAAK6N,gBAGFD,EAAQxL,SAASqL,GACjBnK,EAAOlF,GAAMvF,KAAKuU,MAAM9J,EAAOlF,GAAK4B,GAEpCA,EAAK8N,SAAU,EALnBxK,EAAOlF,GAAMvF,KAAKuU,MAAM9J,EAAOlF,GAAK4B,GAQpClC,IACAkC,EAAKK,SAAWL,EAAKK,SAAWL,EAAKK,SAAWxH,KAAK8P,MAAMrF,EAAO+J,UAAUvP,KAEhFkC,EAAKuF,UAAYjC,EAAOiC,UACxBvF,EAAK6E,QAAS,EACd7E,EAAKwG,SAAWiH,EAChBzN,EAAK+N,UAAYH,EAAQxL,SAASpC,EAAKwG,UACvCxG,EAAKgO,MAAQhO,EAAKwG,WAAa3N,KAAK4N,eAAiBzG,EAAKuF,YAAcvF,EAAK2E,aAAe3E,EAAK8B,KAEjGjJ,KAAKoV,sBAAsBnP,EAAMkB,EAAM4N,EAAQxL,SAASpC,EAAKwG,WAEzDxG,EAAK8B,OACL9B,EAAK8B,KAAK6C,WAAa,KACvB3E,EAAK8B,KAAKoM,MAAO,EACjBrV,KAAKqU,SAASpO,EAAMwE,EAAQtD,EAAK8B,KAAM0L,EAAc3U,KAAKyP,sBAClDtI,EAAK8B,KACb9B,EAAKkO,MAAO,GAGhB,MAAMC,EAAwB,CAACtV,KAAK4N,aAAc5N,KAAK8N,eAAevE,SAASqL,GAS/E,OARKU,IACDnO,EAAK5B,GAAKvF,KAAK8P,MAAMrF,EAAO+J,UAAUjP,IAClCqP,IAAe5U,KAAKyP,gBACpBtI,EAAK5B,GAAGnE,OAAS,EACjB+F,EAAK+N,UAAW,IAIjB/N,CACX,EAIJ,Q,WCxFA,MAAMoO,EACF7N,YAAYzB,EAAMuD,EAAMiB,GACpB,IAAI3C,EAAS,CAAC,EAiBd,OAfK0B,EAAKlB,OAAUkB,EAAKgM,KAIrB1N,EADK0B,EAAK3B,MAAM8F,WAAa3N,KAAK4N,aACzB5N,KAAKyV,aAAahL,EAAQjB,GAE9BA,EAAK3B,MAAM8F,WAAa3N,KAAK8N,cACzB9N,KAAK0V,cAAclM,EAAMiB,GAGzBzK,KAAK2V,aAAalL,EAAQjB,GAAM,GATzC1B,EAAO8N,UAAW,EAWlB9N,GAAUA,EAAO8N,UACjB5V,KAAK6V,wBAAwBrM,EAAK3B,OAE/BC,CACX,CAEAJ,qBAAqB8B,EAAMiB,GACvB,MAAMqL,EAAetM,EAAKgM,KAAK9I,WAAajC,EAAOiC,UACnD,GAAIoJ,IAAiBtM,EAAK3B,MAAMqL,UAC5B,MAAO,CAAE0C,UAAU,GAGvB5V,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKgW,OAAOzT,KAAM0T,SAAUzM,EAAK3B,MAAO/F,OAAQ0H,EAAKlB,MAAOoE,UAAWlD,EAAK3B,MAAM6E,UAAWwJ,OAAQ,MAChI,CAEAxO,oBAAoB+C,EAAQjB,GACxB,MAAMsM,EAAetM,EAAKgM,KAAK9I,WAAajC,EAAOiC,UAC7CyJ,EAAY3M,EAAK4M,aAAe3L,EAAOrE,mBAAqBoD,EAAK3B,MAAMuD,KAE7E,OAAK0K,GAAgBtM,EAAKgM,KAAK7H,UAAY3N,KAAK4N,cAAgBuI,EACrD,CAAEP,UAAU,GAEhB5V,KAAK2V,aAAalL,EAAQjB,EAAMA,EAAK4M,YAChD,CAEA1O,+BAA+BP,GAC3B,MAAM/B,EAAW+B,EAAK6E,OAAS,EAAI,GAInC,OAHA7E,EAAK5B,GAAK,IAAKvF,KAAK8P,MAAM3I,EAAKK,UAAWpC,YAC1C+B,EAAKK,SAAW,IAAKL,EAAKK,YAAaL,EAAKkP,cAC5CrW,KAAKiG,KAAKqQ,SAAU,EACb,CAAC,CACZ,CAEA5O,oBAAoB+C,EAAQjB,EAAM+M,GAC9B,IAAIC,EAAUxW,KAAKyW,YAAYjN,EAAK3B,OAChC6O,EAAY1W,KAAKkU,cAAc1K,EAAK3B,OAExC,MAAM8O,EAAiB3W,KAAK4W,kBAAkBnM,EAAQjB,GAGtD,GAFAgN,EAAUG,EAAiBA,EAAeH,QAAUA,EACpDE,EAAYC,EAAiBA,EAAeD,UAAYA,EACpDC,GAAkBA,EAAe1L,KACjC,OAAO0L,EAEX3W,KAAKsU,WAAW9K,EAAK3B,OAErB,IAAIgP,GAAarN,EAAKsN,oBAChB9W,KAAK+H,6BAA6ByB,EAAK3B,MAAO7H,KAAK+W,gBAAgBnP,iBACzE,OAAIiP,GACArN,EAAKsN,oBAAqB,EACnB,CAAE7L,MAAM,IAGfjL,KAAK+L,WAAWvC,EAAK3B,QAAU4C,EAAOC,MAAM7G,OAAS,GACrD2F,EAAK3B,MAAMqL,WAAY,EACnBqD,GACAvW,KAAKqL,aAAaZ,EAAQjB,EAAK3B,MAAMuD,WACzCpL,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO2B,EAAK3B,MAAOtC,GAAIvF,KAAK8N,iBAInE9N,KAAKgX,WAAWxN,EAAK3B,QACjB0O,GACAvW,KAAKqL,aAAaZ,EAAQjB,EAAK3B,MAAMuD,MAErCX,EAAOwM,KAAKpT,OAAS,GACrB7D,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO4C,EAAOwM,KAAK,GAAI1R,GAAIvF,KAAKyP,gBAE3EzP,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO2B,EAAK3B,MAAOtC,GAAIvF,KAAKuP,oBACnE/F,EAAK3B,MAAMgL,YAAa,IAIxB2D,GAAWhN,EAAKlB,OAAStI,KAAK+L,WAAWvC,EAAKlB,OAC1CkB,EAAK3B,MAAMoB,MAAQO,EAAKlB,MAAMW,MAAQO,EAAK3B,MAAMiE,YAActC,EAAKlB,MAAMwD,gBAC1E9L,KAAK6V,wBAAwBrM,EAAK3B,QAIlC0O,GACAvW,KAAKqL,aAAaZ,EAAQjB,EAAK3B,MAAMuD,WACzCpL,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKiJ,KAAK1G,KAAMsF,MAAO2B,EAAK3B,MAAOS,MAAOkB,EAAKlB,SAItEoO,GACIH,GACAvW,KAAKqL,aAAaZ,EAAQjB,EAAK3B,MAAMuD,WAEzCpL,KAAKkX,aAAa,CACd,CAAE9U,GAAIpC,KAAKqI,gBAAgB9F,KAAMsF,MAAO2B,EAAK3B,MAAOS,MAAOkB,EAAKlB,MAAOX,QAAS3H,KAAKmX,iBACrF,CAAE/U,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO2B,EAAK3B,MAAOtC,GAAIvF,KAAKyP,uBAK1DzP,KAAK6V,wBAAwBrM,EAAK3B,MACtC,CAEAH,oBAAoB+C,EAAQW,GACpBX,EAAO2M,YAAc,IACrB3M,EAAO2M,YAAcxR,KAAKkN,IAAI,EAAGrI,EAAO2M,YAAchM,IAC1DX,EAAOrE,oBAAsBgF,CACjC,CAEA1D,yBAAyB+C,EAAQjB,GAC7B,GAAKA,EAAKlB,OAAUtI,KAAKyW,YAAYjN,EAAK3B,QAAW7H,KAAKkU,cAAc1K,EAAK3B,OAA7E,CASA,GANI2B,EAAKlB,MAAMW,OACXO,EAAKmN,eAAiB,WAEtBnN,EAAKlC,SACLkC,EAAKmN,eAAiBnN,EAAKlC,OAAOpF,MAElCsH,EAAKmN,eAAgB,CACrB,MAAMH,EAAkC,UAAxBhN,EAAKmN,eACfD,EAAoC,YAAxBlN,EAAKmN,eACvB,MAAO,CAAEH,UAASE,YACtB,CASA,OAPA1W,KAAKoI,aAAa,CACdhG,GAAIpC,KAAKuH,MAAMhF,KACfmK,UAAWjC,EAAOiC,UAClBxK,KAAM,4CACNsK,QAAS,CAAC,CAAEtK,KAAM,SAAW,CAAEA,KAAM,YACrCsH,SAEG,CAAEyB,MAAM,EArBL,CAsBd,EAIJ,QCpJA,MAAMqL,EAEF5O,2BAA2BzB,EAAMuD,EAAMiB,GACnCzK,KAAKqX,kBAAkB5M,EAAOyB,KAAMzB,EAAO+J,UAAUtI,MAAM,EAAO,GAAG,GACrElM,KAAKqX,kBAAkB5M,EAAOC,MAAOD,EAAO+J,UAAU9J,OAAO,EAAO,GAAG,GACvE1K,KAAKqX,kBAAkB5M,EAAOwM,KAAMxM,EAAO+J,UAAUyC,MAAM,GAE3D,MAAMK,EAAqB7M,EAAOwJ,MAAMpS,QAAOX,IAAMA,EAAEqE,KAAIwD,KAAI7H,GAAKA,EAAEX,QACtE0F,EAAKiB,MAAQjB,EAAKiB,MAAMrF,QAAOX,IAAMoW,EAAmB/N,SAASrI,EAAEX,SAEnEP,KAAKuX,cAActR,EAAMwE,GAEzBA,EAAO+M,SAAW/M,EAAOrE,mBAAqB,IAAMqE,EAAOpE,aAC3DoE,EAAOgN,SAAW,YAClBhN,EAAOiN,WAAa1X,KAAK2X,QAAQlN,EAAOmN,OAAO/T,QAC/C4G,EAAOoN,SAAW7X,KAAK2X,QAAQlN,EAAOgK,KAAK5Q,QAC3C4G,EAAOqN,UAAY9X,KAAK2X,QAAQlN,EAAOwJ,MAAMpQ,QAE7CoC,EAAK8R,WAAavO,EAAKuO,UAC3B,CAEArQ,yBAAyBR,EAAOM,EAAUwQ,EAAa1H,EAASC,GAC5D,IAAIC,EAAahJ,EAASpG,OACtBoG,EAAS6G,iBACTmC,GAAc,KAClB,MAAML,EAAW6H,EAAcxQ,EAAWxH,KAAKgP,YAAYxH,EAASrG,MAAOqP,EAAYtJ,EAAMrD,OAAQ2D,EAASwI,mBAC9G9I,EAAMjD,SAAQ,CAACkD,EAAM5G,KACjB,MAAM8P,EAASlJ,EAAK6E,OAAS,EAAI,GACjC7E,EAAK8Q,WAAa,MAClB9Q,EAAK6B,IAAK,EACV7B,EAAK5B,GAAKvF,KAAKkY,gBAAgB1Q,EAAU2I,EAAUjJ,EAAMrD,OAAQtD,EAAO8P,EAAQC,EAASC,GACzFpJ,EAAK5B,GAAKvF,KAAKmY,mBAAmBhR,EAAK5B,GAAI4B,EAAK6E,QAChD7E,EAAKwG,SAAWnG,EAASmG,SACrBnG,EAASmG,UAAY3N,KAAK8N,eAAiB3G,EAAK8B,OAChD9B,EAAK8B,KAAK1D,GAAKvF,KAAKoY,gBAAgBjR,EAAK5B,IAAG,GAExD,CAEAmC,0BAA0BnC,EAAIyG,EAAQqM,EAAU,IAC5C,GAAIrM,EACA,OAAOzG,EAAG+S,SAAW/S,EAAG+S,SAAW/S,EAEvC,GAAIA,EAAG+S,SACH,OAAO/S,EAEX,MAAMgT,GAAoB,EAAIF,GAAW,EACnCG,EAAQjT,EAAGpE,MAAQoX,EACnBE,EAAQlT,EAAGnE,OAASmX,EAC1B,MAAO,IAAKhT,EAAI+S,SAAU/S,EAAIrE,EAAGqE,EAAGrE,EAAIsX,EAAOxX,EAAGuE,EAAGvE,EAAIyX,EAAOtX,MAAOoE,EAAGpE,MAAQkX,EAASjX,OAAQmE,EAAGnE,OAASiX,EACnH,CAEA3Q,eAAe7D,GACX,OAAOA,EAAS,EAAI,YACdA,EAAS,EAAI,YACTA,EAAS,EAAI,YACTA,EAAS,GAAK,YACVA,EAAS,GAAK,YACV,WAC1B,CAEA6D,oBAAoBzB,GAChBA,EAAKiB,MAAMjD,SAAQkD,IACXA,EAAKkP,eAAclP,EAAKK,SAAW,IAAKL,EAAKK,SAAUtG,EAAGiG,EAAKkP,aAAanV,EAAGF,EAAGmG,EAAKkP,aAAarV,IACpGmG,EAAK5B,KAAI4B,EAAKK,SAAWL,EAAK5B,WAC1B4B,EAAK5B,UACL4B,EAAKuR,mBACLvR,EAAKkP,YAAa,WAEtBpQ,EAAK0S,YACL1S,EAAK2S,UACb3S,EAAKqQ,SAAU,EACXrQ,EAAK4S,MACL7Y,KAAK8Y,aAAa7S,EAE1B,CAEAyB,mBAAmBzB,GACfA,EAAKiB,MAAMjD,SAAQkD,IACfA,EAAKuN,OAASvN,EAAK2E,WAAa,EAAI,CAAC,GAE7C,CAEApE,sBAAsBzB,GACbA,EAAK8S,4BACN/Y,KAAKgZ,2BAA2B/S,EAAKiB,MAAOlH,KAAKiZ,iBACjDhT,EAAK8S,2BAA4B,GAGrC/Y,KAAKkZ,oBAAqB,EAC1BjT,EAAKkT,uBAAwB,SACrBlT,EAAK8R,WACb/X,KAAKoZ,cAAgB,GAErB,MAAM5O,EAAU,CAACvE,EAAKE,QAASF,EAAKK,SACpCkE,EAAQvG,SAAQwG,IACZA,EAAOC,MAAMzG,SAAQkD,GAAQnH,KAAK2K,gBAAgB1E,EAAMwE,EAAQtD,KAChEnH,KAAKqZ,oBAAoBpT,EAAM,CAAC,EAAGwE,EAAO,IAG9CzK,KAAKsZ,mBAAmBrT,GAExBA,EAAKqQ,SAAU,EACfrQ,EAAKuN,WAAa,IACtB,CAEA9L,0BAA0BzB,GACtB,MAAMsT,EAAQ,GAGRC,EAAoBvT,EAAKE,QAAQuE,MAAM7I,QAAOX,IAAMA,EAAE+H,OAC5DhD,EAAKE,QAAQ+F,KAAKjI,SAAQkD,IACtB,IAAIsS,EAAQtS,EAAK6E,OAAS,CAAChM,KAAKiG,KAAKM,KAAK0H,aAAaiB,MAAQ,GAE/D,GAAI/H,EAAK6E,OAAQ,CACb,IAAIpK,EAAU,GAEV5B,KAAKkU,cAAc/M,GACnBvF,EAAUqE,EAAKE,QAAQuE,MAClB1K,KAAKyW,YAAYtP,KACtBvF,EAAU4X,GAEdC,EAAQA,EAAMvQ,OAAOtH,EAAQmH,KAAI2Q,IAAiB,IAAK1Z,KAAK2Z,OAAOD,GAAOvS,KAAMuS,EAAMxX,KAAM,WAChG,CAEIuX,EAAM5V,OAAS,GACf0V,EAAM7Q,KAAK,IAAK1I,KAAK2Z,OAAOxS,GAAOA,OAAMtG,MAAM,EAAOe,QAAS6X,GAAQ,IAI/ExT,EAAKE,QAAQuE,MAAMzG,SAAQgS,IACvB,IAAIwD,EAAQxD,EAASjK,OAAS,CAAChM,KAAKiG,KAAKM,KAAKsH,aAAaqB,MAAQ,GAEnE,MAAM0K,EAAe3T,EAAKK,QAAQoE,MAAM7I,QAAOX,GAAKlB,KAAK6Z,cAAc5T,EAAKK,QAAS2P,EAAU/U,KAC3F+U,EAASjK,QAAU4N,EAAa/V,OAAS,IACzC4V,EAAQA,EAAMvQ,OAAO0Q,EAAa7Q,KAAI2Q,IAAiB,IAAK1Z,KAAK2Z,OAAOD,GAAOvS,KAAMuS,EAAMxX,KAAM,eAGjGuX,EAAM5V,OAAS,GACf0V,EAAM7Q,KAAK,IAAK1I,KAAK2Z,OAAO1D,GAAW9O,KAAM8O,EAAUpV,MAAM,EAAOe,QAAS6X,GAAQ,IAI7FxT,EAAKE,QAAQoT,MAAQA,CACzB,CAEA7R,cAAcP,GAAQ,OAAOA,EAAK5B,GAAK4B,EAAK5B,GAAK4B,EAAKK,QAAU,EAIpE,QCnJA,MAAMQ,EACFN,YAAYzB,EAAMuD,EAAMiB,EAAQK,GAC5B,MAAMb,EAAQT,EAAKF,OAAOW,MAAQT,EAAKF,OAAOW,MAAQ,EAChDxB,EAAQ,GACd,IAAK,IAAIgJ,EAAI,EAAGA,EAAIxH,EAAOwH,IACvBhJ,EAAMC,KAAK,CACPtG,GAAIpC,KAAK8Z,YAAYvX,KACrBmK,UAAWjC,EAAOiC,UAClBzH,KAAMjF,KAAKwP,aACXjK,GAAIvF,KAAK4N,aACT/K,OAAO,IAGf7C,KAAK6I,cAAcJ,EACvB,CAEAf,eAAezB,EAAMuD,EAAMiB,EAAQK,GAC/BtB,EAAKlB,MAAMyR,WAAavQ,EAAKlB,MAAMyR,WAAavQ,EAAKlB,MAAMyR,WAAavQ,EAAKlB,MAAM8C,KACnF,MAAM4O,EAAcxQ,EAAK+B,2BAA6B/B,EAAKF,OAAOW,MAAQ,EAC1ET,EAAKlB,MAAM8C,KAAO5B,EAAKlB,MAAMyR,WAAaC,CAC9C,CAEAtS,iBAAiBzB,EAAMuD,EAAMiB,EAAQK,GACjC,IAAKtB,EAAKF,OAAOW,MACb,MAAM,IAAIsC,MAAM,yBAA2B0N,KAAKC,UAAU1Q,IAC9D,MAAMkD,EAAYjC,EAAOiC,UACzB1M,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAK8Z,YAAYvX,KAAMsF,MAAO7H,KAAKma,WAAW3Q,EAAKF,OAAOW,MAAOyC,GAAYnH,GAAIvF,KAAK8N,cAAepB,aACjI,CAEAhF,8BAA8BzB,EAAMuD,EAAMiB,EAAQK,GAC9C,IAAK,IAAI2G,EAAI,EAAGA,EAAIjI,EAAKF,OAAO8Q,OAAOvW,OAAQ4N,IAAK,CAChD,MAAMxH,EAAQT,EAAKF,OAAO8Q,OAAO3I,GACjC,QAAkB4I,IAAdpQ,EAAMqQ,KAAqB7P,EAAOC,MAAM7G,QAAUoG,EAAMqQ,IACxD,OAAOta,KAAKua,UAAUtU,EAAM,CAAEqD,OAAQ,CAAEW,MAAOA,EAAM7H,KAAQqI,EAAQK,GAEpE,QAAkBuP,IAAdpQ,EAAM6I,KAAqBrI,EAAOC,MAAM7G,QAAUoG,EAAM6I,IAC7D,OAAO9S,KAAKua,UAAUtU,EAAM,CAAEqD,OAAQ,CAAEW,MAAOA,EAAM7H,KAAQqI,EAAQK,EAE7E,CACJ,CAEApD,kBAAkBzB,EAAMuD,EAAMiB,EAAQK,GAGlC,GAFAtB,EAAKlB,MAAM8B,IAAMZ,EAAKF,OAAOW,MAC7BjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,yBAAyBiH,EAAKF,OAAOW,SACxDT,EAAKlB,MAAM8B,GAAK,EAAG,CACnB,MAAM3B,EAAQzI,KAAKwa,YAAYhR,EAAKlB,OAAO,GAC3CtI,KAAKkX,aAAazO,EACtB,CACJ,CAEAf,eAAezB,EAAMuD,EAAMiB,EAAQK,GAC/B,MAAMjD,EAAQ2B,EAAKoC,WACnB,IAAK/D,EAQD,OAPA7H,KAAKoI,aAAa,CACdhG,GAAIpC,KAAKuH,MAAMhF,KACfmK,UAAWjC,EAAOiC,UAClBlD,OACAtH,KAAM,2BACNgF,MAAOuD,EAAOyB,OAEX,CAAEjB,MAAM,GAGnBjL,KAAK6K,IAAK,GAAEhD,EAAMtF,kBAClBvC,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,QAAOtC,GAAIvF,KAAKyP,eAC3D,CAEA/H,mBAAmBzB,EAAMuD,EAAMiB,EAAQK,GACnC,IAAKtB,EAAKlB,MAAMW,KACZ,OAEJ,MAAMpB,EAAQ2B,EAAKlB,MAAMW,YACjBO,EAAKlB,MAAMW,KACnBpB,EAAMiE,WAAa,KACnB9L,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,QAAOtC,GAAIvF,KAAK4N,eACvD5N,KAAK6K,IAAK,GAAEhD,EAAMtF,sBACtB,CAEAmF,mBAAmBzB,EAAMuD,EAAMiB,EAAQK,GACnCtB,EAAKlB,MAAMN,QAAUwB,EAAKlB,MAAMN,QAAQkB,OAAOM,EAAKF,OAAOtB,SAC3DhI,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,6BAA6BiH,EAAKF,OAAOtB,QAAQe,KAAI7H,GAAKA,EAAEkB,OACvF,CAEAsF,YAAYzB,EAAMuD,EAAMiB,EAAQK,GAC5B9K,KAAKyL,UAAUxF,EAAMuD,EAAKlB,OAAO,EACrC,CAEAZ,cAAczB,EAAMuD,EAAMiB,EAAQK,GAC9B9K,KAAKyL,UAAUxF,EAAMuD,EAAKlB,OAAO,EACrC,CAEAZ,2BAA2BzB,EAAMuD,EAAMiB,EAAQK,GAC3C9K,KAAKyL,UAAUxF,EAAMuD,EAAKlB,OAAO,GACjCkB,EAAKlB,MAAM4K,WAAY,CAC3B,CAEAxL,cAAczB,EAAMuD,EAAMiB,EAAQK,GAC1BtB,EAAKlB,MAAM8B,GAAKZ,EAAKlB,MAAMmS,QAC3Bza,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,0BAA0BiH,EAAKF,OAAOW,SAC7DT,EAAKlB,MAAMoS,SAAW9U,KAAK0U,IAAI9Q,EAAKlB,MAAMoS,SAAWlR,EAAKF,OAAOW,MAAOT,EAAKlB,MAAMqS,aACnF3a,KAAK2K,gBAAgB1E,EAAMwE,EAAQjB,EAAKlB,OAEhD,CAEAZ,wBAAwBzB,EAAMuD,EAAMiB,EAAQK,GACxC,GAAIL,EAAOmN,OAAO/T,OAAS,EACvB,OAEJ,MAAMgE,EAAQ4C,EAAOmN,OAAO9C,OAAO,EAAG,GAAG,GACzCjN,EAAM8F,SAAWlD,EAAO+J,UAAUoD,OAAOjK,SACzC3N,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAK8Z,YAAYvX,KAAMsF,QAAOtC,GAAIvF,KAAK4N,eAC9D5N,KAAK6K,IAAK,uCACd,CAEAnD,+BAA+BzB,EAAMuD,EAAMiB,EAAQK,GAC/C,IAAKtB,EAAKoC,WASN,OARApC,EAAKtC,MAAQ,CAAClH,KAAK4a,kBAAkBnQ,EAAOgK,MAAOzU,KAAK4a,kBAAkBnQ,EAAOgK,OACjFzU,KAAKoI,aAAa,CACdhG,GAAIpC,KAAKuH,MAAMhF,KACfmK,UAAWjC,EAAOiC,UAClBlD,OACAtH,KAAM,kFACNgF,MAAOsC,EAAKtC,QAET,CAAE+D,MAAM,GAGnB,MAAM4P,EAAarR,EAAKtC,MAAMrF,QAAOsF,GAAQA,EAAK5G,QAAUiJ,EAAKoC,WAAWrL,QAC5EkK,EAAOgK,KAAO,CAACjL,EAAKoC,YAAY1C,OAAOuB,EAAOgK,MAAMvL,OAAO2R,GAC3D7a,KAAK6K,IAAK,gDACd,CAEAnD,kCAAkCzB,EAAMuD,EAAMiB,EAAQK,GAClD,IAAKtB,EAAKgK,aAAehK,EAAKgK,WAAWyC,SACrC,MAAM,IAAI1J,MAAM,6BAA+B0N,KAAKC,UAAU1Q,EAAKF,SAEvEE,EAAKgK,WAAWsH,iBAAmBtR,EAAKgK,WAAWyC,SAASjD,OAASxJ,EAAKF,OAAOW,MAC7ET,EAAKgK,WAAWsH,iBAChB9a,KAAK6K,IAAK,wBAEV7K,KAAK6K,IAAK,sDAAqDrB,EAAKgK,WAAWyC,SAASjD,QAChG,CAEAtL,oBAAoBzB,EAAMuD,EAAMiB,EAAQK,GACpC,MAAMxB,EAAStJ,KAAK8P,MAAMtG,EAAKF,eACxBA,EAAOxH,OACdwH,EAAOlH,GAAKkH,EAAOY,QACnBZ,EAAOgC,SAAU,EACjBhC,EAAOnC,KAAOqC,EAAKlB,MACnBtI,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,YAAYiH,EAAKF,OAAOY,yBAC/ClK,KAAK8J,YAAY7D,EAAM,CAAE7D,GAAIpC,KAAK8J,YAAYvH,KAAM+G,UAAUmB,EAAQK,EAC1E,CAEApD,gBAAgBzB,EAAMuD,EAAMiB,EAAQK,GAChC,MAAMX,EAAKX,EAAK+B,2BAA6B/B,EAAKF,OAAOa,GAAK,EACxDC,EAAKZ,EAAK+B,2BAA6B/B,EAAKF,OAAOc,GAAK,EAE9DZ,EAAKlB,MAAMgC,UAAYd,EAAKlB,MAAMgC,UAAUzI,QAAOX,GAAKA,EAAEX,OAASiJ,EAAKF,OAAOnC,KAAK5G,QACpFiJ,EAAKlB,MAAMgC,UAAU5B,KAAK,CACtByB,KACAC,KACA7J,MAAOiJ,EAAKF,OAAOnC,KAAK5G,MACxBoB,OAAQ6H,EAAKF,OAAOnC,KAAK5E,KACzBgI,cAAef,EAAKF,OAAOiB,gBAE/B,MAAMwQ,EAAa/a,KAAKgb,UAAUxR,EAAKlB,MAAMoE,WAE7C1M,KAAK2K,gBAAgB1E,EAAM8U,EAAYvR,EAAKlB,OAC5CtI,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,kCAAkC4H,YAAaC,IAC1E,CAEA1C,2BAA2BzB,EAAMuD,EAAMiB,EAAQK,GAC3CL,EAAOH,UAAYG,EAAOH,UAAUzI,QAAOX,GAAKA,EAAEX,OAASiJ,EAAKF,OAAOnC,KAAK5G,QAC5EkK,EAAOH,UAAU5B,KAAK,CAClByB,GAAIX,EAAKF,OAAOa,GAChBC,GAAIZ,EAAKF,OAAOc,GAChB7J,MAAOiJ,EAAKF,OAAOnC,KAAK5G,MACxBoB,OAAQ6H,EAAKF,OAAOnC,KAAK5E,KACzBgI,cAAef,EAAKF,OAAOiB,gBAE/BvK,KAAK6K,IAAK,SAAQJ,EAAOlK,yCAAyCiJ,EAAKF,OAAOa,aAAaX,EAAKF,OAAOc,KAC3G,CAEA1C,kBAAkBzB,EAAMuD,EAAMiB,EAAQK,GAClC9K,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,wBACvBvC,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAKyT,KAAKlR,KAAMsF,MAAO2B,EAAKlB,MAAO/C,GAAIvF,KAAK4N,cACvE,CAEAlG,sBAAsBzB,EAAMuD,EAAMiB,EAAQK,GACtC,MAAMb,EAAQT,EAAKF,OAAOW,MAAQT,EAAKF,OAAOW,MAAQ,EAClDQ,EAAOrE,mBAAqBqE,EAAOpE,eACnCoE,EAAOrE,mBAAqBR,KAAK0U,IAAI7P,EAAOpE,aAAcoE,EAAOrE,mBAAqB6D,GACtFjK,KAAK6K,IAAK,SAAQJ,EAAOlK,0CAA0C0J,KAE3E,CAEAvC,uBAAuBzB,EAAMuD,EAAMiB,EAAQK,GACvCL,EAAO2M,aAAe5N,EAAKF,OAAOW,MAClCQ,EAAOrE,oBAAsBoD,EAAKF,OAAOW,MACzCjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,eAAeiH,EAAKF,OAAOW,uBACtD,CAEAvC,2BAA2BzB,EAAMuD,EAAMiB,EAAQK,GAC3CL,EAAOpE,cAAgBmD,EAAKF,OAAOW,MACnCjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,eAAeiH,EAAKF,OAAOW,2BACtD,CAEAvC,cAAczB,EAAMuD,EAAMiB,EAAQK,KACzBtB,EAAKlB,MAAM4N,QAAU1M,EAAKlB,MAAM4N,OAAS1M,EAAKF,OAAOW,SACtDT,EAAKlB,MAAM4N,OAAS1M,EAAKF,OAAOW,MAChCjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,mBAAmBiH,EAAKF,OAAOW,SAE9D,CAEAvC,eAAezB,EAAMuD,EAAMiB,EAAQK,GAC/B,MAAMmQ,EAAcjb,KAAKib,YAAYzR,EAAKlB,MAAM4S,QAAS1R,EAAK+B,4BAC9D,GAAI0P,EACA,OAEJzR,EAAKlB,MAAM4S,QAAU1R,EAAK+B,2BAC1B,MAAMrJ,EAAOsH,EAAK+B,2BAA6B,cAAgB,oBAC/DvL,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,QAAQL,IACnC,CAEAwF,oBAAoBzB,EAAMuD,EAAMiB,EAAQK,GAC/BtB,EAAKlB,MAAM6S,eACZ3R,EAAKlB,MAAM6S,cAAe,EAC1Bnb,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,yBAE/B,CAEAmF,cAAczB,EAAMuD,EAAMiB,EAAQK,GAC9B,IAAIjD,EAAQ2B,EAAKlB,MACjBT,EAAMgL,YAAa,EACnBhL,EAAMqL,WAAY,EAClB,MAAM6H,EAAa/a,KAAKgb,UAAUnT,EAAM6E,WACxC1M,KAAK6K,IAAK,GAAEhD,EAAMtF,oBAClBvC,KAAKob,QAAQ,CAAEhZ,GAAIpC,KAAKqb,KAAK9Y,KAAMsF,QAAO2N,KAAMuF,EAAWvG,UAAU9J,MAAO0L,aAAa,GAC7F,CAEA1O,0BAA0BzB,EAAMuD,EAAMiB,EAAQK,KACrCtB,EAAKlB,MAAMgT,oBAAsB9R,EAAKlB,MAAMgT,mBAAqB9R,EAAKF,OAAOW,SAC9ET,EAAKlB,MAAMgT,mBAAqB9R,EAAKF,OAAOW,MAC5CjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,sCAAsCiH,EAAKF,OAAOW,SAEjF,CAEAvC,gBAAgBzB,EAAMuD,EAAMiB,EAAQK,KAC3BtB,EAAKlB,MAAMiT,UAAY/R,EAAKlB,MAAMiT,SAAW/R,EAAKF,OAAOW,SAC1DT,EAAKlB,MAAMiT,SAAW/R,EAAKF,OAAOW,MAClCjK,KAAK6K,IAAK,GAAErB,EAAKlB,MAAM/F,8BAA8BiH,EAAKF,OAAOW,SAEzE,EAIJ,QChQA,MAAM+L,EAgBFtO,cAAczB,EAAMuD,EAAMiB,EAAQK,GAC9B7E,EAAKuN,WAAahK,EAClB,IAAI1B,EAAS,CAAC,EACd0B,EAAKgS,KAAOhS,EAAKgS,KAAOhS,EAAKgS,KAAOxb,KAAKyb,WAAW,GAEpD,OAAQ3T,EAAOmD,OAASnD,EAAOoD,IACvB1B,EAAKgS,OAASxb,KAAK0b,kBACnB5T,EAAS9H,KAAK2b,cAAc1V,EAAMuD,EAAMiB,EAAQK,GAE3CtB,EAAKgS,OAASxb,KAAK4b,sBACxB9T,EAAS9H,KAAK6b,kBAAkB5V,EAAMuD,EAAMiB,EAAQK,GAE/CtB,EAAKgS,OAASxb,KAAK8b,uBACxBhU,EAAS9H,KAAK+b,mBAAmB9V,EAAMuD,EAAMiB,EAAQK,GAEhDtB,EAAKgS,OAASxb,KAAKgc,iBACxBlU,EAAS9H,KAAKic,aAAahW,EAAMuD,EAAMiB,EAAQK,GAE1CtB,EAAKgS,OAASxb,KAAKkc,cACxBpU,EAAS9H,KAAKmc,UAAUlW,EAAMuD,EAAMiB,EAAQK,GAEvCtB,EAAKgS,OAASxb,KAAKoc,UACxBtU,EAAS9H,KAAKqc,MAAMpW,EAAMuD,EAAMiB,EAAQK,GAGxChD,EAAOoD,KAAM,EAEZpD,IAAYA,EAAOmD,MAASnD,EAAOoD,MACpClL,KAAKsc,SAAS9S,GAGtB,OAAO1B,CACX,CAEAJ,gBAAgB8B,GACZ,MAAM+S,EAAQvc,KAAKyb,WACblb,EAAQgc,EAAMC,QAAQhT,EAAKgS,MAKjC,OAJIjb,EAAQgc,EAAM1Y,OAAS,EACvB2F,EAAKgS,KAAOe,EAAMhc,EAAQ,GAE1BiJ,EAAKgS,KAAO,MACT,CAAC,CACZ,CAEA9T,qBAAqBzB,EAAMuD,EAAMiB,EAAQK,GACrC,MAAM2R,EAAW3R,EAASJ,MAAM7I,QAAOX,GAAKA,EAAEga,SAAWha,EAAE8K,SAC3D,OAAIxC,EAAKyM,SAASkF,cAAgB3R,EAAK0R,SAAWuB,EAAS5Y,OAAS,EACzD,CAAC,EAEP2F,EAAKoC,YAAepC,EAAKlC,QAU9BkC,EAAK0R,QAAU1R,EAAKoC,kBACZpC,EAAKoC,kBACLpC,EAAKlC,OACN,CAAC,GAZGtH,KAAKoI,aAAa,CACrBhG,GAAIpC,KAAKuH,MAAMhF,KACfmK,UAAW5B,EAAS4B,UACpBlD,OACAtH,KAAM,qBACNgF,MAAOuV,EACPjQ,QAAS,CAAC,CAAEtK,KAAM,UAO9B,CAEAwF,0BAA0BzB,EAAMuD,EAAMiB,EAAQK,GAC1C,GAAGtB,EAAKyM,SAAStI,WAAa3N,KAAK8N,cAE/B,OADA9N,KAAK6K,IAAK,8BAA6BrB,EAAKyM,SAAS1T,mCAC9C,CAAC2I,KAAI,GAGhB,GAAI1B,EAAK0R,QAEL,OADA1R,EAAK1H,OAAS0H,EAAK0R,QACZ,CAAC,EAGZ,GAAI1R,EAAK1H,OAAQ,CACb,MAAM+X,EAAgB7Z,KAAK6Z,cAAc/O,EAAUtB,EAAKyM,SAAUzM,EAAK1H,QACvE,MAAO,CAAEoJ,KAAM2O,EACnB,CAEA,GAAI/O,EAASmM,KAAKpT,OAAS,EAEvB,OADA2F,EAAK1H,OAASgJ,EAASmM,KAAK,GACrB,CAAC,EAGZ,GAAIzN,EAAKyM,SAAS9L,GAAK,EAEnB,OADAnK,KAAKyL,UAAUxF,EAAMuD,EAAKyM,UAAU,GAC7B,CAAC,EAGZ,GAAInL,EAAS8M,OAAO/T,OAAS,EAAG,CAE5B,GADA7D,KAAKyL,UAAUxF,EAAMuD,EAAKyM,UAAU,GAChCzM,EAAKsR,iBACL,MAAO,CAAC,EAEZ,MAAMjT,EAAQiD,EAAS8M,OAAO,GAC9B/P,EAAML,SAAWxH,KAAK8P,MAAMhF,EAAS0J,UAAUoD,QAC/CpO,EAAKyM,SAAS1Q,GAAK,IAAKiE,EAAKyM,SAASzO,SAAUtG,EAAG4J,EAAS0J,UAAUoD,OAAO1W,EAAGF,EAAG8J,EAAS0J,UAAUoD,OAAO5W,GAE7G,MAAM0b,EAAc1c,KAAK+H,6BAA6BF,EAAO7H,KAAK2c,eAC5DlU,EAAQ,GAOd,OANAA,EAAMC,KAAK,CAAEtG,GAAIpC,KAAK4c,UAAUra,KAAMsF,QAAOhF,MAAO,MAE/C6Z,EAAYxU,mBACbO,EAAMC,KAAK,CAAEtG,GAAIpC,KAAK8Z,YAAYvX,KAAMsF,QAAOtC,GAAIvF,KAAKyP,gBAE5DzP,KAAK+J,SAAStB,GACP,CAAC,CACZ,CAEA,OAAOzI,KAAKkL,IAAIT,EAAOiC,UAC3B,CAEAhF,qBAAqBoD,EAAUmL,EAAUnU,GACrC,OAAOA,EAAO4K,YAAc5B,EAAS4B,aAC5B5K,EAAOkK,QAAWiK,EAASqF,oBAAsBrF,EAASqF,mBAAqBxZ,EAAOkR,MACnG,CAEAtL,oBAAoBzB,EAAMuD,EAAMiB,EAAQK,GACpC,IAAI+L,GAAarN,EAAKqT,0BAChB7c,KAAK+H,6BAA6ByB,EAAKyM,SAAUjW,KAAK8c,gBAC5D,OAAIjG,GACArN,EAAKqT,0BAA2B,EACzB,CAAE5R,MAAM,IAEZ,CAAC,CACZ,CAEAvD,iBAAiBzB,EAAMuD,EAAMiB,EAAQK,GACjC,OAAKtB,EAAK1H,QAGV9B,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAK4c,UAAUra,KAAMsF,MAAO2B,EAAKyM,SAAU3N,MAAOkB,EAAK1H,OAAQe,OAAO,IAC9F7C,KAAKsc,SAAS9S,GACP,CAAEyB,MAAM,IAJJ,CAAC,CAKhB,CAEAvD,aAAazB,EAAMuD,EAAMiB,EAAQK,GAC7B,IAAKtB,EAAK1H,OACN,MAAO,CAAC,EAEZ,IAAIib,EAASvT,EAAK0M,OAAS1M,EAAK0M,OAAS1M,EAAKyM,SAAS9L,GACnDX,EAAK1H,OAAOyZ,UAAYwB,EAASvT,EAAK1H,OAAOyZ,WAC7CwB,EAAS,GACbvT,EAAK1H,OAAOsI,IAAM2S,EAClBvT,EAAK1H,OAAO4Y,UAAYqC,EAGxBA,EAASvT,EAAK1H,OAAOqI,GACjBX,EAAKyM,SAASsF,UAAYwB,EAASvT,EAAKyM,SAASsF,WACjDwB,EAAS,GACbvT,EAAKyM,SAAS7L,IAAM2S,EACpBvT,EAAKyM,SAASyE,UAAYqC,EAE1B,MAAMC,GAAgBxT,EAAK0M,QAAUlW,KAAK+L,WAAWvC,EAAK1H,SAAW0H,EAAKyM,SAASC,QAAU1M,EAAK1H,OAAOsI,GAAK,EAC9GpK,KAAKyL,UAAUxF,EAAMuD,EAAKyM,UAAU,GACpC,IAAIxN,EAAQ,GACZ,MAAM5F,EAAQma,EACd,IAAIC,EAAoB,GAuBxB,OArBKzT,EAAK0M,QAAU1M,EAAKyM,SAAS7L,GAAK,IACnC6S,EAAoBjd,KAAKwa,YAAYhR,EAAKyM,UAAU,IAEpDzM,EAAK1H,OAAOsI,GAAK,IACjB3B,EAAQzI,KAAKwa,YAAYhR,EAAK1H,OAAQe,IAE1C7C,KAAKyL,UAAUxF,EAAMuD,EAAKyM,UAAU,GAEhC+G,IACAhd,KAAKoZ,cAAgBpZ,KAAKoZ,cAAcvX,QAAOX,GAAKA,EAAEX,QAAUiJ,EAAKyM,SAAS1V,QAC9EkI,EAAMC,KAAK,CACPtG,GAAIpC,KAAKgW,OAAOzT,KAAMiZ,KAAMxb,KAAK8b,uBACjC7F,SAAUzM,EAAKyM,SAAUvJ,UAAWlD,EAAKyM,SAASvJ,UAClDwJ,OAAQ1M,EAAKyM,SAASC,OAAQrT,OAAO,KAIzCoa,EAAkBpZ,OAAS,IAC3B4E,EAAQA,EAAMS,OAAO+T,IAEzBjd,KAAK+J,SAAStB,GACP,CAAC,CACZ,GACHiD,EAAAA,EAAAA,GAxMKsK,EAAM,oBACmB,sBAAmBtK,EAAAA,EAAAA,GAD5CsK,EAAM,wBAEuB,0BAAuBtK,EAAAA,EAAAA,GAFpDsK,EAAM,yBAGwB,2BAAwBtK,EAAAA,EAAAA,GAHtDsK,EAAM,mBAIkB,qBAAkBtK,EAAAA,EAAAA,GAJ1CsK,EAAM,gBAKe,kBAAetK,EAAAA,EAAAA,GALpCsK,EAAM,YAMW,cAAWtK,EAAAA,EAAAA,GAN5BsK,EAAM,aAOY,CAPlBA,EAQO0F,kBARP1F,EASO4F,sBATP5F,EAUO8F,uBAVP9F,EAWOgG,iBAXPhG,EAYOkG,cAZPlG,EAaOoG,YA8Lb,QC3MA,MAAMc,EAMFxV,iBAAiBzB,GACTjG,KAAKmd,aACLnd,KAAKod,cAAgB,EACrBpd,KAAKqd,gBAAkB,IAG3BpX,EAAKE,QAAUnG,KAAKsd,aAAarX,GAAM,EAAMA,EAAKsX,iBAClDtX,EAAKK,QAAUtG,KAAKsd,aAAarX,GAAM,EAAOA,EAAKuX,iBACnDvX,EAAKyG,WAAY1M,KAAKmd,YAAsD,GAAjCvX,KAAK+K,MAAsB,EAAhB/K,KAAK6X,UAC3DxX,EAAKyX,OAAS,CAACzX,EAAKM,KAAK2H,YAAajI,EAAKM,KAAK0H,aAAchI,EAAKM,KAAKmH,YAAazH,EAAKM,KAAKsH,cAE/F,MAAM8P,EAAiB1X,EAAKyG,UAAYzG,EAAKE,QAAUF,EAAKK,QAC5DL,EAAKwE,OAASkT,EACd1X,EAAKI,aAAe,EACpBsX,EAAevG,aAAe,EAE9B,IAAI3O,EAAQ,GACZ,IAAK,IAAIgJ,EAAI,EAAGA,EAAIzR,KAAKqd,gBAAiB5L,IACtChJ,EAAQA,EAAMS,OAAO,CACjB,CAAE9G,GAAIpC,KAAK8Z,YAAYvX,KAAM0C,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAK4N,aAAclB,WAAW,GACxF,CAAEtK,GAAIpC,KAAK8Z,YAAYvX,KAAM0C,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAK4N,aAAclB,WAAW,KAGhG1M,KAAK+J,SAAStB,EAClB,CAEAf,oBAAoBzB,EAAMyG,EAAWkR,GACjC,MAAMnJ,EAAOzU,KAAK6d,WAAW5X,EAAMyG,EAAWkR,GAExC9V,EAAS,CACX4E,YAAW+H,OAAMmD,OAAQ,GAAI1L,KAAM,GAAIxB,MAAO,GAAIuJ,MAAO,GAAIgD,KAAM,GAAI6G,MAAO,GAAIxT,UAAW,GAC7FjE,aAAcrG,KAAKod,cAAehX,mBAAoB,EAAGgR,YAAa,EAAG7W,MAAOmM,EAAY,IAAM,IAClG8H,UAAW,CACPC,KAAM/H,EAAYzG,EAAKM,KAAK+H,YAAcrI,EAAKM,KAAKqJ,YACpDgI,OAAQlL,EAAYzG,EAAKM,KAAK6I,cAAgBnJ,EAAKM,KAAKmJ,cACxDxD,KAAMQ,EAAYzG,EAAKM,KAAK2H,YAAcjI,EAAKM,KAAKmH,YACpDhD,MAAOgC,EAAYzG,EAAKM,KAAK0H,aAAehI,EAAKM,KAAKsH,aACtDoG,MAAOvH,EAAYzG,EAAKM,KAAKgI,aAAetI,EAAKM,KAAKsJ,aACtDoH,KAAMvK,EAAYzG,EAAKM,KAAK+I,YAAcrJ,EAAKM,KAAKoJ,YACpDmO,MAAO,CAAC,IAGhB,OAAOhW,CACX,CAEAJ,kBAAkBzB,EAAMyG,EAAWkR,GAC/B,IAAI9V,EAAS,GAoBb,OAlBA8V,EAASG,MAAM,KAAK9Z,SAAQ+Z,IACxB,MAAMC,EAAOD,EAAKD,MAAM,KAClBG,EAAWC,SAASF,EAAK,IACzB7b,EAAK6b,EAAK,GAEV9W,EAAOlB,EAAKmY,SAASpZ,MAAK9D,GAAKA,EAAEkB,IAAMA,IAC7C,IAAK+E,EACD,MAAM,IAAIoF,MAAM,6BAA+BnK,GACnD,IAAK,IAAIqP,EAAI,EAAGA,EAAIyM,EAAUzM,IAC1B3J,EAAOY,KAAK1I,KAAKma,WAAWhT,EAAK/E,GAAIsK,GAAW,IAGxD1M,KAAKqe,iBAAiBpY,EAAM6B,GAEvB7B,EAAK4S,OACN/Q,EAAS9H,KAAKse,WAAWxW,IAGtBA,CACX,CAEAJ,wBAAwBzB,EAAMwO,GAC1B,MAAM8J,EAAc,MACpB,IAAIC,EAAYvY,EAAKwY,YAAYC,MAAMX,MAAM,KAAKlc,QAAOX,GAAKA,EAAEqI,SAASgV,KAAcxV,KAAI7H,GAASA,EAAEmJ,QAAQkU,EAAa,MAC3HC,EAAUva,SAAQ0a,IACd,MAAMC,EAAYnK,EAAKzP,MAAK9D,GAAKA,EAAEkB,KAAOuc,IACtCC,IACAA,EAAUxc,IAAMmc,EAAW,GAEvC,CAEA7W,kBAAkBR,GACd,OAAOA,EAAM2X,MAAK,IAAMjZ,KAAK6X,SAAW,IAC5C,CAEA/V,gBAAgBzB,EAAMuD,GAIlB,GAHIxJ,KAAKmd,aACL3T,EAAKlC,OAAS,CAAC,IAEdkC,EAAKlC,OACN,OAAOtH,KAAKoI,aACR,CACIhG,GAAIpC,KAAKuH,MAAMhF,KACfmK,WAAW,EACXlD,OACAtH,KAAM,iCACNsK,QAAS,CAAC,CAAEpK,GAAI,MAAOF,KAAM,OAAS,CAAEA,KAAM,SAGnD,CACH,IAAIuG,EAAQ,GACZ,GAAuB,QAAnBe,EAAKlC,OAAOlF,GAAc,CAC1B6D,EAAKE,QAAQsO,KAAOzU,KAAKse,WAAWrY,EAAKE,QAAQsO,KAAKvL,OAAOjD,EAAKE,QAAQ+F,OAC1E,MAAM4S,EAAY7Y,EAAKE,QAAQ+F,KAAKnD,KAAI7H,GAAKA,EAAEX,QAC/C0F,EAAKiB,MAAQjB,EAAKiB,MAAMrF,QAAOX,IAAM4d,EAAUvV,SAASrI,EAAEX,SAC1D0F,EAAKE,QAAQ+F,KAAO,GAEpB,IAAK,IAAIuF,EAAI,EAAGA,EAAIzR,KAAKqd,gBAAiB5L,IACtChJ,EAAMC,KAAK,CAAEtG,GAAIpC,KAAK8Z,YAAYvX,KAAM0C,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAK4N,aAAclB,WAAW,GAC3G,CAGAjE,EAAQA,EAAMS,OAAOlJ,KAAK+e,iBAAiB9Y,IAE3CwC,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKqZ,oBAAoB9W,KAAMmK,WAAW,IAC3DjE,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKqZ,oBAAoB9W,KAAMmK,WAAW,IAE3DjE,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKgf,SAASzc,KAAMmK,UAAWzG,EAAKyG,YACrD1M,KAAK+J,SAAStB,EAClB,CACJ,CAEAf,wBAAwBzB,EAAMgZ,GAAU,GACpC,IAAIxW,EAAQ,GAEZ,IAAK,IAAIgJ,EAAI,EAAGA,EAAIzR,KAAKkf,kBAAmBzN,IACxChJ,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKyT,KAAKlR,KAAM0C,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAKqP,eAAgB3C,WAAW,IAC9FjE,EAAMC,KAAK,CAAEtG,GAAIpC,KAAKyT,KAAKlR,KAAM0C,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAKqP,eAAgB3C,WAAW,IAQlG,OALIuS,IACAhZ,EAAKE,QAAQ8Q,KAAO,CAACjX,KAAKsU,WAAWtU,KAAKma,WAAW,WAAW,EAAMna,KAAKuP,gBAC3EtJ,EAAKK,QAAQ2Q,KAAO,CAACjX,KAAKsU,WAAWtU,KAAKma,WAAW,WAAW,EAAOna,KAAKuP,iBAGzE9G,CACX,GACHiD,EAAAA,EAAAA,GA7IKwR,EAAK,kBAEkB,IAACxR,EAAAA,EAAAA,GAFxBwR,EAAK,gBAGgB,IAACxR,EAAAA,EAAAA,GAHtBwR,EAAK,oBAIoB,GA2I/B,QCjJA,MAAM3V,EAEFG,aAAazB,EAAMuD,GACf,IAAIA,EAAKA,KACL,MAAM,IAAI+C,MAAM,0CAEpB,OAAI/C,EAAKkD,UAGJzG,EAAKsB,OAAUtB,EAAKsB,MAAMiC,OAAUvD,EAAKsB,MAAMiC,KAAKoC,YAAe3F,EAAKsB,MAAMiC,KAAKlC,aAKxFtH,KAAKmf,eAJDlZ,EAAKsB,MAAQiC,EACN,CAAEyB,MAAM,IAJRjL,KAAKof,cAAcnZ,EAAKuD,EAQvC,CAEA9B,4BACY1H,KAAKiG,KAAKsB,aACVvH,KAAKiG,KAAKqB,cACVtH,KAAKiG,KAAK2F,kBACV5L,KAAKiG,KAAKoZ,oBACVrf,KAAKiG,KAAKqZ,cACtB,EAIJ,QCzBA,MAAM7W,EAGFf,mBAAmBzB,GACf,GAAIA,EAAKiF,IAEL,OADAjF,EAAKwC,MAAQ,GACNxC,EAGX,IAAIuD,EAAOvD,EAAKwC,MAAM,GACtBxC,EAAKqQ,UAAU9M,EACf,IAAIiI,EAAI,EAER,MAAOjI,GAAQiI,EAAI,IAAK,CACpB,MAAM/E,EAAYlD,EAAKkD,UAAYlD,EAAKkD,UAClClD,EAAK3B,OAAS2B,EAAK3B,MAAM6E,UAAYlD,EAAK3B,MAAM6E,UAC5ClD,EAAKkD,UACTjC,EAASiC,EAAYzG,EAAKE,QAAUF,EAAKK,QACzCwE,EAAW4B,EAAYzG,EAAKK,QAAUL,EAAKE,QAEjD,IAAIoZ,EAActZ,EAAKwC,MAAMM,KAAI7H,GAAKA,EAAEkB,KAAIsH,KAAK,MACjD,IAAI1J,KAAKwJ,EAAKpH,IACV,MAAM,IAAImK,MAAO,6BAA4B0N,KAAKC,UAAU1Q,MAChE,MAAM1B,EAAS9H,KAAKwJ,EAAKpH,IAAI6D,EAAMuD,EAAMiB,EAAQK,GAGjD,GAFAyU,EAActZ,EAAKwC,MAAMM,KAAI7H,GAAKA,EAAEkB,KAAIsH,KAAK,MAEzC5B,GAAUA,EAAOmD,KACjB,OAAOhF,EAIX,GAFAA,EAAKwC,MAAQxC,EAAKwC,MAAM5G,QAAOX,GAAIA,EAAEX,QAAUiJ,EAAKjJ,QAEhDiJ,EAAK3G,MAEL,OADAoD,EAAK0S,MAAsB,IAAfnP,EAAK3G,MAAiB7C,KAAK6C,MAAQ2G,EAAK3G,MAC7CoD,EAGXuD,EAAOvD,EAAKwC,MAAM,GAClBgJ,GACJ,CAKA,OAHIzR,KAAKkZ,oBACLlZ,KAAKwf,eAAevZ,GAEjBA,CACX,CAEAyB,qBAAqBe,GACjBA,EAAMxE,SAAQ/C,IACVA,EAAEX,MAAQP,KAAKyf,UACfzf,KAAKyf,WAAW,GAExB,CAEA/X,eAAe8B,GAAQ,OAAOxJ,KAAK+J,SAAS,CAACP,GAAQ,CACrD9B,gBAAgBe,GAIZ,OAHAzI,KAAKkZ,oBAAqB,EAC1BlZ,KAAK0f,cAAcjX,GACnBzI,KAAKiG,KAAKwC,MAAQzI,KAAKiG,KAAKwC,MAAMS,OAAOT,GAClC,CAAC,CACZ,CAEAf,oBAAoB8B,GAAQ,OAAOxJ,KAAK6I,cAAc,CAACW,GAAQ,CAC/D9B,qBAAqBe,GAIjB,OAHAzI,KAAKkZ,oBAAqB,EAC1BlZ,KAAKiG,KAAKwC,MAAQA,EAAMS,OAAOlJ,KAAKiG,KAAKwC,OACzCzI,KAAK0f,cAAcjX,GACZ,CAAEwC,MAAM,EACnB,CAEAvD,mBAAmB8B,GAAQ,OAAOxJ,KAAKkX,aAAa,CAAC1N,GAAQ,CAC7D9B,oBAAoBe,GAChBzI,KAAKkZ,oBAAqB,EAC1B,MAAMyG,EAAQ3f,KAAKiG,KAAKwC,MAAMqM,OAAO,EAAE,GAAG,GAG1C,OAFA9U,KAAKiG,KAAKwC,MAAQ,CAACkX,GAAOzW,OAAOT,GAAOS,OAAOlJ,KAAKiG,KAAKwC,OACzDzI,KAAK0f,cAAcjX,GACZ,CAAEwC,MAAM,EACnB,CAEAvD,kBAAkBzB,GACdA,EAAK8S,2BAA0B,EAC/B/Y,KAAK4f,YAAY3Z,EACrB,GACHyF,EAAAA,EAAAA,GAlFKjD,EAAK,YACU,GAoFrB,QCvFA,MAAM8T,EAEF7U,YAAYmY,GACRC,MAAMD,EACV,CAEAnY,cAAgB,CAEhBA,aAAaqY,GAAO,OAAOC,OAAOC,OAAO,CAAC,EAAGF,EAAM,CAEnDrY,mBAAmBwY,EAAKH,EAAKI,GACzB,MAAMC,EAAS,CAAC,SAAU,OAAQ,aAClCF,EAAIjc,SAAQoc,IACRL,OAAOM,oBAAoBD,GAAGpc,SAAQsc,IAClC,IAAKH,EAAO7W,SAASgX,GAAS,CAC1B,GAAIR,EAAIQ,KAAYJ,EAChB,MAAM,IAAI5T,MAAO,gCAA+B8T,EAAE9d,QAAQge,KAG1DR,EAAIQ,GAAUF,EAAEE,EAExB,IACF,GAEV,CAGA7Y,WAAWxF,GAAQlC,KAAKiG,KAAKc,KAAO7E,EAAO,OAASlC,KAAKiG,KAAKc,IAAM,CAGpEW,cAAcxG,GAAK,OAAOA,EAAI,GAAK,CAAE,CAGrCwG,gCAAgC6U,EAAOhc,EAAOigB,GAC1C,OAAKjE,EAGAiE,EAGDjgB,GAASgc,EAAM1Y,OACR0Y,EAAMrT,OAAOsX,GAEpBjgB,EAAQ,GAAKA,GAASgc,EAAM1Y,OACrB2c,EAAKtX,OAAOqT,GAEhB,IAAIA,EAAMkE,MAAM,EAAGlgB,MAAWigB,KAASjE,EAAMkE,MAAMlgB,IAR/Cgc,EAHAiE,CAYf,CAEA9Y,yBAAyB6U,GACrB,OAAOA,EAAMzH,OAAO,EAAG,GAAG,EAC9B,CAEApN,qBAAqB6U,EAAOpV,GACxB,OAAOoV,EAAM1a,QAAOX,GAAKA,EAAEX,QAAU4G,EAAK5G,OAC9C,CAEAmH,aAAa6U,EAAOpV,GAChB,GAAIoV,IAAUA,EAAMhT,UAASrI,GAAKA,EAAEX,QAAU4G,EAAK5G,QAC/C,OAAOgc,EAAMrT,OAAO,CAAC/B,GAC7B,CAEAO,mBAAmBgZ,EAAUC,GACzB,YAAiBtG,IAAbqG,IAA2BC,GAExBD,GAAYC,CACvB,EAIJ,QCtEA,MAAMC,EAEFlZ,iBAAiBzB,EAAMuD,GACnBvD,EAAK2S,UAAYpP,EAAKS,KAC1B,CAEAvC,oBAAoBzB,EAAMuD,GACtBvD,EAAK8R,WAAa,CACd7V,KAAMsH,EAAKtH,KACXsF,SAAUxH,KAAK8P,MAAM7J,EAAKM,KAAKsI,WAEnC5I,EAAK8R,WAAWxS,GAAKvF,KAAK8P,MAAM7J,EAAKM,KAAKsI,UAC1C5I,EAAK8R,WAAWvQ,SAASpG,OAAS,CACtC,CAEAsG,iBAAiBzB,EAAMuD,GACnB,IAAKA,EAAK3B,OAAS7H,KAAKoZ,cAAcpU,MAAK9D,GAAKA,EAAEX,QAAUiJ,EAAK3B,MAAMtH,QAEnE,YADAiJ,EAAK3G,MAAQ,MAIjB7C,KAAKsU,WAAW9K,EAAK3B,OACrB7H,KAAKoZ,cAAc1Q,KAAKc,EAAK3B,OAC7B,MAAM3C,EAAcsE,EAAKlB,MAAQrC,EAAKM,KAAKwI,kBAAoB9I,EAAKM,KAAKuI,oBACzEtF,EAAK3B,MAAMtC,GAAKvF,KAAK8P,MAAM5K,GAC3BsE,EAAK3B,MAAMtC,GAAGH,SAAW,EACzBoE,EAAK3B,MAAM6M,OAAS,GACpBlL,EAAK3B,MAAMsN,OAAQ,EAEf3L,EAAKlB,QACLtI,KAAKsU,WAAW9K,EAAKlB,OACrBtI,KAAKoZ,cAAc1Q,KAAKc,EAAKlB,OAC7BkB,EAAKlB,MAAM/C,GAAKvF,KAAK8P,MAAM7J,EAAKM,KAAK0I,oBACrCzF,EAAKlB,MAAM/C,GAAGH,SAAW,EACzBoE,EAAKlB,MAAMoM,OAAS,GACpBlL,EAAKlB,MAAM6M,OAAQ,GAGnB3L,EAAKtH,MACLlC,KAAK6gB,aAAa5a,EAAMuD,EAChC,CAEA9B,6BAA6BzB,EAAMuD,EAAMiB,GACrCjB,EAAK3B,MAAQ7H,KAAK8Z,YAAY7T,EAAMuD,EAAMiB,GAC1CjB,EAAK3G,OAAQ,EACb7C,KAAK4c,UAAU3W,EAAMuD,EACzB,CAEA9B,uBAAuBzB,EAAMuD,GACzBA,EAAK3B,MAAMiZ,OAAStX,EAAKuX,OACzBvX,EAAK3B,MAAMmZ,OAASxX,EAAKtH,KACzBsH,EAAK3B,MAAMsN,OAAQ,EACd3L,EAAKuX,SACN/gB,KAAK6K,IAAK,mBAAkBrB,EAAK3B,MAAMtF,UAAUiH,EAAKtH,QACtDlC,KAAK+V,YAAY,CAAE3T,GAAIpC,KAAK6J,gBAAgBtH,KAAMsF,MAAO2B,EAAK3B,MAAOkZ,QAAQ,EAAMle,OAAO,IAElG,EAIJ,QC5DA,MAAMoe,EACFvZ,uBAAyB,OAAO1H,KAAKgb,UAAUhb,KAAKiG,KAAKyG,UAAY,CACrEhF,iBAAiBgF,GAAa,OAAOA,EAAY1M,KAAKiG,KAAKE,QAAUnG,KAAKiG,KAAKK,OAAS,CACxFoB,+BAAiC,OAAO1H,KAAKkhB,YAAYlhB,KAAKiG,KAAKyG,UAAY,CAC/EhF,mBAAmBgF,GAAa,OAAOA,EAAYyU,EAAAA,EAAOlb,KAAKK,QAAU6a,EAAAA,EAAOlb,KAAKE,OAAS,CAI9FuB,gBAAgBzB,EAAMuD,EAAMiB,GACxB,IAAIoM,GAAarN,EAAKsN,oBAChB9W,KAAKgZ,2BAA2BvO,EAAOC,MAAO1K,KAAKohB,aAGzD,GAFA5X,EAAKsN,oBAAqB,EAEtBD,EAEA,OADA7W,KAAK+J,SAAS,CAAC,CAAE3H,GAAIpC,KAAKqZ,oBAAoB9W,KAAMmK,WAAW,GAAQ,CAAEtK,GAAIpC,KAAKqZ,oBAAoB9W,KAAMmK,WAAW,EAAO7J,OAAO,KAC9H,CAAEoI,MAAM,GAGnBhF,EAAKyG,WAAazG,EAAKyG,UACvBzG,EAAKwE,OAASzK,KAAKqhB,gBACnB,MAAMC,EAAWrb,EAAKyG,UAAY,IAAM,IACxC1M,KAAKuhB,WAAWtb,GAEhB,MAAMub,EAASvb,EAAKyG,UAAY1M,KAAKyhB,sBAAsBlf,KAAOvC,KAAK8Z,YAAYvX,KAE7EkG,EAAQ,CACV,CAAErG,GAAIpC,KAAK4Y,UAAUrW,KAAM0H,MAAO,uBAAyBqX,EAAU5U,UAAWzG,EAAKyG,UAAW7J,OAAO,GACvG,CAAET,GAAIof,EAAQ9U,UAAWzG,EAAKyG,UAAWzH,KAAMjF,KAAKwP,aAAcjK,GAAIvF,KAAK4N,eAG/E5N,KAAK+J,SAAStB,GAEdzI,KAAK0hB,oBAAoBzb,GAErBA,EAAKwE,OAAOpE,aAAe,EAC3BJ,EAAKwE,OAAOpE,aAAe,EACtBJ,EAAKwE,OAAOpE,aAAe,KAChCJ,EAAKwE,OAAOpE,cAAgB,GAEhCJ,EAAKwE,OAAOrE,mBAAqBH,EAAKwE,OAAOpE,aAAeJ,EAAKwE,OAAO2M,YACxEnR,EAAKI,aAAeT,KAAKkN,IAAI7M,EAAKE,QAAQC,mBAAoBH,EAAKE,QAAQE,aAAcJ,EAAKK,QAAQF,mBAAoBH,EAAKK,QAAQD,cAAgB,EAGvJJ,EAAKwE,OAAOC,MAAMxB,OAAOjD,EAAKwE,OAAOwM,MAChChT,SAAQ/C,GAAKlB,KAAKyL,UAAUxF,EAAM/E,GAAG,KAE1ClB,KAAK2hB,qBAEL,MAAMC,EAAW3b,EAAKwE,OAAOwM,KAAKpT,OAAS,EAAIoC,EAAKwE,OAAOwM,KAAK,GAAG7M,GAAK,MAAQ,IAChFpK,KAAK6hB,YACL7hB,KAAK6K,IAAK,WAAU7K,KAAK6hB,wBAAwBP,MAAarb,EAAKwE,OAAOrE,iCAAiCH,EAAKwE,OAAOmN,OAAO/T,kBAAkB+d,UAEhJ5hB,KAAKgZ,2BAA2B/S,EAAKwE,OAAOC,MAAO1K,KAAK8hB,aAC5D,GACHpW,EAAAA,EAAAA,GAtDKuV,EAAI,YAMa,GAmDvB,QCvDA,MAAMpI,EAGFnR,iBAAiBzB,GAAQ,MAAO,IAAKA,EAAKM,KAAKC,UAAWtF,EAAG+E,EAAKM,KAAKpF,MAAQ,EAAI,IAAKA,MAAO,IAAO,CAEtGuG,mBAAmBzB,GACf,MAAM8b,EAAa,wGACnB9b,EAAKe,UAAY+a,EACZhE,MAAM,KACNhV,KAAIiZ,IAAiB,IAAK/b,EAAKM,KAAKyb,GAAOtV,UAAWsV,EAAKC,WAAW,WAAY7f,GAAI4f,MAE3F/b,EAAKe,UAAU0B,KAAK,IAAKzC,EAAKM,KAAKC,UAAWkG,WAAW,EAAMtK,GAAI,cACnE6D,EAAKe,UAAU0B,KAAK,IAAKzC,EAAKM,KAAKM,QAAS6F,WAAW,EAAOtK,GAAI,YAClE6D,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,eACrBlB,EAAG+E,EAAKM,KAAKkI,aAAavN,EAAI,GAAIC,MAAO8E,EAAKM,KAAKkI,aAAatN,MAAQ,GACxEH,EAAGiF,EAAKM,KAAKkI,aAAazN,EAAI,GAAII,OAAQ6E,EAAKM,KAAKkI,aAAarN,OAAS,KAE9E6E,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,gBACrBlB,EAAG+E,EAAKM,KAAKK,cAAc1F,EAAI,GAAIC,MAAO8E,EAAKM,KAAKK,cAAczF,MAAQ,GAC1EH,EAAGiF,EAAKM,KAAKK,cAAc5F,EAAI,GAAII,OAAQ6E,EAAKM,KAAKK,cAAcxF,OAAS,IAEpF,CAEAsG,gBAAgBzB,GACZjG,KAAK+J,SAAS/J,KAAK+e,iBAAiB9Y,GAAM,GAC9C,CAEAyB,oBAAoBzB,GAChB,GAAIA,EAAKic,SACL,OAEJjc,EAAKkc,SAAWlc,EAAKkc,SAAWlc,EAAKkc,SAAW,EAE5Clc,EAAKmB,cAAgBnB,EAAKmB,aAAagb,OACvCnc,EAAKkc,WACLlc,EAAKmB,aAAagb,MAAO,GAG7B,IAAI5G,EAAOxb,KAAKqiB,UAAUpc,EAAKkc,UAC1B3G,IAGDxb,KAAKsiB,aAAarc,EAAMuV,IACxBvV,EAAKkc,WAGT3G,EAAOxb,KAAKqiB,UAAUpc,EAAKkc,UACtB3G,IAAQA,EAAK+G,SAGlB/G,EAAK+G,QAAS,EACd/G,EAAKgH,OAAOxiB,KAAMiG,IACtB,CAEAyB,oBAAoBzB,EAAMuV,GACtB,IAAKA,EAAK+G,QAAUtc,EAAKkc,SAAW,GAAKniB,KAAKqiB,UAAUxe,OACpD,OAAO,EAEX,MAAMyY,EAAWtc,KAAKqiB,UAAUpc,EAAKkc,SAAW,GAC1C3Y,EAAOvD,EAAKwC,MAAM5E,OAAS,EAAIoC,EAAKwC,MAAM,GAAK,KACrD,OAAO6T,EAAS1I,WAAW5T,KAAMiG,EAAMuD,EAC3C,CAEA9B,wBAAwB+a,EAASxc,GAC7B,OAAOA,EAAKE,QAAQ+F,KAAKrI,OAAS,IAAMoC,EAAKE,QAAQ+F,KAAK,GAAG3G,IAAMkd,EAAQrJ,cAAcvV,OAAS,CACtG,CA4FA6D,mBAAmBsa,GAGf,OAFKhiB,KAAK0iB,SAASC,OACf3iB,KAAK0iB,SAASC,KAAO3iB,KAAK0iB,SAASE,IAChC5iB,KAAK0iB,SAASC,KAAKX,EAC9B,GA8wBHtW,EAAAA,EAAAA,GAj7BKmN,EAAI,kBACmB,IAACnN,EAAAA,EAAAA,GADxBmN,EAAI,oBAEqB,IAACnN,EAAAA,EAAAA,GAF1BmN,EAAI,WAqEY,CACd8J,KAAM,KACNE,GAAI,CACAC,QAAS,yBACTrO,KAAM,2CACNsO,SAAU,6IACVC,WAAY,sHACZC,QAAS,6EACTC,KAAM,kDACNC,cAAe,4EACfC,SAAU,mGACVC,SAAU,yHACVC,cAAe,8HACfC,eAAgB,wHAChBC,eAAgB,uKAChBC,WAAY,wGACZC,OAAQ,8GACRC,cAAe,sFACfC,WAAY,gEACZ5N,OAAQ,sGACR6N,OAAQ,gEACRC,UAAW,4EACXC,UAAW,uGACXC,WAAY,kEACZC,WAAY,8EACZC,aAAc,qDACdC,aAAc,iDACdC,UAAW,wDACXC,SAAU,qDACVC,UAAW,6DACXC,WAAY,6HACZC,QAAS,oHACTC,OAAQ,4FACRC,cAAe,2HACfC,QAAS,8FACTC,aAAc,kEACdC,MAAO,iHACPC,SAAU,oCACVC,QAAS,mDACTC,UAAW,qDACXC,UAAW,2EACXC,UAAW,8CACXC,aAAc,uJACdC,UAAW,8GAEfxC,GAAI,CACAE,QAAS,6BACTrO,KAAM,2CACNsO,SAAU,uLACVC,WAAY,yIACZC,QAAS,iGACTC,KAAM,yDACNC,cAAe,gFACfC,SAAU,sGACVC,SAAU,yIACVC,cAAe,yJACfC,eAAgB,4IAChBC,eAAgB,8MAChBC,WAAY,2HACZC,OAAQ,sGACRC,cAAe,qGACfC,WAAY,yEACZ5N,OAAQ,iHACR6N,OAAQ,kFACRC,UAAW,iFACXC,UAAW,gJACXC,WAAY,yFACZC,WAAY,uFACZC,aAAc,kEACdC,aAAc,uDACdC,UAAW,mFACXC,SAAU,+DACVC,UAAW,+EACXC,WAAY,2IACZC,QAAS,+HACTC,OAAQ,iHACRC,cAAe,kJACfC,QAAS,8GACTC,aAAc,8EACdC,MAAO,wHACPC,SAAU,kCACVC,QAAS,4DACTC,UAAW,4DACXC,UAAW,sGACXC,UAAW,0EACXC,aAAc,2MACdC,UAAW,2EAElB1Z,EAAAA,EAAAA,GA7JCmN,EAAI,YAqKa,CACf,CAEIjF,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACdme,EAAQ4C,YAAYpf,GACpBA,EAAKmB,aAAe,IACbqb,EAAQ6C,UAAUrf,GACrB/D,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKE,QAAQE,aAAe,EAC5BJ,EAAKE,QAAQiR,YAAc,EAC3BnR,EAAKK,QAAQD,aAAe,EAC5BJ,EAAKK,QAAQ8Q,YAAc,EAC3BnR,EAAKE,QAAQsO,KAAK,GAAGrS,GAAK,WAC1B6D,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,eAARA,EAAEkB,IAAgC,gBAATlB,EAAEkB,KACvE6D,EAAKyG,WAAY,EACjBzG,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAK+H,aAC/CpM,KAAMugB,EAAQ8C,YAAY,QAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,IACjBiZ,EAAQgD,iBAAiBhD,EAASxc,GAE7Cuc,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbnB,EAAKM,KAAK0H,aAAcjN,EAAGiF,EAAKM,KAAK0H,aAAajN,EAAoC,IAAhCiF,EAAKM,KAAK0H,aAAa7M,OAAeskB,UAAU,EAAMvT,KAAM,EACrHjQ,KAAMugB,EAAQ8C,YAAY,aAE9Btf,EAAKmB,aAAauL,MAAQ8P,EAAQ7P,SAAS3M,EAAKmB,aAAcnB,EAAKM,KAAK0H,aAAc,EAAE,GAGhG,CAEI2F,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQpH,KAAK9Y,KAC/EigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAgD,IAA9BvD,EAAKE,QAAQuE,MAAM7G,SAAiBoC,EAAKE,QAAQuE,MAAM,GAAGnF,GACxGid,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,SAAU,IAA2B,IAAtBvB,EAAKM,KAAK+G,WACpFpL,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,iBAARA,EAAEkB,KAC9C6D,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAKK,eAAgB8e,UAAU,EACzExjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQzD,SAASzc,KACnFigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,EACrB1f,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,gBACrBlB,EAAG+E,EAAKM,KAAKK,cAAc1F,EAAI,GAAIC,MAAO8E,EAAKM,KAAKK,cAAczF,MAAQ,GAC1EH,EAAGiF,EAAKM,KAAKK,cAAc5F,EAAI,GAAII,OAAQ6E,EAAKM,KAAKK,cAAcxF,OAAS,IAC9E,GAGV,CAEIwS,WAAYA,CAAC6O,EAASxc,EAAMuD,IACjBiZ,EAAQgD,iBAAiBhD,EAASxc,GAE7Cuc,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,QAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBvD,EAAK2f,WACnDpD,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,aAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbnB,EAAK2f,WAAWpe,SAAUxG,EAAGiF,EAAK2f,WAAWpe,SAASxG,EAAsC,IAAlCiF,EAAK2f,WAAWpe,SAASpG,OAAeA,OAA0C,IAAlC6E,EAAK2f,WAAWpe,SAASpG,OAAesT,OAAQ,IAC7JxS,KAAMugB,EAAQ8C,YAAY,iBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,aAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbnB,EAAK2f,WAAWpe,SAAUxG,EAAGiF,EAAK2f,WAAWpe,SAASxG,EAAGI,OAA0C,GAAlC6E,EAAK2f,WAAWpe,SAASpG,OAAcsT,OAAQ,IACnHxS,KAAMugB,EAAQ8C,YAAY,YAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,aAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbnB,EAAK2f,WAAWpe,SAAUxG,EAAGiF,EAAK2f,WAAWpe,SAASxG,EAAGI,OAA0C,GAAlC6E,EAAK2f,WAAWpe,SAASpG,OAAcsT,OAAQ,IAAKgR,UAAU,EAClIxjB,KAAMugB,EAAQ8C,YAAY,YAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBvD,EAAK2f,WACpDpD,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKM,KAAKC,UAAW,IAA2B,IAAtBP,EAAKM,KAAK+G,UAAiB,GACnGpL,KAAMugB,EAAQ8C,YAAY,iBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKM,KAAKC,UAAW,IAA2B,IAAtBP,EAAKM,KAAK+G,UAAiB,GACnGpL,KAAMugB,EAAQ8C,YAAY,kBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKM,KAAKC,UAAW,IAA2B,EAAtBP,EAAKM,KAAK+G,UAAe,GACjGpL,KAAMugB,EAAQ8C,YAAY,kBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,SAAU,IAA0B,IAArBvB,EAAKM,KAAK+G,WACnFpL,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,UAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAA0B,aAAlBA,EAAK3B,MAAMzF,GAIlC,OAHKyjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKM,KAAKC,UAAW,IAAKP,EAAKM,KAAK+G,UAAW,GAC7FpL,KAAMugB,EAAQ8C,YAAY,iBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,eAARA,EAAEkB,IAA+B,eAARlB,EAAEkB,KACvEqgB,EAAQ1D,iBAAiB9Y,GACzBA,EAAK3B,QAAS,EACdme,EAAQrH,QAAQ,CAAEhZ,GAAIqgB,EAAQjD,eAAejd,MAAO,GAG5D,CAEIqR,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAuC,GAArBvD,EAAKwC,MAAM5E,QAAeoC,EAAKK,QAAQ2Q,KAAKpT,OAAS,IAAMoC,EAAKK,QAAQ2Q,KAAK,GAAG1R,GAC9Hid,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKK,QAAQkO,UAAUyC,MAC5D/U,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAAWke,UAAU,EAChFxjB,KAAMugB,EAAQ8C,YAAY,UAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQpH,KAAK9Y,KAC/EigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,CAAI,GAGjC,CAEI/R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,IAASvD,EAAKE,QAAQuE,MAAM,GAAGnF,GAC9Eid,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAC3DtF,KAAMugB,EAAQ8C,YAAY,UAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAsC,IAApBiZ,EAAQN,WAAmB3Y,EACzEgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKK,QAAQ2Q,KAAK,GAAGzP,UAC1DtF,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKK,QAAQ2Q,KAAK,GAAGzP,SAAU,IAA2B,IAAtBvB,EAAKM,KAAK+G,UAAiB,GAC7GpL,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,iBAARA,EAAEkB,KAC9C6D,EAAK3B,QAAS,EACd2B,EAAK0f,eAAgB,EACrB1f,EAAKE,QAAQuE,MAAM,GAAGob,qBAAsB,EAC5C7f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAKK,eAAgB8e,UAAU,EACzExjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQzD,SAASzc,KACnFigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,EACrB1f,EAAKK,QAAQD,aAAe,EAC5BJ,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,gBACrBlB,EAAG+E,EAAKM,KAAKK,cAAc1F,EAAI,GAAIC,MAAO8E,EAAKM,KAAKK,cAAczF,MAAQ,GAC1EH,EAAGiF,EAAKM,KAAKK,cAAc5F,EAAI,GAAII,OAAQ6E,EAAKM,KAAKK,cAAcxF,OAAS,IAC9E,GAGV,CAEIwS,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQ5Y,gBAAgBtH,MAAQiH,EAAKuX,OACvGyB,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAC3DtF,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,EACrB1f,EAAK3B,QAAS,CAAK,GAG3B,CAEIsP,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBvD,EAAKK,QAAQoE,MAAM7G,OAAS,IAAM2F,EAChFgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKE,QAAQuE,MAAM,GAAGob,qBAAsB,EAC5C7f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKK,QAAQoE,MAAM,GAAGlD,UAC3DtF,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ8Q,KAAK,GAAGzP,UAC1DtF,KAAMugB,EAAQ8C,YAAY,gBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAC3DtF,KAAMugB,EAAQ8C,YAAY,gBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBiZ,EAAQgD,iBAAiBhD,EAASxc,KAAUuD,EAC1FgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,gBAARA,EAAEkB,IAAgC,gBAARlB,EAAEkB,KACxE6D,EAAK3B,QAAS,EACd2B,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKE,QAAQqO,UAAUP,MAAO,IAA2B,IAAtBhO,EAAKM,KAAK+G,UAAiB,GAC5GpL,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAAWke,UAAU,EAChFxjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAA2B,aAAlB2B,EAAK3B,MAAMzF,IAAqBoH,EAAKlB,OAA0B,YAAjBkB,EAAKlB,MAAMlG,GAI9F,OAHKyjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,CAAI,GAGjC,CAEI/R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ6C,UAAUrf,GACrB/D,KAAMugB,EAAQ8C,YAAY,UAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBqb,EAAQrH,QAAQ,CAAEhZ,GAAIqgB,EAAQ3I,YAAYvX,KAAMmK,WAAW,EAAMzH,KAAMwd,EAAQjT,aAAcjK,GAAIkd,EAAQ7U,eACzG6U,EAAQrH,QAAQ,CAAEhZ,GAAIqgB,EAAQ3I,YAAYvX,KAAMmK,WAAW,EAAOzH,KAAMwd,EAAQjT,aAAcjK,GAAIkd,EAAQ7U,eAC1G6U,EAAQrH,QAAQ,CAAEhZ,GAAIqgB,EAAQ3I,YAAYvX,KAAMmK,WAAW,EAAOzH,KAAMwd,EAAQjT,aAAcjK,GAAIkd,EAAQ7U,cAAe,GAGjI,CAEIgG,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,IAASvD,EAAKE,QAAQ+F,KAAK,GAAG3G,GAC7Eid,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,YAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAAS2B,EAAK3B,MAAMzF,GAAG6f,WAAW,YAI9D,OAHK4D,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,IAASvD,EAAKE,QAAQuE,MAAM,GAAGnF,GAC9Eid,OAAQA,CAACC,EAASxc,KACdA,EAAK8f,UAAY9f,EAAKE,QAAQ+F,KAAK,GACnCjG,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAK8f,UAAUve,UAAWke,UAAU,EACzExjB,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAA2B,aAAlB2B,EAAK3B,MAAMzF,IAAqBoH,EAAKlB,OAASkB,EAAKlB,MAAMlG,GAAG6f,WAAW,YAI5G,OAHK4D,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,IAASvD,EAAK8f,UAAUxgB,GACvEid,OAAQA,CAACC,EAASxc,KACdA,EAAK8f,UAAY,KACjB9f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAAWke,UAAU,EAChFxjB,KAAMugB,EAAQ8C,YAAY,cAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,IAAMqgB,EAAQpH,KAAK9Y,KAC9EigB,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,iBAARA,EAAEkB,IAAiC,iBAARlB,EAAEkB,KACzE6D,EAAKmB,aAAe,IACbqb,EAAQlQ,6BAA6BtM,EAAMA,EAAKK,QAAQkO,UAAUoD,OAAQ,IAA2B,EAAtB3R,EAAKM,KAAK+G,UAAe,GAC3GpL,KAAMugB,EAAQ8C,YAAY,iBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,iBAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAKK,eAAgB8e,UAAU,EACzExjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQzD,SAASzc,KACnFigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,EACrB1f,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,gBACrBlB,EAAG+E,EAAKM,KAAKK,cAAc1F,EAAI,GAAIC,MAAO8E,EAAKM,KAAKK,cAAczF,MAAQ,GAC1EH,EAAGiF,EAAKM,KAAKK,cAAc5F,EAAI,GAAII,OAAQ6E,EAAKM,KAAKK,cAAcxF,OAAS,IAC9E,GAGV,CAEIwS,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBiZ,EAAQgD,iBAAiBhD,EAASxc,GAChFuc,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAA2B,aAAlB2B,EAAK3B,MAAMzF,GAIhD,OAHKyjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK8f,UAAY,KACjB9f,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAAWke,UAAU,EAChFxjB,KAAMugB,EAAQ8C,YAAY,gBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAAS2B,EAAK3B,MAAMzF,GAAG6f,WAAW,aAAezY,EAAKlB,OAASkB,EAAKlB,MAAMlG,GAAG6f,WAAW,YAIpH,OAHK4D,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,iBAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAKK,eAAgB8e,UAAU,EACzExjB,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBA,GAAQA,EAAKpH,KAAOqgB,EAAQzD,SAASzc,KACnFigB,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,KACpBnB,EAAK0f,eAAgB,EACrB1f,EAAKE,QAAQyR,OAAO,GAAGxV,GAAK,WAC5B6D,EAAKe,UAAU0B,KAAK,CAChBgE,WAAW,EAAMtK,GAAI,gBACrBlB,EAAG+E,EAAKM,KAAKK,cAAc1F,EAAI,GAAIC,MAAO8E,EAAKM,KAAKK,cAAczF,MAAQ,GAC1EH,EAAGiF,EAAKM,KAAKK,cAAc5F,EAAI,GAAII,OAAQ6E,EAAKM,KAAKK,cAAcxF,OAAS,IAC9E,GAGV,CAEIwS,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBvD,EAAKE,QAAQ+F,KAAKrI,OAAS,IAAMoC,EAAKE,QAAQ+F,KAAK,GAAG3G,GACpGid,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAC1DtF,KAAMugB,EAAQ8C,YAAY,SAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,IAAkBvD,EAAKE,QAAQ+F,KAAKrI,OAAS,IAAMoC,EAAKE,QAAQ+F,KAAK,GAAG3G,IAAMkd,EAAQrJ,cAAcvV,OAAS,EACzI2e,OAAQA,CAACC,EAASxc,KACdA,EAAK3B,QAAS,EACd2B,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,YAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAA2B,aAAlB2B,EAAK3B,MAAMzF,GAIhD,OAHKyjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ8Q,KAAK,GAAGzP,UAC1DtF,KAAMugB,EAAQ8C,YAAY,WAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKe,UAAYf,EAAKe,UAAUnF,QAAOX,GAAa,gBAARA,EAAEkB,KAC9C6D,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKM,KAAKkI,cAAeiX,UAAU,EACxExjB,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAKpH,IAAMqgB,EAAQ1V,oBAAoBxK,KAI9D,OAHKsjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAA2B,aAAlB2B,EAAK3B,MAAMzF,GAChD,QAAIoH,GAAQA,EAAKpH,IAAMqgB,EAAQlb,MAAMhF,QAEhCiH,GAMAqc,IACD5f,EAAKwC,MAAQ,IAEVod,IARH5f,EAAKkc,UAAY,EA91B/BtJ,EA+1BmBwJ,UAAUpc,EAAKkc,UAAUI,QAAS,EA/1BrD1J,EAg2BmBwJ,UAAUpc,EAAKkc,SAAW,GAAGI,QAAS,GACpC,GAKE,EAEjBC,OAAQA,CAACC,EAASxc,KACdA,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,GAAQvD,EAAKE,QAAQuE,MAAM7G,OAAS,IAAMoC,EAAKE,QAAQuE,MAAM,GAAGnF,GAC/Gid,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,UAC3DtF,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQ+F,KAAK,GAAG1E,UAAWke,UAAU,EAC/ExjB,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KACxB,MAAMqc,EAASrc,GAAQA,EAAK3B,OAAS2B,EAAK3B,MAAMzF,GAAG6f,WAAW,aAAezY,EAAKlB,OAA2B,UAAlBkB,EAAKlB,MAAMlG,GAItG,OAHKyjB,IACD5f,EAAKwC,MAAQ,IAEVod,CAAM,EAEjBrD,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IAAI,GAGhC,CAEIwM,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAmBA,EAC/CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAKmB,aAAe,IACbqb,EAAQ+C,oBAAoBvf,EAAMA,EAAKE,QAAQuE,MAAM,GAAGlD,SAAU,IAA2B,IAAtBvB,EAAKM,KAAK+G,WACpFpL,KAAMugB,EAAQ8C,YAAY,gBAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAKe,UAAY,GACjBf,EAAKmB,aAAe,IACbqb,EAAQ6C,UAAUrf,GACrB/D,KAAMugB,EAAQ8C,YAAY,aAC7B,GAGT,CAEI3R,WAAYA,CAAC6O,EAASxc,EAAMuD,KAAkB,EAC9CgZ,OAAQA,CAACC,EAASxc,KACdA,EAAK0f,eAAgB,EACrB1f,EAAK3B,QAAS,EACd2B,EAAKmB,aAAe,KACpBnB,EAAKic,UAAW,CAAI,KAOpC,QCt7BA,MAAMjZ,EACFvB,YAAYzB,EAAMuD,EAAMiB,GACpB,MAAM9B,EAAW3I,KAAK+L,WAAWvC,EAAK3B,OAAS2B,EAAK3B,MAAQ2B,EAAKlB,MAC3DM,EAAY5I,KAAKyW,YAAYjN,EAAK3B,OAAS2B,EAAK3B,MAAQ2B,EAAKlB,MAC7D0d,EAAShmB,KAAKgmB,OAAOrd,EAAUC,GAE/Bqd,GAAwBzc,EAAK0c,wBAC7BlmB,KAAKmmB,6BAA6Bxd,EAAUC,EAAW5I,KAAKomB,gBAElE,GADA5c,EAAK0c,wBAAyB,EAC1BD,EACA,MAAO,CAAEhb,MAAM,GAEnB,GAAI+a,EAAQ,CACR,MAAMK,GAAwB7c,EAAK8c,wBAC7BtmB,KAAKmmB,6BAA6Bxd,EAAUC,EAAW5I,KAAKumB,gBAElE,GADA/c,EAAK8c,wBAAyB,EAC1BD,EACA,MAAO,CAAEpb,MAAM,EACvB,CAEA,MAAMhG,EAAO2D,EAAU+E,SACvBlD,EAAOxF,GAAQjF,KAAK6U,cAAcpK,EAAOxF,GAAO2D,GAChDD,EAASM,KAAOL,EAChBA,EAAUiK,YAAa,EACvBjK,EAAUkD,WAAanD,EAASpI,MAChCqI,EAAU+E,SAAW3N,KAAKwmB,aAC1B5d,EAAU8L,OAAS,EACnB/L,EAAS+L,OAAS,EAClB/L,EAAS8d,UAAY7d,EAAUuB,GAC/BxB,EAAS+R,UAAY9R,EAAUwB,GAC/BzB,EAASgS,aAAe/R,EAAUwB,GAClCzB,EAASwM,OAAQ,EACjBvM,EAAUuM,OAAQ,EAClBnV,KAAKoV,sBAAsBnP,EAAM2C,GAAW,GAExCod,IACArd,EAAS0M,MAAO,EAChBzM,EAAUyM,MAAO,EACjB1M,EAASqD,QAAS,EAClBrD,EAASkK,YAAa,EACtBlK,EAASuK,WAAY,EAE7B,EAIJ,QC9CA,MAAMwT,EACFhf,oBAAoBzB,EAAMuD,GACtB,IAAKA,EAAKmd,gBAIN,OAHAnd,EAAKmd,iBAAkB,EACvB1gB,EAAKiB,MAAMjD,SAAQkD,GAAQA,EAAKyf,OAAS,OACzC5mB,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAKqZ,oBAAoB9W,KAAMmK,WAAW,EAAO7J,OAAO,IACzE,CAAEoI,MAAM,GAGnB,MAAMnD,EAAS9H,KAAK6mB,cAAc5gB,EAAMuD,EAAMvD,EAAKK,SAInD,OAHIwB,GAAUA,EAAOgf,WACjB9mB,KAAKuhB,WAAWtb,GAEb6B,CACX,CAEAJ,qBAAqBzB,EAAMuD,EAAMiB,GAE7B,MAAMsc,EAAiBtc,EAAOyB,KAAKrK,QAAOX,GAAKA,EAAE2R,aAC3CmU,EAAShnB,KAAKinB,YAAYhhB,EAAMuD,EAAMiB,EAAQsc,GAEpD,IAAIjf,EAAS9H,KAAKknB,aAAajhB,EAAMuD,EAAMiB,EAAQsc,EAAgBC,GACnE,OAAIlf,EAAOmD,MAAQnD,EAAOgf,UACfhf,GAEXA,EAAS9H,KAAKmnB,cAAclhB,EAAMuD,EAAMiB,GACpC3C,EAAOgf,UACAhf,GAEX9H,KAAKijB,QAAQhd,GACN,CAAC,GACZ,CAEAyB,qBAAqBzB,EAAMuD,GACvB,MAAM4d,EAAmB5d,EAAKtH,KAAKqH,SAAS,eAC5C,OAAI6d,GAAoB5d,EAAKgD,SAAWhD,EAAKgD,QAAQ3I,OAAS,GAC1D2F,EAAKA,KAAKlC,OAASkC,EAAKgD,QAAQ,GACzB,CAAC,GAGRhD,EAAKtC,OAASsC,EAAKtC,MAAMrD,OAAS,GAClC2F,EAAKA,KAAKoC,WAAapC,EAAKtC,MAAM,GAC3B,CAAC,GAGRsC,EAAKgD,SAAWhD,EAAKgD,QAAQ3I,OAAS,GACtC2F,EAAKA,KAAKlC,OAASkC,EAAKgD,QAAQ,GACzB,CAAC,IAGZxM,KAAKmf,cACE,CAAC,EACZ,EAIJ,QCtDA,MAAMkI,EACF3f,mBAAmBzB,EAAMuD,EAAMiB,EAAQsc,GACnC,MAAMO,EAAQP,EAAellB,QAAOsF,GAAQnH,KAAK+L,WAAW5E,KACtDogB,EAASR,EAAellB,QAAOsF,GAAQnH,KAAKyW,YAAYtP,KAE9D,MAAO,CACHqgB,eAAgBxnB,KAAKynB,yBAAyBxhB,EAAMuD,EAAMiB,EAAQ6c,EAAOC,GACzEG,iCAAkC1nB,KAAK2nB,yCAAyC1hB,EAAMuD,EAAMiB,EAAQ8c,GAE5G,CAEA7f,gCAAgCzB,EAAMuD,EAAMiB,EAAQ6c,EAAOC,GACvD,GAAIA,EAAO1jB,OAAS,EAChB,MAAO,GAEX,IAAIiE,EAAS,GAab,OAZAwf,EAAMrjB,SAAQyV,IACV,MAAMkO,EAAgBnd,EAAOrE,mBAAqBsT,EAAKtO,KACjDyc,EAAQN,EAAOviB,MAAK6iB,GAAS7nB,KAAKgmB,OAAOtM,EAAMmO,IAAUA,EAAMzc,MAAQwc,IAC7E,GAAIC,EAAO,CACPnO,EAAKkN,OAASiB,EAAMtnB,MACpBsnB,EAAMjB,OAASlN,EAAKnZ,MACpB,MAAM0J,EAAQyP,EAAK1G,MAAQ6U,EAAM7U,MACjClL,EAAOY,KAAK,CAAEgR,OAAMmO,QAAO5d,QAAO7H,GAAK,GAAEsX,EAAKnX,QAAQslB,EAAMtlB,QAAQ0H,KACxE,KAGJnC,EAASA,EAAO+W,MAAK,CAACiJ,EAAGC,IAAMA,EAAE9d,MAAQ6d,EAAE7d,QACpCnC,CACX,CAEAJ,gDAAgDzB,EAAMuD,EAAMiB,EAAQ8c,GAChE,GAAIA,EAAO1jB,OAAS,EAChB,MAAO,GAEX,IAAIiE,EAAS,GAYb,OAXA2C,EAAOC,MAAM7I,QAAO6X,IAASA,EAAKzQ,OAAMhF,SAAQyV,IAC5C,MAAMsO,EAAgBhoB,KAAKioB,cAAcvO,GACnCmO,EAAQN,EAAOviB,MAAK6iB,IAAUA,EAAMjB,QAAU5mB,KAAKgmB,OAAOtM,EAAMmO,KAAWG,GAAiBhoB,KAAKioB,cAAcJ,MACrH,GAAIA,EAAO,CACPA,EAAMjB,OAASlN,EAAKnZ,MACpB,MAAM0J,EAAQyP,EAAK1G,MAAQ6U,EAAM7U,MACjClL,EAAOY,KAAK,CAAEgR,OAAMmO,QAAO5d,QAAO7H,GAAK,GAAEsX,EAAKnX,QAAQslB,EAAMtlB,QAAQ0H,KACxE,KAGJnC,EAASA,EAAO+W,MAAK,CAACiJ,EAAGC,IAAMA,EAAE9d,MAAQ6d,EAAE7d,QACpCnC,CACX,EAIJ,SCtDA,MAAMogB,GACFxgB,oBAAoBzB,EAAMuD,EAAMiB,EAAQsc,EAAgBC,GACpD,GAAIvc,EAAOwM,KAAKpT,OAAS,EAAG,CACxB,MAAMskB,EAAQpB,EAAellB,QAAOsF,GAAQnH,KAAKgX,WAAW7P,KAC5D,GAAIghB,EAAMtkB,OAAS,EACf,OAAO7D,KAAKooB,UAAU3d,EAAQ,CAAEiP,KAAMyO,EAAM,IACpD,CAEA,GAAInB,EAAOQ,eAAe3jB,OAAS,EAC/B,OAAO7D,KAAKooB,UAAU3d,EAAQuc,EAAOQ,eAAe,IAExD,GAAIR,EAAOU,iCAAiC7jB,OAAS,EACjD,OAAO7D,KAAKooB,UAAU3d,EAAQuc,EAAOU,iCAAiC,IAE1E,MAAMW,EAAQroB,KAAKsoB,eAAeriB,EAAMwE,EAAQsc,GAChD,GAAIsB,EAAMpd,MAAQod,EAAMvB,UACpB,OAAOuB,EACX,GAAIA,GAASA,EAAM3O,KACf,OAAO1Z,KAAKooB,UAAU3d,EAAQ4d,GAElC,MAAMf,EAAQP,EAAellB,QAAOsF,GAAQnH,KAAK+L,WAAW5E,KACvD0X,MAAK,CAACiJ,EAAGC,IAAMA,EAAE/U,MAAQ8U,EAAE9U,QAChC,OAAIsU,EAAMzjB,OAAS,EACR7D,KAAKooB,UAAU3d,EAAQ,CAAEiP,KAAM4N,EAAM,KAEzC,CAAC,CACZ,CAEA5f,iBAAiB+C,EAAQ4d,GACrB,IAAI5f,EAAQ,GAQZ,OAPI4f,EAAM3O,MAAQ2O,EAAM3O,KAAK/L,WAAa3N,KAAK4N,eAC3CnF,EAAQA,EAAMS,OAAOlJ,KAAKuoB,iBAAiB9d,EAAQ4d,EAAM3O,QAEzD2O,EAAMR,OAASQ,EAAMR,MAAMla,WAAa3N,KAAK4N,eAC7CnF,EAAQA,EAAMS,OAAOlJ,KAAKuoB,iBAAiB9d,EAAQ4d,EAAMR,MAAOQ,EAAM3O,QAE1E1Z,KAAK6I,cAAcJ,GACZ,CAAEqe,UAAWre,EAAM5E,OAAS,EACvC,CAEA6D,qBAAqBzB,EAAMuD,EAAMiB,GAC7B,MAAM+d,EAAqB/d,EAAOC,MAC7B7I,QAAOsF,GAAQnH,KAAK+L,WAAW5E,IAASA,EAAK+L,YAC7C2L,MAAK,CAACiJ,EAAGC,IAAMA,EAAE5d,GAAK2d,EAAE3d,KACvB8L,EAAWuS,EAAmB,GACpC,IAAKvS,EACD,MAAO,CAAC,EAEZ,MAAMwS,EAAkBzoB,KAAK0oB,mBAAmBziB,EAAMuD,EAAMiB,EAAQ+d,EAAoBvS,GAClFnU,EAAS9B,KAAK2oB,UAAU1iB,EAAMuD,EAAMiB,EAAQwL,EAAUwS,GAE5D,OADAzoB,KAAK4oB,gBAAgB3S,EAAUnU,GACxB,CAAEglB,WAAW,EACxB,CAEApf,0BAA0BzB,EAAMuD,EAAMiB,EAAQ+d,EAAoBvS,GAC9D,IAAI4S,EAAsB5iB,EAAKE,QAAQyR,OAAO/T,OAAS,EACvD,GAAIoC,EAAKE,QAAQ8Q,KAAKpT,OAAS,EAAG,CAC9BglB,GAAuB,EACvB,MAAM5R,EAAOhR,EAAKE,QAAQ8Q,KAAK,GAC3BA,EAAK7M,GAAK6L,EAAS9L,KACnB0e,GAAuB,EAC/B,CACA,OAAOA,GAAuBL,EAAmB3kB,MACrD,CAEA6D,iBAAiBzB,EAAMuD,EAAMiB,EAAQwL,EAAUwS,GAC3C,MAAM7mB,EAAUqE,EAAKE,QAAQuE,MAAM7I,QAAOX,GAAKlB,KAAK6Z,cAAc5T,EAAKE,QAAS8P,EAAU/U,IAAMA,EAAEkJ,IAAM6L,EAAS9L,KAC3GrI,EAASF,EAAQiC,OAAS,EAAI,KAAOjC,EAAQid,MAAK,CAACiJ,EAAGC,IAAMA,EAAE/U,MAAQ8U,EAAE9U,QAAO,GAErF,OAAIlR,GAAUmU,EAASC,OACZpU,EAEP2mB,EACO,KAEJ3mB,CACX,CAEA4F,wBAAwB+C,EAAQ5C,EAAOS,GACnC,MAAM2B,EAAS,UAASpC,EAAMtF,QAAQ+F,EAAQ,QAAUA,EAAM/F,KAAO,KACrE,MAAO,CACH,CAAEH,GAAIpC,KAAK4Y,UAAUrW,KAAM0H,QAAOyC,WAAW,EAAO7J,OAAO,GAC3D,CAAET,GAAIpC,KAAKqb,KAAK9Y,KAAMsF,QAAOS,QAAOkN,KAAM/K,EAAO+J,UAAU9J,MAAO0L,aAAa,GAEvF,CAEA1O,uBAAuBuO,EAAUnU,GAC7B,MAAMmI,EAAS,iBAAgBgM,EAAS1T,eAAe0T,EAASjD,aAAaiD,EAAS9L,OAAOrI,EAAS,WAAaA,EAAOS,KAAO,KACjIvC,KAAK6I,cAAc,CACf,CAAEzG,GAAIpC,KAAK4Y,UAAUrW,KAAM0H,QAAOyC,WAAW,EAAO7J,OAAO,GAC3D,CACIT,GAAIpC,KAAKgW,OAAOzT,KAChB0T,WAAUvJ,WAAW,EACrB5K,WAGZ,EAIJ,UCpGA,MAAMgnB,GACFphB,sBAAsBzB,EAAMwE,EAAQsc,GAChC,IAAIjf,EAAS,KAEb,MAAMmP,EAAOxM,EAAOwM,KAAKpT,OAAS,EAAI4G,EAAOwM,KAAK,GAAK,KACvD,OAAIA,GAAQA,EAAKjL,SACblE,EAAS9H,KAAK+oB,mBAAmB9iB,EAAMwE,EAAQsc,EAAgB9P,GAC3DnP,EAAOmD,MAAQnD,EAAOgf,WACfhf,GAGfA,EAASif,EAAellB,QAAOX,GAAKA,EAAE8nB,UAA0B,YAAd9nB,EAAE8nB,WAChDlhB,EAAOjE,OAAS,EACT,CAAE6V,KAAM5R,EAAO,KAE1BA,EAASif,EAAellB,QAAOX,GAAKA,EAAE8nB,UAA0B,uBAAd9nB,EAAE8nB,WAChDlhB,EAAOjE,OAAS,GAAKoC,EAAKK,QAAQoE,MAAM7G,OAAS,EAC1C,CAAE6V,KAAM5R,EAAO,KAE1BA,EAASif,EAAellB,QAAOX,GAAKA,EAAE8nB,UAA0B,6BAAd9nB,EAAE8nB,WAChDlhB,EAAOjE,OAAS,GAAKoC,EAAKK,QAAQoE,MAAM7I,QAAOX,IAAMA,EAAE8K,SAAQnI,OAAS,EACjE,CAAE6V,KAAM5R,EAAO,IAEnB,CAAC,IACZ,CAEAJ,0BAA0BzB,EAAMwE,EAAQsc,EAAgB5f,GACpD,IAAI4F,GAAsB,EAE1B,GAAgB,aAAZ5F,EAAK/E,GAAkB,CACvB,MAAM6mB,EAA8Bxe,EAAOC,MAAM1F,MAAK9D,GAAKA,EAAEkJ,GAAKlJ,EAAEuZ,QACpE1N,EAAsBkc,CAC1B,MAEK,GAAgB,aAAZ9hB,EAAK/E,GACV2K,GAAsB,OAGrB,GAAgB,aAAZ5F,EAAK/E,IAAqBqI,EAAOrE,mBAAqB,EAC3D2G,GAAsB,OAGrB,GAAgB,aAAZ5F,EAAK/E,GAAkB,CAC5B,MAAM8mB,EAAqBze,EAAOC,MAAM1F,MAAK9D,IAAMA,EAAE8K,QAAUhM,KAAKsM,UAAUpL,EAAG,aACjF6L,EAAsBtC,EAAOrE,mBAAqB,GAAK8iB,CAC3D,CAEA,OAAInc,GACA/M,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAK+M,oBAAoBxK,KAAMqJ,WAAYzE,IAC5D,CAAE2f,WAAW,IAGjB,CAAC,CACZ,EAIJ,UC9BA,MAAM7gB,GASFyB,aAAavG,EAAOC,EAAQ8F,EAAOqW,EAAiBC,EAAiBL,EAAYgD,GAC7EngB,KAAKkH,MAAQA,EAAMA,MACnBlH,KAAKmd,WAAaA,EAClBnd,KAAKiG,KAAO,CACRc,KAAM,GACNG,MAAO,GACPuB,MAAO,CAAC,CAAErG,GAAI,cACdgc,SAAUlX,EAAMA,MAChBuX,YAAavX,EACbqW,kBAAiBC,kBACjBlT,UAAW,GACXtC,QAAS,GACT6Q,KAAKsH,GAGT,MAAMgJ,EAAU,CACZ1gB,EAAO2gB,EAAO7hB,EAAO2V,EAAOlQ,EAAYiU,EAAM3K,EAASzD,EAAYhS,EAAM8L,EACzE0c,EAAAA,EAAUlV,EAAUoB,EAAUpC,EAAY1L,EAAgBkE,EAAeiI,EAAY5L,EAASiB,EAAM+M,EACpG0Q,EAAIW,GAAUa,GAAQY,IAS1B,OAPG3I,GACCgJ,EAAQzgB,KAAKmQ,GAEjBuQ,EAAME,YAAYH,EAASnpB,KAAMmgB,GACjCngB,KAAKiG,KAAKM,KAAOvG,KAAKupB,WAAWpoB,EAAOC,GACxCpB,KAAKwpB,SAASxpB,KAAKiG,MACnBjG,KAAKypB,SAAU,EACRzpB,KAAKiG,IAChB,CAEAyB,gBAAgBzB,GACRjG,KAAKypB,UACLzpB,KAAKoI,aAAa,CAAEhG,GAAIpC,KAAK0pB,SAASnnB,MAAQ,CAAEH,GAAIpC,KAAKgf,SAASzc,OAClEvC,KAAKypB,SAAU,GAEnBzpB,KAAK2pB,aAAa1jB,GAClB,IAAI6B,EAAS9H,KAAK4pB,YAAY3jB,GAM9B,OALKA,EAAKqQ,SAAYrQ,EAAKyG,YACvB1M,KAAKob,QAAQ,CAAEhZ,GAAIpC,KAAK6pB,aAAatnB,OACrCuF,EAAS9H,KAAKwpB,SAASvjB,IAGpB6B,CACX,CAEAJ,gBAAgBzB,EAAM4B,EAAOS,EAAOkN,GAGhC,OAFAxV,KAAKuhB,WAAWtb,GAChBjG,KAAKob,QAAQ,CAAEhZ,GAAIpC,KAAKqb,KAAK9Y,KAAMsF,QAAOS,QAAOkN,OAAMY,aAAa,IAC7DpW,KAAKwpB,SAASvjB,EACzB,CAEAyB,iBAAiBzB,GAEb,OADAjG,KAAKuhB,WAAWtb,GACTjG,KAAK+M,oBAAoB9G,EACpC,CAEAyB,oBAAoBzB,EAAMqB,GAEtB,OADArB,EAAKsB,MAAMiC,KAAKlC,OAASA,EAClBrB,CACX,CAEAyB,wBAAwBzB,EAAMkB,GAE1B,OADAlB,EAAKsB,MAAMiC,KAAKoC,WAAazE,EACtBlB,CACX,CAEAyB,gBAAgBzB,EAAMmc,GAAK,GACvB,OAAInc,EAAKmB,cAETnB,EAAKmB,aAAagb,KAAKA,EACvBpiB,KAAK8Y,aAAa7S,GACXjG,KAAKwpB,SAASvjB,IAHVA,CAIf,CAEAyB,yBAAyBzB,EAAM0H,EAAUjB,GACrC,MAAMjC,EAASzK,KAAKgb,UAAUtO,GAS9B,OARA1M,KAAKoI,aAAa,CACdhG,GAAIpC,KAAKuH,MAAMhF,KACf2E,MAAOuD,EAAOkD,GACdnE,KAAM,CAAC,EACPkD,WAAW,EACXxK,KAAO,GAAEyL,eAAsBlD,EAAOlK,QACtCiM,QAAS,CAAC,CAAEtK,KAAM,SAEf+D,CACX,CAEAyB,eAAezB,EAAM4B,EAAOS,EAAO4G,GAG/B,OAFAlP,KAAKuhB,WAAWtb,GAChBA,EAAKwC,MAAMC,KAAK,CAAEtG,GAAIpC,KAAKgf,SAASzc,KAAMmK,UAAWzG,EAAKyG,YACnDzG,CACX,CAEAyB,WAAWgF,GACP1M,KAAKiG,KAAKiF,KAAM,EAChBlL,KAAKiG,KAAK6jB,UAAYpd,EAEtB,MAAO,CAAExB,KAAK,EAClB,GACHQ,EAAAA,EAAAA,GA5GKzF,GAAI,OACQ,OAAIyF,EAAAA,EAAAA,GADhBzF,GAAI,QAES,IAACyF,EAAAA,EAAAA,GAFdzF,GAAI,QAGS,MAAGyF,EAAAA,EAAAA,GAHhBzF,GAAI,8BAAAyF,EAAAA,EAAAA,GAAJzF,GAAI,gBAKiB,KAAEyF,EAAAA,EAAAA,GALvBzF,GAAI,mBAAAyF,EAAAA,EAAAA,GAAJzF,GAAI,qBA+GV,UC1IInG,GAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACQ,MAAM,CAAEC,SAAU,EAAGqpB,SAAU,EAAGC,WAAY,EAAG,eAAgB,EAAG/U,QAASlV,EAAIoH,KAAK8N,SAAUnU,MAAO,CAChLG,KAAMlB,EAAIoH,KAAKK,SAAStG,EAAI,KAC5BH,IAAKhB,EAAIoH,KAAKK,SAASxG,EAAI,KAC3BG,MAAOpB,EAAIoH,KAAKK,SAASrG,MAAQ,KACjCC,OAAQrB,EAAIoH,KAAKK,SAASpG,OAAS,KACnC8E,UAAW,UAAYnG,EAAIoH,KAAKK,SAASpC,SAAW,OACpD,UAAWrF,EAAIoH,KAAKuN,OACpBuV,OAAQlqB,EAAImqB,MAAQ,UAAY,GAChC7iB,OAAQtH,EAAIoH,KAAK6B,GAAK,mBAAqB,IAC1C1H,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOxB,EAAI0B,MAAM,QAAS1B,EAAIoH,KAAK,IAAI,CAAEpH,EAAIoH,KAAK2Z,MAAO7gB,EAAG,MAAM,CAACQ,MAAM,CAAE0pB,MAAO,EAAGC,OAAQ,EAAG1pB,SAAU,EAAG2pB,WAAYtqB,EAAIoH,KAAK2e,qBAAsBhlB,MAAOf,EAAIuqB,cAAcvqB,EAAIoH,QAASpH,EAAIwqB,KAAOxqB,EAAIoH,MAAwD,IAAnBpH,EAAIoH,KAAKgO,MAAgBlV,EAAG,MAAM,CAACQ,MAAM,CAAEiG,OAAO,EAAMC,OAAO,EAAMjG,UAAU,GAAOI,MAAO,CAAE,aAAc,QAAS,kBAAmBf,EAAIoH,KAAK8Q,WAAY,iBAAkB,QAAU5W,MAAM,CAAC,UAAY,QAAQ,IAAMmpB,EAAAA,MAAAA,CAAQ,KAAczqB,EAAI0qB,OAAS,iBAAiBxqB,EAAG,MAAM,CAACQ,MAAM,CAAEiG,OAAO,EAAMC,OAAO,EAAMujB,MAAOnqB,EAAImqB,MAAOxpB,UAAU,GAAOI,MAAO,CACrnB,aAAc,QACd,kBAAmBf,EAAIoH,KAAK8Q,WAC5B,iBAAkB,QACjB5W,MAAM,CAAC,UAAY,QAAQ,IAAMmpB,EAAAA,MAAAA,CAAQ,KAAczqB,EAAI0qB,OAAS1qB,EAAIoH,KAAK/E,GAAK,UAAUd,GAAG,CAAC,UAAY,SAASC,GAAQ,OAAOxB,EAAI0B,MAAM,YAAa1B,EAAIoH,KAAK,EAAE,YAAc,SAAS5F,GAAgC,OAAxBA,EAAOmpB,iBAAwB3qB,EAAI0B,MAAM,aAAc1B,EAAIoH,KAAK,KAJrBlH,EAAG,MAAM,CAACF,EAAIiC,GAAG,aAIUjC,EAAIoH,KAAK6Z,OAAQ/gB,EAAG,MAAM,CAACQ,MAAM,CAAEC,SAAU,EAAG,cAAe,EAAG,uBAAwB,EAAGiqB,cAAe,EAAG,oBAAqB,EAAGN,WAAYtqB,EAAIoH,KAAK2e,qBAAsBhlB,MAAO,IAAKf,EAAIuqB,cAAcvqB,EAAIoH,MAAO,aAAc,GAAI,MAAS,QAAU,CAACpH,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAIoH,KAAK6Z,QAAQ,OAAOjhB,EAAIwqB,KAAOxqB,EAAIoH,KAAKgO,OAAUpV,EAAImV,WAAanV,EAAIoH,KAAKgD,KAAMpK,EAAIoH,KAAKiD,GAAyZrK,EAAIwqB,KAAxZtqB,EAAG,MAAM,CAACE,YAAY,cAAcW,MAAO,CAAEoF,UAAYnG,EAAIoH,KAAKK,SAASpC,UAA0C,GAA9BrF,EAAIoH,KAAKK,SAASpC,SAAqB,iBAAL,KAA0B,CAACnF,EAAG,MAAM,CAACE,YAAY,4EAA4EgC,YAAY,CAAC,MAAQ,OAAO,OAAS,OAAO,IAAM,QAAQ,mBAAmB,cAAc,CAACpC,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAIoH,KAAKgD,IAAI,MAAMpK,EAAIkC,GAAGlC,EAAIoH,KAAKiD,IAAI,SAAmBrK,EAAIoH,MAAQpH,EAAIoH,KAAKyjB,KAAM3qB,EAAG,MAAM,CAACE,YAAY,wCAAwCgC,YAAY,CAAC,IAAM,MAAM,mBAAmB,eAAepC,EAAIwqB,MAC7rC,EACIjoB,GAAkB,GCyCtB,IACAC,KAAA,YACAC,MAAA,qCACAiB,QAAA,CACA6mB,cAAAnjB,GACA,OACA1B,QAAA0B,EAAA2e,oBAAA,IACA7kB,KAAA,QACAF,IAAA,SACAI,MAAA,OAAAgG,KAAAK,SAAArG,MAAA,KAAAC,OAAA,OAAA+F,KAAAK,SAAArG,MAAA,KACA,kFAEA,ICpEoP,M,WCOhPsB,IAAY,QACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIF,GAAeA,GAAiB,QClB5B3C,GAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,WAAWgC,YAAY,CAAC,MAAQ,OAAO,OAAS,SAAS,CAAClC,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAM,UAAW9qB,EAAI+qB,SAAU7qB,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAM,UAAW9qB,EAAIgrB,SAAWhrB,EAAIirB,UAAW/qB,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAM,UAAW9qB,EAAIgrB,YAAa9qB,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAO,UAAW9qB,EAAIkrB,SAAUhrB,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAO,UAAW9qB,EAAImrB,SAAWnrB,EAAIorB,UAAWlrB,EAAG,MAAM,CAACE,YAAY,kBAAkBW,MAAOf,EAAI8qB,gBAAe,EAAO,UAAW9qB,EAAImrB,YAAcnrB,EAAIgrB,SAAW,EAAG9qB,EAAG,MAAM,CAACE,YAAY,4BAA4BW,MAAOf,EAAIqrB,cAAa,EAAMrrB,EAAIgrB,WAAY,CAAChrB,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIgrB,UAAU,OAAOhrB,EAAIwqB,KAAMxqB,EAAImrB,SAAW,EAAGjrB,EAAG,MAAM,CAACE,YAAY,4BAA4BW,MAAOf,EAAIqrB,cAAa,EAAOrrB,EAAImrB,WAAY,CAACnrB,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAImrB,UAAU,OAAOnrB,EAAIwqB,KAAMxqB,EAAIirB,OAAS,EAAG/qB,EAAG,MAAM,CAACE,YAAY,mCAAmCW,MAAOf,EAAIqrB,cAAa,EAAMrrB,EAAIgrB,SAAWhrB,EAAIirB,SAAU,CAACjrB,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAIgrB,SAAWhrB,EAAIirB,QAAQ,OAAOjrB,EAAIwqB,KAAMxqB,EAAIorB,OAAS,EAAGlrB,EAAG,MAAM,CAACE,YAAY,mCAAmCW,MAAOf,EAAIqrB,cAAa,EAAOrrB,EAAImrB,SAAWnrB,EAAIorB,SAAU,CAACprB,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAImrB,SAAWnrB,EAAIorB,QAAQ,OAAOprB,EAAIwqB,MACr8C,EACIjoB,GAAkB,GCsCtB,IACAC,KAAA,cACAC,MAAA,wEACAiB,QAAA,CACAonB,eAAAne,EAAArK,EAAA4H,GACA,MAAAoO,EAAA,IAAApO,EAAA,KAAA6I,IACAvB,EAAA,GACA8Z,EAAA3e,EAAA,OACA4e,EAAA,IAAAjT,EAAA,IACAkT,EAAAD,EAAA/Z,EACA,OACArL,UAAA,UAAAmlB,mBACAG,WAAA,kFACAnpB,KAAAkP,uDACAlP,KAAAkpB,mEACAD,QAEA,EACAF,aAAA1e,EAAAzC,GACA,MAAAoO,EAAApO,EAAA,KAAA6I,IACA2Y,EAAA,KAAAtqB,MAAA,IACA,IAAAuqB,EAAAhf,EAAA,KAAAif,cAAA,SAAAtT,GAAA,KAAAsT,cAAA,QAAAtT,GACAqT,GAAAD,EAEA,IAAAG,EAAAlf,EAAA,KAAAif,cAAA,SAAAtT,GAAA,KAAAsT,cAAA,QAAAtT,GAGA,OAFAuT,GAAAH,EAEA,CAAAtqB,MAAA,OAAAC,OAAA,OAAAH,KAAAyqB,EAAA,KAAA3qB,IAAA6qB,EAAA,KACA,EACAD,cAAAE,EAAAC,EAAAC,EAAAC,GACA,MAAAlE,EAAA,EAAA+D,EAAA,EAAAC,EAAA,EAAAC,EACAhE,GAAA,EAAA8D,EAAA,EAAAC,EAAAC,EACA1L,EAAAwL,EACA,OAAA/D,EAAAkE,EAAAA,EAAAjE,EAAAiE,EAAA3L,CACA,IC1E0P,MCQtP,IAAY,QACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIF,GAAe,GAAiB,QCnB5BvgB,GAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,cAAcgC,YAAY,CAAC,aAAa,WAAWd,MAAM,CAAC,IAAMmpB,EAAAA,MAAAA,CAAQ,KAAqBzqB,EAAIksB,OAAO3qB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOxB,EAAI0B,MAAM,QAAQ,KAAKxB,EAAG,MAAM,CAACE,YAAY,+CAA+CgC,YAAY,CAAC,IAAM,QAAQ,CAACpC,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAImC,MAAM,KAAKjC,EAAG,MAAMF,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAI8D,QAAQ,QAC/a,EACIvB,GAAkB,GCWtB,IACAC,KAAA,YACAC,MAAA,0BCfwP,MCOpP,IAAY,QACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,Q,YCwLhC,IACAD,KAAA,WACAC,MAAA,sCACAE,WAAA,CAAAwpB,SAAA,GAAAC,WAAA,GAAAtU,SAAA,GAAAuU,cAAAA,GAAAA,GACAxpB,KAAAA,KAAA,CACAmD,SAAA,EACAzB,QAAA,EACA4C,MAAA,GACA0e,WAAA,CAAAxjB,GAAA,WAAAoF,SAAA,CAAArG,MAAA,IACA8E,KAAA,KACA2a,MAAA,KACA1e,KAAA,KACAmqB,WAAA,EACAC,YAAA,GACAlO,SAAA,KACAb,gBAAA,KACAC,gBAAA,KACAnd,QAAA,GACAuB,QAAA,KAMAsB,UACAiB,SAAAooB,KAAAzrB,MAAA0rB,SAAA,SACArpB,OAAAC,iBAAA,eACA,KAAA2C,UAAA,IAGA,KAAAqY,SAAAlX,EAAAA,MACA,KAAAulB,UACA,EACAhpB,QAAA,CACAgpB,WACA,KAAAlP,gBAAA,KAAAmP,MACA,KAAAlP,gBAAA,KAAAmP,MACA,KAAApP,iBAAA,KAAAC,iBACA,KAAAoP,OACA,EACAA,QACA,KAAA3mB,KAAA4mB,GAAA3P,MAAA,KAAA4P,SAAAC,WAAA5rB,MACA,KAAA2rB,SAAAC,WAAA3rB,OACA8F,EACA,KAAAqW,gBACA,KAAAC,gBACA,KAAAL,WACA,KAAAtE,MACA,KAAAmU,aACA,EACAhO,WACA,KAAA1a,SAEA,KAAA2B,KAAA4mB,GAAA5J,QAAA,KAAAhd,MACA,KAAA+mB,cACA,EACAxD,WACA,KAAAllB,QAAA,EACA,KAAA2B,KAAA4mB,GAAArD,SAAA,KAAAvjB,MACA,KAAAA,KAAAiF,IACA,KAAAzJ,MAAA,WAAAwE,KAAA6jB,WAGA,KAAA7jB,KAAAsB,OAAA,KAAAtB,KAAA3B,OACA,KAAAA,QAAA,GAGA,KAAA2B,KAAA0f,gBACA,KAAArhB,QAAA,GAEA,KAAA2B,KAAAkT,uBACA,KAAA8T,iBAEA,KAAAhnB,KAAAqQ,SACA,KAAA0W,cACA,EACAhI,YACA,KAAA1gB,SAEA,KAAA2B,KAAA4mB,GAAA7H,UAAA,KAAA/e,MACA,KAAAujB,WACA,EACA0D,UAAAC,GACAA,GAAAA,EAAArrB,QAAAqrB,EAAArrB,OAAAI,OAGA,SAAAirB,EAAArrB,OAAAI,MACA,KAAAkrB,SAAAD,EAAAxrB,OAAAwF,KAAA,UAAAlB,KAAAM,KAAA0H,cACA,SAAAkf,EAAArrB,OAAAI,MACA,KAAAkrB,SAAAD,EAAAxrB,OAAAwF,KAAAgmB,EAAArrB,OAAAqF,KAAA,KAAAlB,KAAAM,KAAA0H,cACA,WAAAkf,EAAArrB,OAAAI,MACA,KAAAkrB,SAAAD,EAAAxrB,OAAAwF,KAAAgmB,EAAArrB,OAAAqF,KAAA,KAAAlB,KAAAM,KAAAsH,cACA,EACAuf,SAAAvlB,EAAAS,EAAA4G,GACA,KAAA5K,SAEA,KAAAA,QAAA,EACA,KAAA2B,KAAA4mB,GAAAO,SAAA,KAAAnnB,KAAA4B,EAAAS,EAAA4G,GACA,KAAA8d,cACA,EACAK,aAAA/lB,GACA,KAAAhD,QAAA,EACA,KAAA2B,KAAA4mB,GAAAQ,aAAA,KAAApnB,KAAAqB,GACA,KAAA0lB,aACA,EACAM,iBAAAnmB,GACA,KAAA7C,QAAA,EACA,KAAA2B,KAAA4mB,GAAAS,iBAAA,KAAArnB,KAAAkB,GACA,KAAA6lB,aACA,EACAO,kBAAA5f,EAAAjB,GACA,KAAAzG,KAAA4mB,GAAAU,kBAAA,KAAAtnB,KAAA0H,EAAAjB,GACA,KAAAsgB,aACA,EACAQ,kBACA,KAAAnB,WAAA,KAAAA,SACA,EACAoB,SAAArL,GAAA,GACA,KAAAnc,KAAA4mB,GAAAY,SAAA,KAAAxnB,KAAAmc,GACA,KAAA4K,aACA,EACAA,cACA,KAAA1oB,QAAA,EACA,KAAA4C,MAAA,KAAAjB,KAAAiB,MACA,KAAA7G,QAAA,KAAA4F,KAAAE,QAAAoT,MAEA,KAAAmU,eAAA,KAAAznB,KAAA2S,UAAA,0BAAAxX,OAAA,IACA,KAAAssB,eAAA,KAAAznB,KAAA8R,YAAA7V,KAAA,wBAAAd,OAAA,IAEA,KAAA2E,WACAvB,YAAA,UAAAmpB,gBAAA,MACA,EACAV,iBACA,IAAAW,EAAAf,GAAAhqB,MACA0B,IAAAA,gBAAA,EAAAnC,GAAA,aAAA6C,KAAA,KAAAgB,KAAA8R,WAAAvQ,SAAAjC,GAAA,KAAAU,KAAA8R,WAAAxS,GAAAG,aAAA,IAAAkoB,EACA,EACAD,iBACA,IAAAC,EAAAf,GAAAhqB,MACA,MAAAgrB,EAAA,KAAA3mB,MAAArF,QAAAX,GAAAA,EAAAqE,KAKA,GAJAqoB,EAAAC,EAAAhqB,OAAA,SAAAoC,KAAA2S,YAAA,KAAA3S,KAAA8R,WAAA,GAAA8U,GAAAhqB,MACA,KAAAyB,QAAA,EACAE,YAAA,UAAAmlB,cAAA,GAAAiE,EAAA,IAEAC,EAAAhqB,OAAA,EACA,OAEA,MAAAf,EAAA+qB,EAAA9kB,KAAA5B,IAAA,CAAA/E,GAAA,IAAA+E,EAAA5G,MAAA0E,KAAAkC,EAAAK,SAAAjC,GAAA4B,EAAA5B,GAAAG,aAAA,MACAnB,IAAAA,gBAAAzB,EAAA8qB,EACA,EACAjE,eACA,MAAAhR,EAAA,KAAA1S,KAAA0S,KAAA,KAAA1S,KAAA0S,KAAA,EACAnU,YAAA,UAAAglB,UAAA,GAAA7Q,EACA,EACA+U,eAAAxrB,EAAAmR,EAAAya,EAAAvoB,GACA,IAAArD,GAAA,KAAAoqB,YAAA/iB,SAAA8J,GACA,OAEA,MAAAua,EAAA,IACA,KAAAtB,YAAA5jB,KAAA2K,GACA,KAAAA,GAAAnR,EAEAsC,YAAA,KAAAD,IAAAA,QAAAupB,EAAA,CAAA1sB,OAAA,IAAAA,OAAA,QAAAwsB,EAAA,OACAppB,YAAA,KAAAD,IAAAA,QAAAupB,EAAA,CAAA1sB,OAAA,KAAAmE,GAAA,EAAAqoB,EAAA,QAAAA,GACAppB,YAAA,UAAA8nB,YAAA,KAAAA,YAAAzqB,QAAAX,GAAAA,IAAAmS,GAAA,QAAAua,EACA,EAGAG,UAAAZ,GACA,KAAAa,SAAAb,EAAAhmB,KACA,EACA6mB,SAAA7mB,GACA,MAAA8mB,EAAA,KAAAhoB,KAAA,KAAAA,KAAAM,KAAAuI,oBAAA,CAAA5N,EAAA,EAAAF,EAAA,EAAAG,MAAA,IAAAC,OAAA,KACA,GAAA+F,EAWA,KAAAye,WAAA,CACAxjB,GAAA+E,EAAA/E,GACAoF,SAAAL,EAAAK,SACAjC,GAAA,CACArE,EAAA+sB,EAAA/sB,EACAF,EAAAitB,EAAAjtB,EACAG,MAAA8sB,EAAA9sB,MACAC,OAAA6sB,EAAA7sB,OACAgE,SAAA,QAnBA,CACA,QAAAa,KAAA3B,OACA,OAEA,KAAAshB,WAAA,CACAxjB,GAAA,KAAAwjB,WAAAxjB,GACAoF,SAAA,KAAAoe,WAAApe,SACAjC,GAAA,SAAAqgB,WAAApe,SAAApG,OAAA,GAEA,CAeA,MAAA0B,EAAA,EAAAV,GAAA,aAAA6C,KAAA,KAAA2gB,WAAApe,SAAAjC,GAAA,KAAAqgB,WAAArgB,GAAAG,aAAA,IACAnB,IAAAA,gBAAAzB,EAAA+pB,GAAAhqB,OACA2B,YAAA,KACA,KAAAohB,WAAApe,SAAA,KAAAoe,WAAArgB,UACA,KAAAqgB,WAAArgB,GACA,KAAAU,KAAA2f,WAAA,KAAAA,WAAApe,SAAApG,OAAA,OAAAwkB,WAAA,KACA,KAAA6H,UAAA,KACA,IAEA,EAGA3d,MAAAiQ,GAAA,OAAAC,OAAAC,OAAA,GAAAF,EAAA,EACAmO,QAAA3tB,GACA,YAAA2G,MAAAlC,MAAA9D,GAAAA,EAAAX,OAAAA,GACA,EACAyF,iBAAA0L,GACA,YAAAyc,cAAAzc,EAAAxQ,EAAAwQ,EAAA1Q,EAAA0Q,EAAAvQ,MAAAuQ,EAAAtQ,OACA,EACA+sB,cAAAjtB,EAAAF,EAAAotB,EAAAC,GACA,OACAltB,MAAAitB,EAAA,KAAAhtB,OAAAitB,EAAA,KACAptB,KAAAC,EAAA,KAAAH,IAAAC,EAAA,KAEA,ICtaoP,MCQhP,IAAY,QACd,GACAlB,EACAwC,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,O,oBCnBhC,MAAMiC,EAEFmD,sBAAsBxD,EAASe,EAAMM,EAAI+oB,GACrC,MAAMC,EAAO,CAAErqB,UAASe,OAAMM,MAC9BvF,KAAKwuB,gBAAgB,CAACD,GAAOD,EACjC,CACA5mB,uBAAuB5E,EAAYwrB,GAC/B,MAAMG,EAAYC,YAAYC,MAE9B,SAASC,EAAOC,GACZ,SAASC,EAAazb,EAAUkb,EAAMQ,GAClC,IAAI/C,EAAI+C,EACJ9pB,EAAO,KACPM,EAAK,KACLypB,EAAW,EAuBf,OArBIT,EAAK1rB,QACLmpB,EAAKA,EAAI,GAAQA,EAAI,GAAQA,EAAI,IAGhCuC,EAAK/oB,KAAQ+oB,EAAK/oB,IAAI6N,GAKlB2Y,EAAI,IACTA,GAAQ,GACRgD,EAAShD,EACT/mB,EAAOspB,EAAKtpB,KACZM,EAAKgpB,EAAK/oB,MAEVwmB,GAAKA,EAAI,IAAO,GAChBgD,EAAShD,EACT/mB,EAAOspB,EAAK/oB,IACZD,EAAKgpB,EAAKhpB,KAbVypB,EAAWhD,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIpmB,KAAKqpB,KAAK,EAAIjD,EAAI,EAAG,GAAK,EAC/D/mB,EAAOspB,EAAKtpB,KACZM,EAAKgpB,EAAKhpB,IAcPN,EAAKoO,IAAa9N,EAAG8N,GAAYpO,EAAKoO,IAAa2b,CAC9D,CAEA,MAAME,EAAcL,EAAcJ,EAC5BzC,EAAIpmB,KAAK0U,IAAI4U,EAAcZ,EAAU,GAE3CxrB,EAAWmB,SAAQsqB,IACf,MAAMY,EAAWL,EAAa,IAAKP,EAAMvC,GACnCoD,EAAWN,EAAa,IAAKP,EAAMvC,GACnCqD,EAAeP,EAAa,QAASP,EAAMvC,GAC3CsD,EAAgBR,EAAa,SAAUP,EAAMvC,GAC7CuD,EAAkBT,EAAa,WAAYP,EAAMvC,GACjDwD,EAAiBV,EAAa,UAAWP,EAAMvC,GAErDuC,EAAKrqB,QAAQpD,MAAMG,KAAOkuB,EAAW,KACrCZ,EAAKrqB,QAAQpD,MAAMC,IAAMquB,EAAW,KACpCb,EAAKrqB,QAAQpD,MAAMM,OAASkuB,EAAgB,KAC5Cf,EAAKrqB,QAAQpD,MAAMK,MAAQkuB,EAAe,KAC1Cd,EAAKrqB,QAAQpD,MAAM2E,QAAU+pB,EAC7BjB,EAAKrqB,QAAQpD,MAAMoF,UAAa,UAASqpB,OAAqB,IAG9DvD,EAAI,GACJyD,sBAAsBb,EAC9B,CAEAa,sBAAsBb,EAC1B,CAEAlnB,iBAAiBskB,GACb,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIpmB,KAAKqpB,KAAK,EAAIjD,EAAI,EAAG,GAAK,CAC/D,CAEAtkB,WAAWgoB,EAAMC,GACb,MAAM5N,EAAa,oCACbja,EAAS,CAAC,EAOhB,OANAia,EAAWhE,MAAM,KAAK9Z,SAAQoP,IAC1BvL,EAAOuL,GAAYqc,EAAKrc,GACxB,MAAMpJ,EAAQ0lB,EAAKtc,GACfpJ,IACAnC,EAAOuL,IAAapJ,EAAK,IAE1BnC,CACX,CAEAJ,iBAAiBzC,EAAMO,GACnB,MAAMuc,EAAa,oCACbja,EAAS,CAAC,EAOhB,OANAia,EAAWhE,MAAM,KAAK9Z,SAAQoP,IAC1BvL,EAAOuL,GAAYpO,EAAKoO,GACxB,MAAMpJ,EAAQzE,EAAI6N,GACdpJ,IACAnC,EAAOuL,GAAYpJ,EAAK,IAEzBnC,CACX,CAEAJ,sBAAsBgoB,EAAMC,GACxB,MAAO,CAAEzuB,EAAGyuB,EAAKzuB,EAAIwuB,EAAKxuB,EAAGF,EAAG2uB,EAAK3uB,EAAI0uB,EAAK1uB,EAClD,CACA0G,qBAAqBuC,GAAS,OAAOkU,SAASlU,EAAMI,QAAQ,KAAM,IAAM,CAExE3C,eAAetF,EAAI6C,EAAMM,EAAIG,EAAa4oB,GACtC,OAAOtuB,KAAK4vB,gBAAgB,CAAC,CAAExtB,KAAI6C,OAAMM,KAAIG,gBAAgB4oB,EACjE,CAEA5mB,uBAAuB5E,EAAYwrB,GAAW,GAC1CxrB,EAAWmB,SAAQsqB,IACVA,EAAKhpB,KAIVgpB,EAAKrqB,QAAUC,SAASC,eAAemqB,EAAKnsB,IACvCmsB,EAAKrqB,SAIVqqB,EAAKtpB,KAAOspB,EAAKtpB,MAAQ,CACrB/D,EAAGlB,KAAK6vB,cAActB,EAAKrqB,QAAQpD,MAAMG,MACzCD,EAAGhB,KAAK6vB,cAActB,EAAKrqB,QAAQpD,MAAMC,KACzCqE,SAAUmpB,EAAKrqB,QAAQpD,MAAMsE,SAC7BhE,OAAQmtB,EAAKrqB,QAAQpD,MAAMM,OAC3BD,MAAOotB,EAAKrqB,QAAQpD,MAAMK,MAC1B0B,OAAO,GAEX0rB,EAAKtpB,KAAKG,SAAWmpB,EAAKtpB,KAAKG,UAAY,EAC3CmpB,EAAKtpB,KAAKQ,QAAU8oB,EAAKtpB,KAAKQ,SAAW,EACzC8oB,EAAKtpB,KAAK7D,OAASmtB,EAAKtpB,KAAK7D,QAAUmtB,EAAKrqB,QAAQ4rB,aACpDvB,EAAKhpB,GAAKgpB,EAAK7oB,YAAc1F,KAAK+vB,IAAIxB,EAAKtpB,KAAMspB,EAAKhpB,IAAMgpB,EAAKhpB,GACjEgpB,EAAK/oB,IAAO+oB,EAAK/oB,IAAa+oB,EAAK7oB,YAAc1F,KAAK+vB,IAAIxB,EAAKtpB,KAAMspB,EAAK/oB,KAAO+oB,EAAK/oB,IAA/D,MAfnBwqB,QAAQnlB,IAAI,4BAA8B0jB,EAAKnsB,IAesC,IAE7FpC,KAAKwuB,gBAAgB1rB,EAAYwrB,EACrC,EAQJ2B,EAAOC,QAAU3rB,C,wBCzIjB,IAAIwE,EAAM,CACT,iBAAkB,MAClB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,KACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,KACnB,eAAgB,MAChB,eAAgB,MAChB,kBAAmB,MACnB,qBAAsB,KACtB,kBAAmB,MACnB,kBAAmB,KACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,KACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,qBAAsB,MACtB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,kBAAmB,MACnB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,KAChB,gBAAiB,MACjB,kBAAmB,OAIpB,SAASonB,EAAeC,GACvB,IAAIhuB,EAAKiuB,EAAsBD,GAC/B,OAAOE,EAAoBluB,EAC5B,CACA,SAASiuB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExnB,EAAKqnB,GAAM,CACpC,IAAI1sB,EAAI,IAAI6I,MAAM,uBAAyB6jB,EAAM,KAEjD,MADA1sB,EAAE8sB,KAAO,mBACH9sB,CACP,CACA,OAAOqF,EAAIqnB,EACZ,CACAD,EAAeM,KAAO,WACrB,OAAOzQ,OAAOyQ,KAAK1nB,EACpB,EACAonB,EAAeO,QAAUL,EACzBJ,EAAOC,QAAUC,EACjBA,EAAe/tB,GAAK,K,wBC3GpB,IAAI2G,EAAM,CACT,oBAAqB,KACrB,2BAA4B,MAC5B,2BAA4B,MAC5B,mBAAoB,MACpB,oBAAqB,MACrB,uBAAwB,MACxB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,KACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,KACzB,qBAAsB,MACtB,qBAAsB,MACtB,wBAAyB,MACzB,2BAA4B,KAC5B,wBAAyB,MACzB,wBAAyB,KACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,KAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,2BAA4B,MAC5B,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,qBAAsB,MACtB,qBAAsB,MACtB,qBAAsB,MACtB,qBAAsB,MACtB,qBAAsB,KACtB,sBAAuB,MACvB,wBAAyB,MACzB,mBAAoB,MACpB,oBAAqB,MACrB,oBAAqB,MACrB,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,gBAAiB,MACjB,aAAc,MACd,mBAAoB,MACpB,oBAAqB,MACrB,kBAAmB,OAIpB,SAASonB,EAAeC,GACvB,IAAIhuB,EAAKiuB,EAAsBD,GAC/B,OAAOE,EAAoBluB,EAC5B,CACA,SAASiuB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExnB,EAAKqnB,GAAM,CACpC,IAAI1sB,EAAI,IAAI6I,MAAM,uBAAyB6jB,EAAM,KAEjD,MADA1sB,EAAE8sB,KAAO,mBACH9sB,CACP,CACA,OAAOqF,EAAIqnB,EACZ,CACAD,EAAeM,KAAO,WACrB,OAAOzQ,OAAOyQ,KAAK1nB,EACpB,EACAonB,EAAeO,QAAUL,EACzBJ,EAAOC,QAAUC,EACjBA,EAAe/tB,GAAK,K,wBC/HpB,IAAI2G,EAAM,CACT,4BAA6B,MAI9B,SAASonB,EAAeC,GACvB,IAAIhuB,EAAKiuB,EAAsBD,GAC/B,OAAOE,EAAoBluB,EAC5B,CACA,SAASiuB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExnB,EAAKqnB,GAAM,CACpC,IAAI1sB,EAAI,IAAI6I,MAAM,uBAAyB6jB,EAAM,KAEjD,MADA1sB,EAAE8sB,KAAO,mBACH9sB,CACP,CACA,OAAOqF,EAAIqnB,EACZ,CACAD,EAAeM,KAAO,WACrB,OAAOzQ,OAAOyQ,KAAK1nB,EACpB,EACAonB,EAAeO,QAAUL,EACzBJ,EAAOC,QAAUC,EACjBA,EAAe/tB,GAAK,K,guoBCtBL,SAASuuB,EAAQ5Q,GAG9B,OAAO4Q,EAAU,mBAAqBC,QAAU,iBAAmBA,OAAOC,SAAW,SAAU9Q,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqB6Q,QAAU7Q,EAAI+Q,cAAgBF,QAAU7Q,IAAQ6Q,OAAOG,UAAY,gBAAkBhR,CAC1H,EAAG4Q,EAAQ5Q,EACb,CCPe,SAASiR,EAAaC,EAAOC,GAC1C,GAAuB,WAAnBP,EAAQM,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAML,OAAOQ,aACxB,QAAa/W,IAAT8W,EAAoB,CACtB,IAAIE,EAAMF,EAAKG,KAAKL,EAAOC,GAAQ,WACnC,GAAqB,WAAjBP,EAAQU,GAAmB,OAAOA,EACtC,MAAM,IAAIE,UAAU,+CACtB,CACA,OAAiB,WAATL,EAAoBM,OAASC,QAAQR,EAC/C,CCRe,SAASS,EAAeC,GACrC,IAAInxB,EAAM4wB,EAAYO,EAAK,UAC3B,MAAwB,WAAjBhB,EAAQnwB,GAAoBA,EAAMgxB,OAAOhxB,EAClD,CCJe,SAASkL,EAAgBqU,EAAKvf,EAAKyJ,GAYhD,OAXAzJ,EAAMoxB,EAAcpxB,GAChBA,KAAOuf,EACTC,OAAO6R,eAAe9R,EAAKvf,EAAK,CAC9ByJ,MAAOA,EACP6nB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZjS,EAAIvf,GAAOyJ,EAEN8V,CACT,C","sources":["webpack://front/./src/games/dragDropArrow.vue","webpack://front/./src/games/arrowDiv.vue","webpack://front/src/games/arrowDiv.vue","webpack://front/./src/games/arrowDiv.vue?cb92","webpack://front/./src/games/arrowDiv.vue?dbad","webpack://front/src/games/dragDropArrow.vue","webpack://front/./src/games/dragDropArrow.vue?0b04","webpack://front/./src/games/dragDropArrow.vue?32c4","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effectsLuncher.js","webpack://front/./src/games/gundam/effectsTarget.js","webpack://front/./src/games/gundam/mainEffects.js","webpack://front/./src/games/gundam/positioner.js","webpack://front/./src/games/gundam/selectable.js","webpack://front/./src/games/gundam/cardAction.js","webpack://front/./src/games/gundam/conditions.js","webpack://front/./src/games/gundam/cardMove.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/refresh.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/gundam/attack.js","webpack://front/./src/games/gundam/setup.js","webpack://front/./src/games/gundam/popup.js","webpack://front/./src/games/gundam/tasks.js","webpack://front/./src/games/gundam/utils.js","webpack://front/./src/games/gundam/show.js","webpack://front/./src/games/gundam/turn.js","webpack://front/./src/games/gundam/tuto.js","webpack://front/./src/games/gundam/pair.js","webpack://front/./src/games/gundam/ai.js","webpack://front/./src/games/gundam/aiCombos.js","webpack://front/./src/games/gundam/aiPlay.js","webpack://front/./src/games/gundam/aiStrategy.js","webpack://front/./src/games/gundam/game.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/bananaBars.vue","webpack://front/src/games/bananaBars.vue","webpack://front/./src/games/bananaBars.vue?3eed","webpack://front/./src/games/bananaBars.vue?f664","webpack://front/./src/games/deckIcon.vue","webpack://front/src/games/deckIcon.vue","webpack://front/./src/games/deckIcon.vue?7bc4","webpack://front/./src/games/deckIcon.vue?4c83","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/Gundam/ sync ^\\.\\/.*$","webpack://front/./src/assets/ sync ^\\.\\/.*empty\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nodrag\"},[_vm._l((_vm.sources),function(point,index){return _c('div',{key:'source' + index,class:{ absolute: 1, pointCircle: 1, colorYellow: point.show },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }),attrs:{\"id\":'source' + index},on:{\"mousedown\":function($event){return _vm.drag(point)},\"click\":function($event){return _vm.$emit('click', point)}}})}),_c('div',{style:({ display: _vm.source ? '' : 'none' })},[_vm._l((_vm.targets.filter(x => x)),function(point,index){return _c('div',{key:'target' + index},[_c('div',{class:{ absolute: 1, pointCircle: 1, colorYellow: _vm.target != point, colorGreen: _vm.target == point },style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 })}),_c('div',{staticClass:\"absolute text-center textVerticalCenter text-shadow-black colorWhite\",style:({ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 })},[_c('div',[_vm._v(_vm._s(point.text))])])])}),_c('div',{style:({ 'pointer-events': 'none' })},[_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow0' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\",\"width\":\"0px\",\"height\":\"0px\"},attrs:{\"id\":'arrow1' + _vm.id}},[_c('arrow-div',{attrs:{\"color\":_vm.color}})],1)])],2)],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p h100p relative\"},[_c('div',{staticClass:\"arrow absolute\",style:({ top: '0px', left: '0px', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '15%', left: '15%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '30%', left: '30%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '45%', left: '45%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '60%', left: '60%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })}),_c('div',{staticClass:\"arrow absolute\",style:({ top: '75%', left: '75%', 'border-top': '5px solid ' + _vm.color, 'border-left': '5px solid ' + _vm.color })})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"w100p h100p relative\">\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '0px', left: '0px', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '15%', left: '15%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '30%', left: '30%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '45%', left: '45%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '60%', left: '60%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n        <div class=\"arrow absolute\"\r\n            :style=\"{ top: '75%', left: '75%', 'border-top': '5px solid ' + color, 'border-left': '5px solid ' + color }\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'arrow-div',\r\n    props: ['color']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./arrowDiv.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./arrowDiv.vue?vue&type=template&id=135b1d42&scoped=true&\"\nimport script from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nexport * from \"./arrowDiv.vue?vue&type=script&lang=js&\"\nimport style0 from \"./arrowDiv.vue?vue&type=style&index=0&id=135b1d42&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"135b1d42\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"nodrag\">\r\n        <div v-for=\"(point, index) in sources\" :key=\"'source' + index\" :id=\"'source' + index\"\r\n            :class=\"{ absolute: 1, pointCircle: 1, colorYellow: point.show }\"\r\n            :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 55 }\"\r\n            @mousedown=\"drag(point)\" @click=\"$emit('click', point)\">\r\n        </div>\r\n\r\n        <div :style=\"{ display: source ? '' : 'none' }\">\r\n            <div class=\"\" v-for=\"(point, index) in targets.filter(x => x)\" :key=\"'target' + index\">\r\n                <div :class=\"{ absolute: 1, pointCircle: 1, colorYellow: target != point, colorGreen: target == point }\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 }\">\r\n                </div>\r\n                <div class=\"absolute text-center textVerticalCenter text-shadow-black colorWhite\"\r\n                    :style=\"{ top: point.y + 'px', left: point.x + 'px', width: point.width + 'px', height: point.height + 'px', 'z-index': 60 }\">\r\n                    <div>{{ point.text }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div :style=\"{ 'pointer-events': 'none' }\">\r\n                <div :id=\"'arrow0' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n                <div :id=\"'arrow1' + id\" class=\"absolute\" style=\"top:0px; left:0px; width:0px; height:0px;\">\r\n                    <arrow-div :color=\"color\"></arrow-div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n.arrow {\r\n    width: 25px;\r\n    height: 25px;\r\n    transform-origin: center center;\r\n    pointer-events: none\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport arrowDiv from './arrowDiv.vue';\r\n\r\nexport default {\r\n    name: 'drag-drop-arrow',\r\n    props: ['id', 'sources', 'freeze'],\r\n    components: { arrowDiv },\r\n    data: () => ({\r\n        delay: 1500,\r\n        animations: [],\r\n        mouse: { x: 0, y: 0 },\r\n        color: \"red\",\r\n        targets: [],\r\n        source: null,\r\n        target: null\r\n    }),\r\n    watch: {\r\n        sources() { this.resetSources(); }\r\n    },\r\n    mounted() {\r\n        window.addEventListener('mousemove', this.updateMouse);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('touchmove', this.updateMouse);\r\n        window.addEventListener('touchend', this.mouseUp);\r\n        this.resetSources();\r\n    },\r\n    beforeUnmount() {\r\n        window.removeEventListener('mousemove', this.updateMouse);\r\n        window.removeEventListener('mouseup', this.mouseUp);\r\n        window.removeEventListener('touchmove', this.updateMouse);\r\n        window.removeEventListener('touchend', this.mouseUp);\r\n    },\r\n    methods: {\r\n        updateMouse(e) {\r\n            const touch = e && e.touches && e.touches.length > 0 ? e.touches[0] : {};\r\n            this.mouse.x = e.clientX ? e.clientX : touch.clientX;\r\n            this.mouse.y = e.clientY ? e.clientY : touch.clientY;\r\n            this.updateAnimation();\r\n        },\r\n        resetSources() {\r\n            this.sources.forEach((point, index) => {\r\n                const element = document.getElementById(\"source\" + index);\r\n                element?.addEventListener('touchstart', () => this.drag(point));\r\n            });\r\n            this.animate();\r\n        },\r\n        drag(point) {\r\n            if (this.freeze)\r\n                return;\r\n            this.source = point;\r\n            this.targets = this.source.targets;\r\n            this.animate();\r\n        },\r\n        mouseUp() {\r\n            if (!this.source || !this.animations || this.animations.length < 1 || this.freeze)\r\n                return;\r\n            this.$emit('drop', { mouse: this.mouse, source: this.source, target: this.target });\r\n            this.source = null;\r\n        },\r\n        animate() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            this.updateAnimation();\r\n\r\n            helperAnimation.animateMultiple(this.animations, this.delay - 5);\r\n            setTimeout(() => {\r\n                this.animate();\r\n            }, this.delay + 15);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n        updateAnimation() {\r\n            if (!this.source)\r\n                return;\r\n\r\n            if (!this.animations || this.animations.length < 1) {\r\n                this.animations = [\r\n                    this.createAnimation('arrow0' + this.id, false),\r\n                    this.createAnimation('arrow1' + this.id, true)\r\n                ];\r\n            }\r\n\r\n            this.target = this.targets.find(box => this.isInside(this.mouse.x, this.mouse.y, box));\r\n\r\n            this.color = this.target ? 'green' : 'red';\r\n            const from = { x: this.source.x + (this.source.width / 2), y: this.source.y + (this.source.height / 2) };\r\n            const destination = !this.target ? this.mouse\r\n                : { x: this.target.x + (this.target.width / 2), y: this.target.y + (this.target.height / 2) };\r\n\r\n            this.animations.forEach(animation => {\r\n                const rotation = this.getAngleDeg(from, destination) + 135;\r\n                const width = this.target ? 75 : 75;\r\n                const widthHalf = width / 2\r\n                animation.from.x = from.x;\r\n                animation.from.y = from.y;\r\n                animation.from.rotation = rotation;\r\n                animation.to.rotation = rotation;\r\n                animation.to.x = destination.x;\r\n                animation.to.y = destination.y;\r\n                animation.mid.x = (animation.from.x + (animation.to.x - animation.from.x) / 2) - widthHalf;\r\n                animation.mid.y = (animation.from.y + (animation.to.y - animation.from.y) / 2) - widthHalf;\r\n            });\r\n        },\r\n        createAnimation(id, delay) {\r\n            const width = this.target ? 75 : 75;\r\n            const from = {\r\n                opacity: 1,\r\n                width: 5,\r\n                height: 5\r\n            };\r\n            const mid = {\r\n                opacity: 1,\r\n                width,\r\n                height: width\r\n            };\r\n\r\n            const to = {\r\n                opacity: 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            return { id, from, mid, to, delay, isIncrement: false };\r\n        },\r\n        getAngleDeg(source, target) {\r\n            const angleRad = Math.atan2(target.y - source.y, target.x - source.x);\r\n            return angleRad * (180 / Math.PI);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./dragDropArrow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dragDropArrow.vue?vue&type=template&id=4465cfd3&\"\nimport script from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nexport * from \"./dragDropArrow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dragDropArrow.vue?vue&type=style&index=0&id=4465cfd3&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p mask bg2\",staticStyle:{\"height\":\"100dvh\"}},[(_vm.game)?_c('span',[_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer2))}),_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.centerZoneP2))}),_c('div',{staticClass:\"absolute bg2\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer1))}),_c('div',{staticClass:\"absolute diagonal-split\",style:(_vm.getFieldStyleObj(_vm.game.grid.resources))}),_c('div',{staticClass:\"absolute text-center textVerticalCenter fontSize075em\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.resources), transform: 'rotate(-45deg)' })},[_vm._v(\" Resources \")]),_c('banana-bars',{style:(_vm.getFieldStyleObj(_vm.game.grid.resources)),attrs:{\"p1yellow\":_vm.game.player1.resourcesAvailable - _vm.game.player1.resourcesEx,\"p1blue\":_vm.game.player1.resourcesEx,\"p1max\":_vm.game.player1.resourcesMax,\"p2yellow\":_vm.game.player2.resourcesAvailable - _vm.game.player2.resourcesEx,\"p2blue\":_vm.game.player2.resourcesEx,\"p2max\":_vm.game.player2.resourcesMax,\"max\":_vm.game.resourcesMax,\"width\":_vm.game.grid.resources.width}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player1.deck.length,\"icon\":_vm.game.player1.deckIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player1.trash.length,\"icon\":_vm.game.player1.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', true)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player1.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player1.shield.length,\"icon\":_vm.game.player1.shieldIcon}}),(_vm.game)?_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Hand))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Field))}):_vm._e(),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Deck)),attrs:{\"text\":\"Deck\",\"length\":_vm.game.player2.deck.length,\"icon\":_vm.game.player2.deckIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Trash)),attrs:{\"text\":\"Trash\",\"length\":_vm.game.player2.trash.length,\"icon\":_vm.game.player2.trashIcon},on:{\"click\":function($event){return _vm.showLocationCards('trash', false)}}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Base)),attrs:{\"text\":\"Base\",\"icon\":_vm.game.player2.baseIcon}}),_c('deck-icon',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Shield)),attrs:{\"text\":\"Shield\",\"length\":_vm.game.player2.shield.length,\"icon\":_vm.game.player2.shieldIcon}}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Field))}),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEffect))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze && _vm.game.player1.hasEffects, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.useEffect}},[_c('span',[_vm._v(\"Use\"),_c('br'),_vm._v(\"Effect\")])])],1),_c('div',{staticClass:\"absolute bgYellow circle10px fontSize075em\",style:(_vm.getFieldStyleObj(_vm.game.grid.buttonEndTurn))},[_c('v-btn',{class:{ bg: true, shine: !_vm.freeze, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[(_vm.game.grid.buttonEndTurn.width > 50)?_c('span',[_vm._v(\"End\"),_c('br'),_vm._v(\"Turn\")]):_c('span',[_vm._v(\"End\")])])],1),_c('div',{staticClass:\"absolute vertical-scroll\",style:(_vm.getFieldStyleObj(_vm.game.grid.logZone)),domProps:{\"innerHTML\":_vm._s(_vm.game.logs)}}),_vm._l((_vm.game.tutoMasks),function(tutoMask,index){return _c('div',{key:'TutoMask' + index,class:{ absolute: 1, bg2: tutoMask.isPlayer1, bg: !tutoMask.isPlayer1 },style:(_vm.getFieldStyleObj(tutoMask))})}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.textZone))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardCenter))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardLeft))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardRight))}),_vm._l((_vm.cards.filter(x => !x.hide)),function(card){return _c('div',{key:'B' + card.index},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat},on:{\"click\":function($event){return _vm.showCard(card)}}})],1)}),(_vm.game.showTextTuto)?_c('div',{staticClass:\"absolute fadeIn\",style:({ ..._vm.getFieldStyleObj(_vm.game.showTextTuto), 'z-index': _vm.game.showTextTuto.zindex ? _vm.game.showTextTuto.zindex : 56 })},[(_vm.game.showTextTuto.arrow)?_c('div',{staticClass:\"bgWhite absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.showTextTuto.arrow), transform: 'rotate(45deg)', 'z-index': -1, border: 'solid blue 5px' })}):_vm._e(),_c('div',{staticClass:\"w100p h100p bgWhite colorBlack flex\",staticStyle:{\"flex-direction\":\"column\",\"justify-content\":\"center\",\"border\":\"solid blue 5px\"}},[_c('div',{staticClass:\"text-center m5px\"},[_vm._v(_vm._s(_vm.game.showTextTuto.text))]),(!_vm.game.showTextTuto.hideNext)?_c('div',{staticClass:\"m5px bgYellow circle10px\",staticStyle:{\"align-self\":\"flex-end\"}},[_c('v-btn',{staticClass:\"bg2 shine\",on:{\"click\":_vm.tutoNext}},[_vm._v(\"Next\")])],1):_vm._e()])]):_vm._e()],2):_vm._e(),_c('drag-drop-arrow',{attrs:{\"id\":\"0\",\"sources\":_vm.sources,\"targets\":_vm.targets,\"freeze\":_vm.freeze || _vm.game?.popup},on:{\"drop\":_vm.dropPoint,\"click\":_vm.clickDrop}}),(_vm.game && _vm.game.popup)?_c('div',{staticClass:\"absolute w100p h100p m5px\",staticStyle:{\"top\":\"0px\",\"display\":\"flex\",\"overflow\":\"hidden\",\"flex-direction\":\"column\",\"z-index\":\"80\"}},[_c('div',{staticClass:\"flex-grow\",staticStyle:{\"min-height\":\"10%\"}}),_c('div',{staticClass:\"w100p\"},[_c('div',{staticClass:\"flex flex-wrap w100p\",staticStyle:{\"justify-content\":\"center\"}},[_c('v-btn',{staticClass:\"m10px\",staticStyle:{\"background-color\":\"#FFFF00F0\"},on:{\"click\":function($event){return _vm.showOrHidePopup(false)}}},[(_vm.popupShow)?_c('span',[_vm._v(\"Hide Popup\")]):_c('span',[_vm._v(\"Show Popup\")])]),_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('div',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)})],2)]),(_vm.popupShow)?_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"overflow-y\":\"auto\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),(_vm.game?.popup.cards && _vm.game?.popup.cards.length > 0)?_c('div',{staticClass:\"flex-wrap w100p horizontal-scroll\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\",style:({ width: _vm.game?.grid.card100.height + 'px' })},[_c('div',{staticClass:\"text-center colorBlack\"},[_vm._v(_vm._s(card.location)+\" P\"+_vm._s(card.isPlayer1 ? '1' : '2')+\" \")]),_c('img',{style:({ width: _vm.game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0):_vm._e()]):_vm._e()]):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyleObj(_vm.game.grid.textZone), 'z-index': 11, height: 0\n        }),attrs:{\"id\":\"divTextEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.text)}})]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",style:({ top: '80px', width: '100%', height: '0px', 'z-index': 13 }),attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"70\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute\",staticStyle:{\"top\":\"0px\",\"left\":\"0px\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class effectsLuncher {\r\n    static trigger_onplay = 'onplay';\r\n    static trigger_onpair = 'onpair';\r\n    static trigger_onlink = 'onlink';\r\n    static trigger_refresh = 'refresh';\r\n    static trigger_battle = 'battle';\r\n    static trigger_burst = 'burst';\r\n    static trigger_command = 'command';\r\n    static trigger_action = 'action';\r\n    static trigger_ondestroyed = 'ondestroyed';\r\n    static trigger_end = 'end';\r\n    static trigger_turn = 'turn';\r\n    static trigger_end = 'end';\r\n    static trigger_main = 'main';\r\n\r\n    static lunchEffectTriggerMultiple(cards, trigger) {\r\n        let isEffectExisting = false;\r\n        cards.forEach(card1 => {\r\n            const result = this.lunchEffectTriggerForOneCard(card1, trigger);\r\n            isEffectExisting = isEffectExisting || result.isEffectExisting;\r\n        });\r\n        return isEffectExisting;\r\n    }\r\n\r\n    static lunchEffectTriggerForOneCard(card1, trigger) {\r\n        const result = { isEffectExisting: false };\r\n        const effects = this.getEffects(card1, trigger);\r\n        if (!effects || effects.length < 1)\r\n            return result;\r\n\r\n        result.isEffectExisting = true;\r\n        result.cancelMoveToTrash = this.getCancelMoveToTrash(effects);\r\n        this.addTaskFirst({ id: this.applyEffectCard.name, card1, trigger });\r\n\r\n        return result;\r\n    }\r\n\r\n    static lunchEffectTriggerForTwoCard(card1, card2, trigger) {\r\n        const isExistingCard1Effect = this.getEffects(card1, trigger);\r\n        const isExistingCard2Effect = this.getEffects(card2, trigger);\r\n        if (!isExistingCard1Effect && !isExistingCard2Effect)\r\n            return false;\r\n\r\n        const tasks = [];\r\n\r\n        if (isExistingCard1Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        if (isExistingCard2Effect)\r\n            tasks.push({ id: this.applyEffectCard.name, card1: card2, cardUnit: card1, cardPilot: card2, trigger });\r\n\r\n        this.addTasksFirst(tasks);\r\n        return tasks.length > 0;\r\n    }\r\n\r\n    static getEffects(card, trigger, ignorePair) {\r\n        let result = [];\r\n        if (!card || !card.effects)\r\n            return result;\r\n\r\n        result = card.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card } });\r\n\r\n        if (!ignorePair && card.pair && card.pair.effects)\r\n            result = result.concat(card.pair.effects.filter(y => y.trigger === trigger).map(fx => { return { ...fx, card: card.pair } }));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getCancelMoveToTrash(effects) {\r\n        const effectsThatCancelMoveToTrash = [this.sendToHand.name, this.deploy.name];\r\n        return effects.find(effect => effectsThatCancelMoveToTrash.includes(effect.id)) ? true : false;\r\n    }\r\n\r\n    static applyEffectCard(game, task) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        const effects = this.getEffects(task.card1, task.trigger, true);\r\n        if (effects.length > 0) {\r\n            const text = effects.map(fx => this.getEffectText(fx)).join('<br>');\r\n            let tasks = [];\r\n            let tasksDelay = [];\r\n            const show = effects.filter(fx => !fx.hide).length > 0;\r\n\r\n            if (show)\r\n                tasks.push({ ...task, id: this.showCardsEffect.name, text, delay:this.delay*2 });\r\n\r\n            tasks = tasks.concat(effects.map(effect => { return { ...task, id: this.applyEffect.name, effect }; }));\r\n            tasksDelay = tasks.filter(x => x.effect && x.effect.delay);\r\n            tasks = tasks.filter(x => !x.effect || !x.effect.delay);\r\n\r\n            if (tasks.length > 0) this.addTasksFirst(tasks);\r\n            if (tasksDelay.length > 0) this.addTasks(tasksDelay);\r\n        }\r\n\r\n        if (task.card1.pair)\r\n            this.applyEffectCard(game, { ...task, card1: task.card1.pair });\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if (effect.effects)\r\n            result = result.concat(effect.effects.map(x => this.getEffectText(x)).join(', '));\r\n\r\n        return result.map(x=> x?.replace(\"gainEffects\", \"\")).filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static removeOneTurnEffect(game) {\r\n        game.incruises = game.incruises.filter(x => !x.removeEndTurn);\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.incruises = player.incruises.filter(x => !x.removeEndTurn);\r\n            player.field.forEach(card => {\r\n                card.incruises = card.incruises.filter(x => !x.removeEndTurn);\r\n                this.recalculateApHp(game, player, card);\r\n            });\r\n        });\r\n\r\n        game.cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            card.removeEndTurn = [];\r\n            this.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static applyEffect(game, task, player, opponent) {\r\n        const targetResult = this.handleEffectTarget(game, task, player, opponent);\r\n        if (targetResult.stop || targetResult.end)\r\n            return targetResult;\r\n\r\n        if (!this.isEffectMatchConditions(game, task, player, opponent))\r\n            return {};\r\n\r\n        if (task.effect.cost) {\r\n            if (player.resourcesAvailable < task.effect.cost) {\r\n                this.log(`Can't play ${task.effect.card.name} because cost can't be played : ${task.effect.cost}`);\r\n                return {};\r\n            }\r\n\r\n            this.playCardCost(player, task.effect.cost);\r\n        }\r\n\r\n        if (task.effect.oneTurn)\r\n            task.card2.removeEndTurn = !task.card2.removeEndTurn ? [task.effect]\r\n                : task.card2.removeEndTurn.concat([task.effect]);\r\n\r\n        task.isConditionsAfterRespected = this.isConditionsAfterRespected(game, task, player, opponent);\r\n        if (task.card2)\r\n            task.card2.fx = task.isConditionsAfterRespected;\r\n\r\n        if (task.effect.rest)\r\n            this.setActive(game, task.effect.card, false);\r\n\r\n        return this[task.effect.id](game, task, player, opponent);\r\n    }\r\n}\r\n\r\n\r\nexport default effectsLuncher;\r\n","class effectsTarget {\r\n\r\n    static handleEffectTarget(game, task, player, opponent) {\r\n        if (task.effect.target) {\r\n            if (task.choice)\r\n                return { end: true };\r\n            else if (!task.cardChoice)\r\n                return this.popupTargetCards(game, task, player, opponent);\r\n            else\r\n                task.card2 = task.cardChoice;\r\n        }\r\n\r\n        if (!task.card2 && task.effect.card.pairedWith)\r\n            task.cardUnit = game.cards.find(x => x.index === task.effect.card.pairedWith);\r\n\r\n        if (!task.card2 && task.cardUnit)\r\n            task.card2 = task.cardUnit;\r\n\r\n        if (!task.card2)\r\n            task.card2 = task.effect.card;\r\n\r\n        return {};\r\n    }\r\n\r\n    static popupTargetCards(game, task, player, opponent) {\r\n        let cards = [];\r\n        if (task.effect.target === 'opponentUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value);\r\n\r\n        else if (task.effect.target === 'opponentActiveUnitHpUnderValue')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && x.hp < task.effect.value && x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnitRested')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x) && !x.active);\r\n\r\n        else if (task.effect.target === 'opponentUnit')\r\n            cards = opponent.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnit')\r\n            cards = player.field.filter(x => this.isCardUnit(x));\r\n\r\n        else if (task.effect.target === 'playerUnitBlocker')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hadBlocker(x));\r\n\r\n        else if (task.effect.target === 'playerCardById')\r\n            cards = player.hand.filter(x => x.id === task.effect.targetId);\r\n\r\n        else if (task.effect.target === 'playerUnitWithAttribute')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && x.attribute.includes(task.effect.targetAttribute));\r\n\r\n        else if (task.effect.target === 'playerUnitWithEffect')\r\n            cards = player.field.filter(x => this.isCardUnit(x) && this.hasEffect(x, task.effect.effect));\r\n\r\n        else if (task.effect.target === 'unit')\r\n            throw new Error(\"Can't handle this tast target : 'unit'\");\r\n\r\n        if (cards.length < 1) {\r\n            this.log(`Can't play ${task.effect.card.name} (${task.effect.id}) because there is no target available`);\r\n            return { end: true };\r\n        }\r\n\r\n        const choices = [];\r\n        if (task.effect.optional)\r\n            choices.push({ text: 'None' });\r\n\r\n        this.game.tasks = [{\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            task,\r\n            text: 'Select available target',\r\n            choices,\r\n            cards\r\n        }].concat(this.game.tasks);\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default effectsTarget;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass mainEffects {\r\n    static handleMainEffectsCard(game, card, active) {\r\n        if (!card || !card.effects || !card.effects.find(x => x.trigger == this.trigger_main))\r\n            return;\r\n\r\n        if (active)\r\n            game.effects = game.effects.concat(card.effects.filter(fx => fx.trigger === this.trigger_main).map(fx => { return { ...fx, card, index: card.index }; }))\r\n        else\r\n            game.effects = game.effects.filter(x => x.index !== card.index);\r\n\r\n        this.refreshPlayersMainEffect(game);\r\n    }\r\n\r\n    static refreshPlayersMainEffect(game) {\r\n        game.player1.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === true).length > 0;\r\n        game.player2.hasEffects = game.effects.filter(fx => fx.card.isPlayer1 === false).length > 0;\r\n    }\r\n\r\n    static lunchMainEffectCard(game, task) {\r\n        if (!task) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name });\r\n            return game;\r\n        }\r\n\r\n        if (task.choice)\r\n            return {};\r\n\r\n        if (!task.cardChoice) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                text: `Select a main effect.`,\r\n                cards: game.effects.filter(x => x.card.isPlayer1).map(x => x.card),\r\n                task, isPlayer1: true,\r\n                choices: [{ text: 'cancel' }]\r\n            });\r\n            return { stop: true };\r\n        }\r\n\r\n\r\n        return this.lunchEffectTriggerForOneCard(task.cardChoice, this.trigger_main);\r\n    }\r\n}\r\n\r\n\r\nexport default mainEffects;\r\n","class positioner {\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createGrid(screenWidth, screenHeight) {\r\n        const grid = {};\r\n\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        grid.width = screenWidth;\r\n        grid.height = screenHeight;\r\n        grid.widthMargin = grid.width - (grid.border * 2);\r\n        grid.heightMargin = grid.height - (5 * grid.border);\r\n        grid.boxHeight = (grid.height - (grid.border * 6)) / 5.5;\r\n        grid.boxWidth = grid.boxHeight * 107 / 150;\r\n\r\n        grid.isVertical = grid.height > grid.width;\r\n\r\n        if (grid.boxWidth > grid.widthMargin / 7)\r\n            grid.boxWidth = grid.widthMargin / 7;\r\n        grid.card100 = { width: grid.boxWidth, height: grid.boxHeight };\r\n\r\n        // Player2 - Hand\r\n        let x = grid.border, y = grid.border;\r\n        let width = grid.widthMargin / 2 - grid.border2, height = grid.boxHeight / 2;\r\n        grid.player2Hand = { x, y, width, height, isPlayer1: false, location: this.locationHand };\r\n        y += grid.border + height;\r\n\r\n        // Player2 - Field\r\n        width = grid.widthMargin - grid.border - grid.boxWidth;\r\n        height = grid.boxHeight * 1.5;\r\n        grid.player2Field = { x, y, width, height, isPlayer1: false, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Center Zone\r\n        x = grid.border;\r\n        grid.centerZone = { x, y, width: grid.widthMargin, height: grid.boxHeight };\r\n        y += grid.border + grid.boxHeight;\r\n        grid.centerZoneP2 = { ...grid.centerZone, x: 0, width: (grid.centerZone.width - 100) / 2 + grid.border };\r\n\r\n        // Player1 - Field\r\n        grid.player1Field = { x, y, width, height, isPlayer1: true, location: this.locationField };\r\n        y += grid.border + height;\r\n\r\n        // Player1 - Hand\r\n        height = grid.boxHeight;\r\n        grid.player1Hand = { x, y, width, height, isPlayer1: true, location: this.locationHand };\r\n\r\n        if (grid.isVertical)\r\n            this.createVerticalGrid(grid);\r\n        else\r\n            this.createHorizontalGrid(grid);\r\n\r\n        grid.player1Field.cardSizeReduce = true;\r\n        grid.player2Field.cardSizeReduce = true;\r\n\r\n        // Buttons\r\n        x = grid.player1Deck.x;\r\n        y = grid.player1Trash.y + grid.player1Trash.height + grid.border;\r\n        height = (grid.height - grid.border2 - y) / 2;\r\n        width = grid.isVertical ? grid.boxWidthVertical : grid.boxWidth;\r\n        grid.buttonEffect = { x, y, width, height };\r\n        y += height + grid.border;\r\n        grid.buttonEndTurn = { x, y, width, height };\r\n\r\n        width = grid.boxHeight;\r\n        height = grid.boxHeight;\r\n        grid.resources = { x: (grid.width / 2) - (width / 2), y: grid.centerZone.y, width, height };\r\n\r\n        grid.halfPlayer1 = { x: 0, y: grid.player1Field.y, width: grid.width, height: grid.height / 2 };\r\n        grid.halfPlayer2 = { x: 0, y: 0, width: grid.width, height: grid.centerZone.y };\r\n\r\n        grid.centerZone.heightQuarter = grid.centerZone.height / 5;\r\n\r\n        // Highlight center cards\r\n        grid.textZone = { ...grid.player2Hand, width: grid.width - grid.border2 };\r\n        grid.logZone = { ...grid.player2Hand, x: grid.width / 2 + grid.border };\r\n        grid.highlightCardCenter = { y: grid.player2Field.y, height: grid.height - grid.player2Field.y };\r\n        grid.highlightCardLeft = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 2, 1), y: grid.highlightCardCenter.y };\r\n        grid.highlightCardRight = { ...grid.highlightCardLeft, x: grid.highlightCardLeft.x + grid.highlightCardLeft.width };\r\n        grid.highlightCardCenter = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 1, 1), y: grid.highlightCardCenter.y };\r\n\r\n        // Drop Points\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Field.drop = {\r\n            x: grid.player1Field.x + (grid.player1Field.width / 2) - (width / 2),\r\n            y: grid.player1Field.y + (grid.player1Field.height / 2) - (height / 2),\r\n            width, height, text: 'Play'\r\n        }\r\n        grid.player2Field.drop = {\r\n            x: grid.player2Field.x + (grid.player2Field.width / 2) - (width / 2),\r\n            y: grid.player2Field.y + (grid.player2Field.height / 2) - (height / 2),\r\n            width, height, text: 'Attack'\r\n        }\r\n\r\n        return grid;\r\n    }\r\n\r\n    static createVerticalGrid(grid) {\r\n        grid.boxWidthVertical = (grid.widthMargin - (8 * grid.border)) / 6;\r\n        grid.boxHeightVertical = grid.boxWidthVertical * 150 / 107;\r\n\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidthVertical;\r\n        let height = grid.boxHeightVertical;\r\n\r\n        // Player1 - Shield\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player1 - Deck\r\n        x = grid.player1Shield.x;\r\n        y += height + grid.border;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n\r\n        // Player1 - Trash\r\n        y += height + grid.border;\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = y - height - grid.border;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n\r\n        // Player2 - Trash\r\n        y = y - height - grid.border;\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n    }\r\n\r\n    static createHorizontalGrid(grid) {\r\n        // Player1 - Deck\r\n        let x = grid.player1Field.x + grid.player1Field.width + grid.border;\r\n        let y = grid.centerZone.y;\r\n        let width = grid.boxWidth;\r\n        let height = grid.boxHeight;\r\n        grid.player1Deck = { x, y, width, height, isPlayer1: true, location: this.locationDeck };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Trash\r\n        grid.player1Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y += height + grid.border;\r\n\r\n        // Player1 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x - width - grid.border;\r\n        width = grid.boxWidth;\r\n        height = grid.boxHeight;\r\n        grid.player1Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player1 - Base\r\n        x = x - width - grid.border;\r\n        grid.player1Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n\r\n        // Player2 - Deck\r\n        x = grid.border;\r\n        y = grid.centerZone.y;\r\n        grid.player2Deck = { x, y, width, height, isPlayer1: false, location: this.locationDeck };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Trash\r\n        grid.player2Trash = { x, y, width, height, isPlayer1: true, location: this.locationTrash };\r\n        y -= height - grid.border;\r\n\r\n        // Player2 - Shield\r\n        y = grid.centerZone.y;\r\n        x = x + width + grid.border;\r\n        grid.player2Shield = { x, y, width, height, isPlayer1: true, location: this.locationShield };\r\n\r\n        // Player2 - Base\r\n        x = x + width + grid.border;\r\n        grid.player2Base = { x, y, width, height, isPlayer1: true, location: this.locationBase };\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = this.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.15);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        let x = (width - desiredWidth) / 2;\r\n        let y = (height - desiredHeight) / 2;\r\n\r\n        if (count > 1) {\r\n            x = (width - (count * desiredWidth)) / 2;\r\n        }\r\n\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n\r\n        const totalCards = centerEmptyZone ? total + 1 : total;\r\n        const cardSizeModified = centerEmptyZone ? this.getCardSize(position.width, zoneHeight, totalCards, position.cardHeightPercent) : cardSize;\r\n        let mid = Math.floor(totalCards / 2);\r\n        const indexModified = centerEmptyZone && index >= mid ? index + 1 : index;\r\n        if (totalCards < wrapCut || position.height < cardSizeModified.height * 2)\r\n            return this.getCardPositionXY(position, cardSizeModified, totalCards, indexModified, degree);\r\n\r\n        mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, zoneHeight / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n\r\n    static alignPositionNextTo(game, source, width = -1, height = -1) {\r\n        let sens = -1; // 0:Right, Up, Left, Down\r\n        const widthEdit = width != -1 ? width : 300;\r\n        const heightEdit = height != -1 ? height : game.grid.boxHeight;\r\n        let result = { isValid: false };\r\n        while (sens < 4 && !result.isValid) {\r\n            sens++;\r\n            result = this.alignPositionNextToUsingSens(game, source, widthEdit, heightEdit, sens)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static alignPositionNextToUsingSens(game, source, width, height, sens) {\r\n        let x = sens === 0 ? source.x + source.width + game.grid.border\r\n            : sens === 2 ? source.x - width - game.grid.border\r\n                : source.x + (source.width / 2) - (width / 2);\r\n\r\n        let y = sens === 3 ? source.y + source.height + game.grid.border\r\n            : sens === 1 ? source.y - height - game.grid.border\r\n                : source.y + (source.height / 2) - (height / 2);\r\n\r\n        let isValid = true;\r\n        const isHorizontal = (sens === 0 || sens === 2);\r\n        const isVertical = (sens === 1 || sens === 3);\r\n\r\n        // Right offset\r\n        let xOffset = x + width - game.grid.width;\r\n        if (isVertical && xOffset > 0)\r\n            x = x - xOffset - game.grid.border2;\r\n\r\n        xOffset = x + width + game.grid.border - game.grid.width;\r\n        if (xOffset > 0)\r\n            isValid = false;\r\n\r\n        // Left offset\r\n        if (isVertical && x < game.grid.border)\r\n            x = game.grid.border;\r\n\r\n        if (x < game.grid.border)\r\n            isValid = false;\r\n\r\n        // Bottom offser\r\n        let yOffset = y + height - game.grid.height;\r\n        if (isHorizontal && yOffset > 0)\r\n            y = y - yOffset - game.grid.border2;\r\n\r\n        yOffset = y + height - game.grid.border - game.grid.height;\r\n        if (yOffset > 0)\r\n            isValid = false;\r\n\r\n        // Top offset\r\n        if (isHorizontal && y < game.grid.border)\r\n            y = game.grid.border;\r\n\r\n        if (y < game.grid.border)\r\n            isValid = false;\r\n\r\n        const result = { x, y, width, height, isValid, sens };\r\n        result.arrow = this.addArrow(result, source, sens);\r\n\r\n        return result;\r\n    }\r\n\r\n    static addArrow(from, to, sens) {\r\n        const size = 25;\r\n        // const toCenterX = to.x + to.width / 2;\r\n        // const toCenterY = to.y + to.height / 2;\r\n\r\n        let x = (to.x + (to.width / 2) - from.x) - size / 2;\r\n        let y = (to.y + (to.height / 2) - from.y) - size / 2;\r\n        switch (sens) {\r\n            case 0: // from est à droite de to\r\n                x = -1*size / 2;\r\n                break;\r\n            case 1: // from est au-dessus de to\r\n                y = from.height - size / 2;\r\n                break;\r\n            case 2: // from est à gauche de to\r\n                x = from.width - size / 2;\r\n                break;\r\n            case 3: // from est en dessous de to \r\n                y = -1*size / 2;\r\n                break;\r\n        }\r\n\r\n        return { x, y, width: size, height: size, rotation: 45 }\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","class selectable {\r\n    static setSelectable(game, player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = game.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (this.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n\r\n    static setSelectableFalse() {\r\n        this.game.cards.forEach(card => card.selectable = false);\r\n    }\r\n}\r\n\r\n\r\nexport default selectable;\r\n","class cardAction {    \r\n    static noActionCard = 'no action card';\r\n\r\n    static askForActionCards(game, task, player, opponent) {\r\n        let result = this.askForActionCardsForThisPlayer(game, task, 'actionCardOpponent', opponent);\r\n        if(result.stop)\r\n            return result;\r\n\r\n        return this.askForActionCardsForThisPlayer(game, task, 'actionCardPlayer', player);\r\n    }\r\n\r\n    static askForActionCardsForThisPlayer(game, task, property, player) {        \r\n        if (task[property]) \r\n            return {};\r\n\r\n        if (task.choice && task.choice.text === this.noActionCard){\r\n            task[property] = task.choice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return {};\r\n        }\r\n\r\n        if (task.cardChoice) {\r\n            this.playCardCost(player, task.cardChoice.cost);\r\n            this.addTasksFirst([\r\n                { id: this.applyEffectCard.name, card1: task.cardChoice, trigger: this.trigger_action, taskAttack:task},\r\n                { id: this.move.name, card1: task.cardChoice, to: this.locationTrash }\r\n            ]);\r\n            task[property] = task.cardChoice;\r\n            task.choice = null;\r\n            task.cardChoice = null;\r\n            return { stop: true };\r\n        }\r\n        \r\n        const actionCard = player.hand.filter(x => x.effects && x.effects.find(fx => fx.trigger === this.trigger_action) && x.cost <= player.resourcesAvailable);\r\n        if (actionCard.length > 0) {\r\n            const playerIndex = player.isPlayer1 ? '1' : '2';\r\n            game.tasks = [{\r\n                id: this.popup.name,\r\n                text: `Select an action card for player ${playerIndex} ?`,\r\n                cards: actionCard,\r\n                task,  isPlayer1:player.isPlayer1,\r\n                choices: [{ text: this.noActionCard }]\r\n            }].concat(game.tasks);\r\n            return { stop: true };\r\n        }\r\n        \r\n        task[property] = { text: this.noActionCard };\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default cardAction;\r\n","class conditions {\r\n    static isEffectMatchConditions(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditions);\r\n    }\r\n\r\n    static isConditionsAfterRespected(game, task, player, opponent) {\r\n        return this.isConditionsRespected(game, task, player, opponent, task.effect.conditionsAfter);\r\n    }\r\n\r\n    static isConditionsRespected(game, task, player, opponent, conditions) {\r\n        if (!conditions || conditions.length < 1)\r\n            return true;\r\n\r\n        let result = true;\r\n        conditions.forEach(condition => {\r\n            if (!result)\r\n                return result;\r\n\r\n            if (condition.id === 'unitHas')\r\n                result = result && this.hasEffect(task.card2, condition.value);\r\n\r\n            else if (condition.id === 'isInHand')\r\n                result = result && task.card2.location === this.locationHand;\r\n\r\n            else if (condition.id === 'isInField')\r\n                result = result && task.card2.location === this.locationField;\r\n\r\n            else if (condition.id === 'isPlayerTurn')\r\n                result = result && game.isPlayer1 === player.isPlayer1;\r\n\r\n            else if (condition.id === 'pilotLevelMin')\r\n                result = result && task.cardPilot && task.cardPilot.level >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXUnitsWithAttribute')\r\n                result = result && player.field.filter(card => this.isCardUnit(card) && this.hasAttribute(card, condition.attribute)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCommandInTrash')\r\n                result = result && player.trash.filter(card => this.isCardCommand(card)).length >= condition.value;\r\n\r\n            else if (condition.id === 'minimumXCardsOpponentHand')\r\n                result = result && opponent.hand.length >= condition.value;\r\n\r\n            else if (condition.id === 'pilotHasAttribute')\r\n                result = result && task.cardPilot && this.hasAttribute(task.cardPilot, condition.value);\r\n\r\n            else if (condition.id === 'maximumXUnitsOnField')\r\n                result = result && player.field.length <= condition.value;\r\n\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default conditions;\r\n","class cardMove {\r\n\r\n    static spawnOrMove(game, task, player) {\r\n        const cardSpawn = this.moveCard(game, player, task.card1, task.from, task.to);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static move(game, task, player) {\r\n        return this.moveCard(game, player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!this.game.cards.find(x => x.index === card.index))\r\n            this.game.cards = this.addIn(this.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? this.game.player1 : this.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n        return card;\r\n    }\r\n\r\n    static moveCard(game, player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        let from = locationFrom ? locationFrom : card?.location;\r\n        from = from == \"pair\" ? null : from;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if (from)\r\n            player[from] = this.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        const onField = [this.locationField, this.locationBase];\r\n        if (!card.isTemporaryCard)\r\n            player[to] = this.addIn(player[to], card);\r\n        else {\r\n            if (onField.includes(locationTo))\r\n                player[to] = this.addIn(player[to], card);\r\n            else\r\n                card.fadeOut = true;\r\n        }\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.location = locationTo;\r\n        card.hidestat = !onField.includes(card.location);\r\n        card.verso = card.location === this.locationHand && !card.isPlayer1 && !card.pairedWith && !card.pair;\r\n\r\n        this.handleMainEffectsCard(game, card, onField.includes(card.location));\r\n\r\n        if (card.pair) {\r\n            card.pair.pairedWith = null;\r\n            card.pair.link = false;\r\n            this.moveCard(game, player, card.pair, locationFrom, this.locationTrash);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [this.locationHand, this.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport default cardMove;\r\n","class cardPlay {\r\n    static play(game, task, player) {\r\n        let result = {};\r\n\r\n        if (!task.card2 && !task.zone)\r\n            result.sendBack = true;\r\n\r\n        else if (task.card1.location === this.locationHand)\r\n            result = this.playFromHand(player, task);\r\n\r\n        else if (task.card1.location === this.locationField)\r\n            result = this.prepareAttack(task, player);\r\n\r\n        else\r\n            result = this.playThisCard(player, task, false);\r\n\r\n        if (result && result.sendBack)\r\n            this.sendCardBackToSquareOne(task.card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static prepareAttack(task, player) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer || !task.card1.canAttack) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        this.addTaskPos2({ id: this.attack.name, attacker: task.card1, target: task.card2, isPlayer1: task.card1.isPlayer1, breach: null });\r\n    }\r\n\r\n    static playFromHand(player, task) {\r\n        const isSamePlayer = task.zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = task.regularPlay && player.resourcesAvailable < task.card1.cost;\r\n\r\n        if (!isSamePlayer || task.zone.location == this.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playThisCard(player, task, task.regularPlay);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...this.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        this.game.refresh = true;\r\n        return {};\r\n    }\r\n\r\n    static playThisCard(player, task, playCost) {\r\n        let isPilot = this.isCardPilot(task.card1);\r\n        let isCommand = this.isCardCommand(task.card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(player, task);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        this.spawnIfNot(task.card1);\r\n\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.card1, this.trigger_onplay).isEffectExisting;\r\n        if (isExisting) {\r\n            task.effectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n\r\n        if (this.isCardUnit(task.card1) && player.field.length < 6) {\r\n            task.card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationField });\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(task.card1)) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            if (player.base.length > 0)\r\n                this.addTaskPos2({ id: this.move.name, card1: player.base[0], to: this.locationTrash });\r\n\r\n            this.addTaskPos2({ id: this.move.name, card1: task.card1, to: this.locationBase });\r\n            task.card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && task.card2 && this.isCardUnit(task.card2)) {\r\n            if (task.card1.pair || task.card2.pair || task.card1.pairedWith || task.card2.pairedWith) {\r\n                this.sendCardBackToSquareOne(task.card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n            this.addTaskPos2({ id: this.pair.name, card1: task.card1, card2: task.card2 });\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            if (playCost)\r\n                this.playCardCost(player, task.card1.cost);\r\n\r\n            this.addTasksPos2([\r\n                { id: this.applyEffectCard.name, card1: task.card1, card2: task.card2, trigger: this.trigger_command },\r\n                { id: this.move.name, card1: task.card1, to: this.locationTrash }\r\n            ]);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(task.card1);\r\n    }\r\n\r\n    static playCardCost(player, cost) {\r\n        if (player.resourcesEx > 0)\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - cost);\r\n        player.resourcesAvailable -= cost;\r\n    }\r\n\r\n    static askPilotOrCommand(player, task) {\r\n        if (!task.card2 || !this.isCardPilot(task.card1) || !this.isCardCommand(task.card1))\r\n            return;\r\n\r\n        if (task.card2.pair)\r\n            task.pilotOrCommand = 'Command';\r\n\r\n        if (task.choice)\r\n            task.pilotOrCommand = task.choice.text;\r\n\r\n        if (task.pilotOrCommand) {\r\n            const isPilot = task.pilotOrCommand === 'Pilot';\r\n            const isCommand = task.pilotOrCommand === 'Command';\r\n            return { isPilot, isCommand };\r\n        }\r\n\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            isPlayer1: player.isPlayer1,\r\n            text: 'Do you want to play as pilot or command ?',\r\n            choices: [{ text: 'Pilot' }, { text: 'Command' }],\r\n            task\r\n        });\r\n        return { stop: true }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","class refresh {\r\n\r\n    static refreshFieldAndHand(game, task, player) {\r\n        this.refreshPlayerArea(player.hand, player.positions.hand, false, 7, false);\r\n        this.refreshPlayerArea(player.field, player.positions.field, false, 3, true);\r\n        this.refreshPlayerArea(player.base, player.positions.base, true);\r\n\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        game.cards = game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        this.setSelectable(game, player);\r\n\r\n        player.resource = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        player.baseIcon = 'deck6.png';\r\n        player.shieldIcon = this.getIcon(player.shield.length);\r\n        player.deckIcon = this.getIcon(player.deck.length);\r\n        player.trashIcon = this.getIcon(player.trash.length);\r\n\r\n        game.textEffect = task.textEffect;\r\n    }\r\n\r\n    static refreshPlayerArea(cards, position, useZoneSize, wrapCut, centerEmptyZone) {\r\n        let zoneHeight = position.height;\r\n        if (position.cardSizeReduce)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.fx = false;\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut, centerEmptyZone);\r\n            card.to = this.adjustRotationSize(card.to, card.active);\r\n            card.location = position.location;\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static adjustRotationSize(to, active, percent = 0.7) {\r\n        if (active)\r\n            return to.previous ? to.previous : to;\r\n\r\n        if (to.previous)\r\n            return to;\r\n\r\n        const reverPercentHalf = (1 - percent) / 2;\r\n        const loseX = to.width * reverPercentHalf;\r\n        const loseY = to.height * reverPercentHalf;\r\n        return { ...to, previous: to, x: to.x + loseX, y: to.y + loseY, width: to.width * percent, height: to.height * percent };\r\n    }\r\n\r\n    static getIcon(length) {\r\n        return length < 1 ? 'deck6.png'\r\n            : length < 2 ? 'deck5.png'\r\n                : length < 7 ? 'deck4.png'\r\n                    : length < 15 ? 'deck3.png'\r\n                        : length < 35 ? 'deck2.png'\r\n                            : 'deck1.png';\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n        if (game.tuto) {            \r\n            this.continueTuto(game);\r\n        }\r\n    }\r\n\r\n    static resetZIndex(game) {\r\n        game.cards.forEach(card => {\r\n            card.zindex = card.pairedWith ? 1 : 2;\r\n        });\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        if (!game.triggerRefreshAlreadyDone) {\r\n            this.lunchEffectTriggerMultiple(game.cards, this.trigger_refresh);\r\n            game.triggerRefreshAlreadyDone = true;\r\n        }\r\n\r\n        this.needTaskEndRefresh = false;\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        this.cardHighlight = [];\r\n\r\n        const players = [game.player1, game.player2];\r\n        players.forEach(player => {\r\n            player.field.forEach(card => this.recalculateApHp(game, player, card));\r\n            this.refreshFieldAndHand(game, {}, player);\r\n        });\r\n\r\n        this.refreshDragAndDrop(game);\r\n\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n\r\n    static refreshDragAndDrop(game) {\r\n        const drags = [];\r\n\r\n        // Hand\r\n        const unitWithoutPilots = game.player1.field.filter(x => !x.pair);\r\n        game.player1.hand.forEach(card => {\r\n            let drops = card.active ? [this.game.grid.player1Field.drop] : [];\r\n\r\n            if (card.active) {\r\n                let targets = [];\r\n\r\n                if (this.isCardCommand(card))\r\n                    targets = game.player1.field;\r\n                else if (this.isCardPilot(card))\r\n                    targets = unitWithoutPilots;\r\n\r\n                drops = drops.concat(targets.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Pair' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(card), card, show: false, targets: drops });\r\n        });\r\n\r\n        // Field\r\n        game.player1.field.forEach(attacker => {\r\n            let drops = attacker.active ? [this.game.grid.player2Field.drop] : [];\r\n\r\n            const ennemyTarget = game.player2.field.filter(x => this.isValidTarget(game.player2, attacker, x));\r\n            if (attacker.active && ennemyTarget.length > 0) {\r\n                drops = drops.concat(ennemyTarget.map(unit => { return { ...this.getPos(unit), card: unit, text: 'Attack' }; }));\r\n            }\r\n\r\n            if (drops.length > 0)\r\n                drags.push({ ...this.getPos(attacker), card: attacker, show: false, targets: drops });\r\n        });\r\n\r\n\r\n        game.player1.drags = drags;\r\n    }\r\n\r\n    static getPos(card) { return card.to ? card.to : card.position; }\r\n}\r\n\r\n\r\nexport default refresh;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass effects {\r\n    static draw(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        const tasks = [];\r\n        for (let i = 0; i < value; i++)\r\n            tasks.push({\r\n                id: this.spawnOrMove.name,\r\n                isPlayer1: player.isPlayer1,\r\n                from: this.locationDeck,\r\n                to: this.locationHand,\r\n                delay: true\r\n            });\r\n\r\n        this.addTasksFirst(tasks);\r\n    }\r\n\r\n    static setCost(game, task, player, opponent) {\r\n        task.card2.costOrigin = task.card2.costOrigin ? task.card2.costOrigin : task.card2.cost;\r\n        const reduceValue = task.isConditionsAfterRespected ? task.effect.value : 0;\r\n        task.card2.cost = task.card2.costOrigin + reduceValue;\r\n    }\r\n\r\n    static playToken(game, task, player, opponent) {\r\n        if (!task.effect.value)\r\n            throw new Error('Missing effect.value :' + JSON.stringify(task));\r\n        const isPlayer1 = player.isPlayer1;\r\n        this.addTaskFirst({ id: this.spawnOrMove.name, card1: this.createCard(task.effect.value, isPlayer1), to: this.locationField, isPlayer1 });\r\n    }\r\n\r\n    static playTokenByUnitsNumber(game, task, player, opponent) {\r\n        for (let i = 0; i < task.effect.values.length; i++) {\r\n            const value = task.effect.values[i];\r\n            if (value.min !== undefined && player.field.length >= value.min) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n            else if (value.max !== undefined && player.field.length <= value.max) {\r\n                return this.playToken(game, { effect: { value: value.id } }, player, opponent);\r\n            }\r\n        }\r\n    }\r\n\r\n    static dealDamage(game, task, player, opponent) {\r\n        task.card2.hp -= task.effect.value;\r\n        this.log(`${task.card2.name} HP is reduced by ${task.effect.value}`);\r\n        if (task.card2.hp < 1) {\r\n            const tasks = this.destroyUnit(task.card2, false);\r\n            this.addTasksPos2(tasks);\r\n        }\r\n    }\r\n\r\n    static discard(game, task, player, opponent) {\r\n        const card1 = task.cardChoice;\r\n        if (!card1) {\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        this.log(`${card1.name} discarded`);\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationTrash });\r\n    }\r\n\r\n    static pilotToHand(game, task, player, opponent) {\r\n        if (!task.card2.pair)\r\n            return;\r\n\r\n        const card1 = task.card2.pair;\r\n        delete (task.card2.pair);\r\n        card1.pairedWith = null;\r\n        this.addTaskPos2({ id: this.move.name, card1, to: this.locationHand });\r\n        this.log(`${card1.name} return to hand`);\r\n    }\r\n\r\n    static gainEffects(game, task, player, opponent) {\r\n        task.card2.effects = task.card2.effects.concat(task.effect.effects);\r\n        this.log(`${task.card2.name} gain these effects : ${task.effect.effects.map(x => x.id)}`);\r\n    }\r\n\r\n    static rest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, false);\r\n    }\r\n\r\n    static unrest(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n    }\r\n\r\n    static unrestButCantAttack(game, task, player, opponent) {\r\n        this.setActive(game, task.card2, true);\r\n        task.card2.canAttack = false;\r\n    }\r\n\r\n    static repair(game, task, player, opponent) {\r\n        if (task.card2.hp < task.card2.hpMax) {\r\n            this.log(`${task.card2.name} HP is repaired by ${task.effect.value}`);\r\n            task.card2.hpOrigin = Math.min(task.card2.hpOrigin + task.effect.value, task.card2.hpMaxOrigin);\r\n            this.recalculateApHp(game, player, task.card2);\r\n        }\r\n    }\r\n\r\n    static get1ShieldToHand(game, task, player, opponent) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card1 = player.shield.splice(0, 1)[0];\r\n        card1.location = player.positions.shield.location;\r\n        this.addTaskPos2({ id: this.spawnOrMove.name, card1, to: this.locationHand });\r\n        this.log(`One card is move from shield to hand`);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(game, task, player, opponent) {\r\n        if (!task.cardChoice) {\r\n            task.cards = [this.getAndRemoveFirst(player.deck), this.getAndRemoveFirst(player.deck)];\r\n            this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: player.isPlayer1,\r\n                task,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards: task.cards\r\n            });\r\n            return { stop: true }\r\n        }\r\n\r\n        const bottomCard = task.cards.filter(card => card.index !== task.cardChoice.index);\r\n        player.deck = [task.cardChoice].concat(player.deck).concat(bottomCard);\r\n        this.log(`Deck order have been changed (top and bottom)`);\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(game, task, player, opponent) {\r\n        if (!task.taskAttack || !task.taskAttack.attacker)\r\n            throw new Error('cant handle this effect : ' + JSON.stringify(task.effect));\r\n\r\n        task.taskAttack.shieldProtection = task.taskAttack.attacker.level <= task.effect.value;\r\n        if (task.taskAttack.shieldProtection)\r\n            this.log(`Shield are protected`);\r\n        else\r\n            this.log(`Shield are not protected because attacker is level ${task.taskAttack.attacker.level}`);\r\n    }\r\n\r\n    static gainThisTurn(game, task, player, opponent) {\r\n        const effect = this.clone(task.effect);\r\n        delete effect.target;\r\n        effect.id = effect.effect2;\r\n        effect.oneTurn = true;\r\n        effect.card = task.card2;\r\n        this.log(`${task.card2.name} get ${task.effect.effect2} for this turn`);\r\n        this.applyEffect(game, { id: this.applyEffect.name, effect }, player, opponent)\r\n    }\r\n\r\n    static incruise(game, task, player, opponent) {\r\n        const ap = task.isConditionsAfterRespected ? task.effect.ap : 0;\r\n        const hp = task.isConditionsAfterRespected ? task.effect.hp : 0;\r\n\r\n        task.card2.incruises = task.card2.incruises.filter(x => x.index != task.effect.card.index);\r\n        task.card2.incruises.push({\r\n            ap,\r\n            hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        const cardPlayer = this.getPlayer(task.card2.isPlayer1);\r\n\r\n        this.recalculateApHp(game, cardPlayer, task.card2);\r\n        this.log(`${task.card2.name} have been incruised by AP ${ap} and HP ${hp}`);\r\n    }\r\n\r\n    static incruisePlayerField(game, task, player, opponent) {\r\n        player.incruises = player.incruises.filter(x => x.index != task.effect.card.index);\r\n        player.incruises.push({\r\n            ap: task.effect.ap,\r\n            hp: task.effect.hp,\r\n            index: task.effect.card.index,\r\n            source: task.effect.card.name,\r\n            removeEndTurn: task.effect.removeEndTurn\r\n        });\r\n        this.log(`Player${player.index} field have been incruised by AP ${task.effect.ap} and HP ${task.effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(game, task, player, opponent) {\r\n        this.log(`${task.card2.name} is send to hand`);\r\n        this.addTaskPos2({ id: this.move.name, card1: task.card2, to: this.locationHand });\r\n    }\r\n\r\n    static unrestResource(game, task, player, opponent) {\r\n        const value = task.effect.value ? task.effect.value : 1;\r\n        if (player.resourcesAvailable < player.resourcesMax) {\r\n            player.resourcesAvailable = Math.min(player.resourcesMax, player.resourcesAvailable + value);\r\n            this.log(`Player${player.index} resources have been incruised by ${value}`);\r\n        }\r\n    }\r\n\r\n    static placeExResource(game, task, player, opponent) {\r\n        player.resourcesEx += task.effect.value;\r\n        player.resourcesAvailable += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} ex resource(s)`);\r\n    }\r\n\r\n    static placeRestedResource(game, task, player, opponent) {\r\n        player.resourcesMax += task.effect.value;\r\n        this.log(`${task.card2.name} deploy ${task.effect.value} rested resource(s)`);\r\n    }\r\n\r\n    static breach(game, task, player, opponent) {\r\n        if (!task.card2.breach || task.card2.breach < task.effect.value) {\r\n            task.card2.breach = task.effect.value;\r\n            this.log(`${task.card2.name} has breach ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static blocker(game, task, player, opponent) {\r\n        const alreadyDone = this.alreadyDone(task.card2.blocker, task.isConditionsAfterRespected);\r\n        if (alreadyDone)\r\n            return;\r\n\r\n        task.card2.blocker = task.isConditionsAfterRespected;\r\n        const text = task.isConditionsAfterRespected ? 'has blocker' : 'don t has blocker';\r\n        this.log(`${task.card2.name} ${text}`);\r\n    }\r\n\r\n    static highManeuver(game, task, player, opponent) {\r\n        if (!task.card2.highManeuver) {\r\n            task.card2.highManeuver = true;\r\n            this.log(`${task.card2.name} has highManeuver`);\r\n        }\r\n    }\r\n\r\n    static deploy(game, task, player, opponent) {\r\n        let card1 = task.card2;\r\n        card1.selectable = false;\r\n        card1.canAttack = false;\r\n        const cardPlayer = this.getPlayer(card1.isPlayer1);\r\n        this.log(`${card1.name} is deployed`);\r\n        this.addTask({ id: this.play.name, card1, zone: cardPlayer.positions.field, regularPlay: false });\r\n    }\r\n\r\n    static attackActiveEnnemy(game, task, player, opponent) {\r\n        if (!task.card2.attackActiveEnnemy || task.card2.attackActiveEnnemy < task.effect.value) {\r\n            task.card2.attackActiveEnnemy = task.effect.value;\r\n            this.log(`${task.card2.name} can now attack unit with AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(game, task, player, opponent) {\r\n        if (!task.card2.immuneAp || task.card2.immuneAp < task.effect.value) {\r\n            task.card2.immuneAp = task.effect.value;\r\n            this.log(`${task.card2.name} is now immune to AP < ${task.effect.value}`);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default effects;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass attack {\r\n    static stepSelectBlocker = 'stepSelectBlocker';\r\n    static stepSelectActionCards = 'stepSelectActionCards';\r\n    static stepSelectCardOpponent = 'stepSelectCardOpponent';\r\n    static stepEffectBattle = 'stepEffectBattle';\r\n    static stepShowFight = 'stepShowFight';\r\n    static stepFight = 'stepFight';\r\n    static attackStep = [\r\n        this.stepSelectBlocker,\r\n        this.stepSelectActionCards,\r\n        this.stepSelectCardOpponent,\r\n        this.stepEffectBattle,\r\n        this.stepShowFight,\r\n        this.stepFight\r\n    ];\r\n\r\n    static attack(game, task, player, opponent) {\r\n        game.taskAttack = task;\r\n        let result = {};\r\n        task.step = task.step ? task.step : this.attackStep[0];\r\n\r\n        while (!result.stop && !result.end) {\r\n            if (task.step === this.stepSelectBlocker)\r\n                result = this.selectBlocker(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectActionCards)\r\n                result = this.askForActionCards(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepSelectCardOpponent)\r\n                result = this.selectCardOpponent(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepEffectBattle)\r\n                result = this.effectBattle(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepShowFight)\r\n                result = this.showFight(game, task, player, opponent);\r\n\r\n            else if (task.step === this.stepFight)\r\n                result = this.fight(game, task, player, opponent);\r\n\r\n            else\r\n                result.end = true;\r\n\r\n            if (!result || (!result.stop && !result.end))\r\n                this.nextStep(task);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static nextStep(task) {\r\n        const array = this.attackStep;\r\n        const index = array.indexOf(task.step);\r\n        if (index < array.length - 1)\r\n            task.step = array[index + 1];\r\n        else\r\n            task.step = 'end';\r\n        return {};\r\n    }\r\n\r\n    static selectBlocker(game, task, player, opponent) {\r\n        const blockers = opponent.field.filter(x => x.blocker && x.active);\r\n        if (task.attacker.highManeuver || task.blocker || blockers.length < 1)\r\n            return {};\r\n\r\n        if (!task.cardChoice && !task.choice)\r\n            return this.addTaskFirst({\r\n                id: this.popup.name,\r\n                isPlayer1: opponent.isPlayer1,\r\n                task,\r\n                text: 'Select a blocker ?',\r\n                cards: blockers,\r\n                choices: [{ text: 'none' }]\r\n            });\r\n\r\n        task.blocker = task.cardChoice;\r\n        delete (task.cardChoice);\r\n        delete (task.choice);\r\n        return {};\r\n    }\r\n\r\n    static selectCardOpponent(game, task, player, opponent) {\r\n        if(task.attacker.location !== this.locationField){\r\n            this.log(`Attack is canceled because ${task.attacker.name} is no longer on the field.`);\r\n            return {end:true};\r\n        }\r\n\r\n        if (task.blocker) {\r\n            task.target = task.blocker;\r\n            return {};\r\n        }\r\n\r\n        if (task.target) {\r\n            const isValidTarget = this.isValidTarget(opponent, task.attacker, task.target);\r\n            return { end: !isValidTarget };\r\n        }\r\n\r\n        if (opponent.base.length > 0) {\r\n            task.target = opponent.base[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.attacker.ap < 1) {\r\n            this.setActive(game, task.attacker, false);\r\n            return {};\r\n        }\r\n\r\n        if (opponent.shield.length > 0) {\r\n            this.setActive(game, task.attacker, false);\r\n            if (task.shieldProtection)\r\n                return {};\r\n\r\n            const card1 = opponent.shield[0];\r\n            card1.position = this.clone(opponent.positions.shield);\r\n            task.attacker.to = { ...task.attacker.position, x: opponent.positions.shield.x, y: opponent.positions.shield.y };\r\n\r\n            const burstEffect = this.lunchEffectTriggerForOneCard(card1, this.trigger_burst);\r\n            const tasks = [];\r\n            tasks.push({ id: this.showCards.name, card1, delay: 100 });\r\n\r\n            if (!burstEffect.cancelMoveToTrash)\r\n                tasks.push({ id: this.spawnOrMove.name, card1, to: this.locationTrash });\r\n\r\n            this.addTasks(tasks);\r\n            return {};\r\n        }\r\n\r\n        return this.end(player.isPlayer1);\r\n    }\r\n\r\n    static isValidTarget(opponent, attacker, target) {\r\n        return target.isPlayer1 === opponent.isPlayer1\r\n            && (!target.active || (attacker.attackActiveEnnemy && attacker.attackActiveEnnemy > target.level));\r\n    }\r\n\r\n    static effectBattle(game, task, player, opponent) {\r\n        let isExisting = task.battleEffectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerForOneCard(task.attacker, this.trigger_battle);\r\n        if (isExisting) {\r\n            task.battleEffectsAlreadyDone = true;\r\n            return { stop: true };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    static showFight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n\r\n        this.addTaskFirst({ id: this.showCards.name, card1: task.attacker, card2: task.target, delay: true });\r\n        this.nextStep(task);\r\n        return { stop: true };\r\n    }\r\n\r\n    static fight(game, task, player, opponent) {\r\n        if (!task.target)\r\n            return {};\r\n        \r\n        let damage = task.breach ? task.breach : task.attacker.ap;\r\n        if (task.target.immuneAp && damage < task.target.immuneAp)\r\n            damage = 0;\r\n        task.target.hp -= damage;\r\n        task.target.hpOrigin -= damage;\r\n        \r\n\r\n        damage = task.target.ap;\r\n        if (task.attacker.immuneAp && damage < task.attacker.immuneAp)\r\n            damage = 0;\r\n        task.attacker.hp -= damage;\r\n        task.attacker.hpOrigin -= damage;\r\n\r\n        const activeBreach = !task.breach && this.isCardUnit(task.target) && task.attacker.breach && task.target.hp < 1;\r\n        this.setActive(game, task.attacker, false);\r\n        let tasks = [];\r\n        const delay = activeBreach;\r\n        let tasksAttackerDead = [];\r\n\r\n        if (!task.breach && task.attacker.hp < 1)\r\n            tasksAttackerDead = this.destroyUnit(task.attacker, false);\r\n\r\n        if (task.target.hp < 1)\r\n            tasks = this.destroyUnit(task.target, delay);\r\n\r\n        this.setActive(game, task.attacker, false);\r\n\r\n        if (activeBreach) {\r\n            this.cardHighlight = this.cardHighlight.filter(x => x.index !== task.attacker.index);\r\n            tasks.push({\r\n                id: this.attack.name, step: this.stepSelectCardOpponent,\r\n                attacker: task.attacker, isPlayer1: task.attacker.isPlayer1,\r\n                breach: task.attacker.breach, delay: true\r\n            });\r\n        }\r\n\r\n        if (tasksAttackerDead.length > 0)\r\n            tasks = tasks.concat(tasksAttackerDead);\r\n\r\n        this.addTasks(tasks);\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default attack;\r\n","\r\n\r\nclass setup {\r\n\r\n    static handStartLength = 5;\r\n    static resourceStart = 0;\r\n    static shieldStartLength = 6;\r\n\r\n    static setupGame(game) {\r\n        if (this.quickstart) {\r\n            this.resourceStart = 8;\r\n            this.handStartLength = 15;\r\n        }\r\n\r\n        game.player1 = this.createPlayer(game, true, game.decklistPlayer1);\r\n        game.player2 = this.createPlayer(game, false, game.decklistPlayer2);\r\n        game.isPlayer1 = this.quickstart ? false : Math.floor(Math.random() * 2) == 1;\r\n        game.fields = [game.grid.player1Hand, game.grid.player1Field, game.grid.player2Hand, game.grid.player2Field];\r\n\r\n        const playerOpponent = game.isPlayer1 ? game.player1 : game.player2;\r\n        game.player = playerOpponent;\r\n        game.resourcesMax = 2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        let tasks = [];\r\n        for (let i = 0; i < this.handStartLength; i++) {\r\n            tasks = tasks.concat([\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true },\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: false }]);\r\n        }\r\n\r\n        this.addTasks(tasks);\r\n    }\r\n\r\n    static createPlayer(game, isPlayer1, decklist) {\r\n        const deck = this.createDeck(game, isPlayer1, decklist);\r\n\r\n        const result = {\r\n            isPlayer1, deck, shield: [], hand: [], field: [], trash: [], base: [], empty: [], incruises: [],\r\n            resourcesMax: this.resourceStart, resourcesAvailable: 0, resourcesEx: 0, index: isPlayer1 ? '1' : '2',\r\n            positions: {\r\n                deck: isPlayer1 ? game.grid.player1Deck : game.grid.player2Deck,\r\n                shield: isPlayer1 ? game.grid.player1Shield : game.grid.player2Shield,\r\n                hand: isPlayer1 ? game.grid.player1Hand : game.grid.player2Hand,\r\n                field: isPlayer1 ? game.grid.player1Field : game.grid.player2Field,\r\n                trash: isPlayer1 ? game.grid.player1Trash : game.grid.player2Trash,\r\n                base: isPlayer1 ? game.grid.player1Base : game.grid.player2Base,\r\n                empty: {}\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static createDeck(game, isPlayer1, decklist) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = game.cardList.find(x => x.id == id);\r\n            if (!card)\r\n                throw new Error(\"This card doesn't exist : \" + id);\r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(this.createCard(card.id, isPlayer1));\r\n        });\r\n        \r\n        this.createUniqueRare(game, result);\r\n\r\n        if (!game.tuto) {\r\n            result = this.sortRandom(result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static createUniqueRare(game, deck) {\r\n        const rareKeyWord = \"_p1\";\r\n        var rareCards = game.gundamCards.files.split(',').filter(x => x.includes(rareKeyWord)).map(x => x = x.replace(rareKeyWord, \"\"));\r\n        rareCards.forEach(rareCard => {\r\n            const firstCard = deck.find(x => x.id === rareCard);\r\n            if (firstCard)\r\n                firstCard.id += rareKeyWord;\r\n        });\r\n    }\r\n\r\n    static sortRandom(cards) {\r\n        return cards.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    static mulligan(game, task) {\r\n        if (this.quickstart)\r\n            task.choice = {};\r\n\r\n        if (!task.choice) {\r\n            return this.addTaskFirst(\r\n                {\r\n                    id: this.popup.name,\r\n                    isPlayer1: true,\r\n                    task,\r\n                    text: 'Do you want to do a mulligan ?',\r\n                    choices: [{ id: 'yes', text: 'yes' }, { text: 'no' }]\r\n                }\r\n            );\r\n        } else {\r\n            let tasks = [];\r\n            if (task.choice.id === 'yes') {\r\n                game.player1.deck = this.sortRandom(game.player1.deck.concat(game.player1.hand));\r\n                const removeIds = game.player1.hand.map(x => x.index);\r\n                game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n                game.player1.hand = [];\r\n\r\n                for (let i = 0; i < this.handStartLength; i++)\r\n                    tasks.push({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true });\r\n            }\r\n\r\n            // if (!this.quickstart)\r\n            tasks = tasks.concat(this.addShielsAndBase(game));\r\n\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: true });\r\n            tasks.push({ id: this.refreshFieldAndHand.name, isPlayer1: false });\r\n\r\n            tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n            this.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static addShielsAndBase(game, addBase = true) {\r\n        let tasks = [];\r\n\r\n        for (let i = 0; i < this.shieldStartLength; i++) {\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: true });\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: false });\r\n        }\r\n\r\n        if (addBase) {\r\n            game.player1.base = [this.spawnIfNot(this.createCard('EXB-001', true, this.locationBase))];\r\n            game.player2.base = [this.spawnIfNot(this.createCard('EXB-001', false, this.locationBase))];\r\n        }\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\r\nexport default setup;\r\n","class popup {\r\n\r\n    static popup(game, task) {\r\n        if(!task.task)\r\n            throw new Error('Il faut préciser la task de la popup !');\r\n        \r\n        if(!task.isPlayer1)\r\n            return this.handleAiPopup(game,task);\r\n        \r\n        if (!game.popup || !game.popup.task || (!game.popup.task.cardChoice && !game.popup.task.choice)) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        } \r\n        \r\n        this.deletePopup();\r\n    }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.cardChoice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n    }\r\n}\r\n\r\n\r\nexport default popup;","/* eslint-disable no-unused-vars */\r\n\r\nclass tasks {    \r\n    static indexTask=1;\r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1\r\n                : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1\r\n                    : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = isPlayer1 ? game.player2 : game.player1;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            if(!this[task.id])\r\n                throw new Error(`Can't handle this tasks : ${JSON.stringify(task)}`);\r\n            const result = this[task.id](game, task, player, opponent);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            game.tasks = game.tasks.filter(x=> x.index !== task.index);\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? this.delay : task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (this.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static addTasksIndex(tasks){\r\n        tasks.forEach(x=> {\r\n            x.index = this.indexTask;\r\n            this.indexTask++;\r\n        });\r\n    }\r\n    \r\n    static addTask(task) { return this.addTasks([task]); }\r\n    static addTasks(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.addTasksIndex(tasks);\r\n        this.game.tasks = this.game.tasks.concat(tasks);\r\n        return {};\r\n    }\r\n\r\n    static addTaskFirst(task) { return this.addTasksFirst([task]); }\r\n    static addTasksFirst(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.game.tasks = tasks.concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static addTaskPos2(task) { return this.addTasksPos2([task]); }\r\n    static addTasksPos2(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        const first = this.game.tasks.splice(0,1)[0];\r\n        this.game.tasks = [first].concat(tasks).concat(this.game.tasks);\r\n        this.addTasksIndex(tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static startTasks(game){\r\n        game.triggerRefreshAlreadyDone=false;\r\n        this.resetZIndex(game);\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;\r\n","class array {\r\n\r\n    static test(message) {\r\n        alert(message);\r\n    }\r\n\r\n    static wait() { }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static addFunction(cla, obj, useTuto) {\r\n        const ignore = ['length', 'name', 'prototype'];\r\n        cla.forEach(c => {\r\n            Object.getOwnPropertyNames(c).forEach(method => {\r\n                if (!ignore.includes(method)) {\r\n                    if (obj[method] && !useTuto) {\r\n                        throw new Error(`cette fonction existe deja : ${c.name}.${method}`);\r\n                    }\r\n                    else {\r\n                        obj[method] = c[method];\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Log\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n\r\n    // Utils\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static alreadyDone(valueOld, valueNew) {\r\n        if (valueOld === undefined && !valueNew)\r\n            return true;\r\n        return valueOld == valueNew;\r\n    }\r\n}\r\n\r\n\r\nexport default array;\r\n","class title {\r\n\r\n    static showTitle(game, task) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: this.clone(game.grid.textZone)\r\n        };\r\n        game.textEffect.to = this.clone(game.grid.textZone);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static showCards(game, task) {\r\n        if (!task.card1 || this.cardHighlight.find(x => x.index === task.card1.index)) {\r\n            task.delay = null;\r\n            return;\r\n        }\r\n\r\n        this.spawnIfNot(task.card1);\r\n        this.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? game.grid.highlightCardLeft : game.grid.highlightCardCenter;\r\n        task.card1.to = this.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n        task.card1.verso = false;\r\n\r\n        if (task.card2) {\r\n            this.spawnIfNot(task.card2);\r\n            this.cardHighlight.push(task.card2);\r\n            task.card2.to = this.clone(game.grid.highlightCardRight);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n            task.card2.verso = false;\r\n        }\r\n\r\n        if (task.text)\r\n            this.taskTextShow(game, task);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        task.card1 = this.spawnOrMove(game, task, player);\r\n        task.delay = true;\r\n        this.showCards(game, task);\r\n    }\r\n\r\n    static showCardsEffect(game, task) {\r\n        task.card1.fxRed = !task.hideFx;\r\n        task.card1.fxText = task.text;\r\n        task.card1.verso = false;\r\n        if (!task.hideFx) {\r\n            this.log(`Apply effect of ${task.card1.name} : ${task.text}`);\r\n            this.addTaskPos2({ id: this.showCardsEffect.name, card1: task.card1, hideFx: true, delay: true });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default title;\r\n","class turn {\r\n    static getPlayerTurn() { return this.getPlayer(this.game.isPlayer1); }\r\n    static getPlayer(isPlayer1) { return isPlayer1 ? this.game.player1 : this.game.player2; }\r\n    static getPlayerTurnOpponent() { return this.getOpponent(this.game.isPlayer1); }\r\n    static getOpponent(isPlayer1) { return isPlayer1 ? global.game.player2 : global.game.player1; }\r\n\r\n    static turnIndex = 0;\r\n\r\n    static nextTurn(game, task, player) {\r\n        let isExisting = task.effectsAlreadyDone ? false\r\n            : this.lunchEffectTriggerMultiple(player.field, this.trigger_end);\r\n        task.effectsAlreadyDone = true;\r\n\r\n        if (isExisting) {\r\n            this.addTasks([{ id: this.refreshFieldAndHand.name, isPlayer1: true }, { id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        game.isPlayer1 = !game.isPlayer1;\r\n        game.player = this.getPlayerTurn();\r\n        const playerId = game.isPlayer1 ? '1' : '2';\r\n        this.startTasks(game);\r\n\r\n        const idTask = game.isPlayer1 ? this.taskMoveAndShowCenter.name : this.spawnOrMove.name;\r\n\r\n        const tasks = [\r\n            { id: this.showTitle.name, value: 'New turn for player ' + playerId, isPlayer1: game.isPlayer1, delay: true },\r\n            { id: idTask, isPlayer1: game.isPlayer1, from: this.locationDeck, to: this.locationHand }\r\n        ];\r\n\r\n        this.addTasks(tasks);\r\n\r\n        this.removeOneTurnEffect(game);\r\n\r\n        if (game.player.resourcesMax < 1)\r\n            game.player.resourcesMax = 1;\r\n        else if (game.player.resourcesMax < 10)\r\n            game.player.resourcesMax += 1;\r\n\r\n        game.player.resourcesAvailable = game.player.resourcesMax + game.player.resourcesEx;\r\n        game.resourcesMax = Math.max(game.player1.resourcesAvailable, game.player1.resourcesMax, game.player2.resourcesAvailable, game.player2.resourcesMax) + 1;\r\n\r\n\r\n        game.player.field.concat(game.player.base)\r\n            .forEach(x => this.setActive(game, x, true));\r\n\r\n        this.setSelectableFalse();\r\n\r\n        const baseText = game.player.base.length > 0 ? game.player.base[0].hp + 'hp ' : '-';\r\n        this.turnIndex++;\r\n        this.log(`-- Turn ${this.turnIndex} for player ${playerId}, ${game.player.resourcesAvailable} resources, ${game.player.shield.length} shield, ${baseText} base`);\r\n\r\n        this.lunchEffectTriggerMultiple(game.player.field, this.trigger_turn);\r\n    }\r\n}\r\n\r\n\r\nexport default turn;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass tuto {\r\n    static handStartLength = 0;\r\n    static shieldStartLength = 2;\r\n    static tutoSmall(game) { return { ...game.grid.resources, x: game.grid.width / 2 - 150, width: 300 }; }\r\n\r\n    static addTutoMask(game) {\r\n        const properties = 'player1Shield,player1Base,player1Deck,player1Trash,player2Shield,player2Base,player2Deck,player2Trash';\r\n        game.tutoMasks = properties\r\n            .split(',')\r\n            .map(prop => { return { ...game.grid[prop], isPlayer1: prop.startsWith('player1'), id: prop } });\r\n\r\n        game.tutoMasks.push({ ...game.grid.resources, isPlayer1: true, id: 'resources' });\r\n        game.tutoMasks.push({ ...game.grid.logZone, isPlayer1: false, id: 'logZone' });\r\n        game.tutoMasks.push({\r\n            isPlayer1: true, id: 'buttonEffect',\r\n            x: game.grid.buttonEffect.x - 10, width: game.grid.buttonEffect.width + 20,\r\n            y: game.grid.buttonEffect.y - 10, height: game.grid.buttonEffect.height + 20\r\n        });\r\n        game.tutoMasks.push({\r\n            isPlayer1: true, id: 'buttonEndTurn',\r\n            x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n            y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n        });\r\n    }\r\n\r\n    static mulligan(game) {\r\n        this.addTasks(this.addShielsAndBase(game, false));\r\n    }\r\n\r\n    static continueTuto(game) {\r\n        if (game.tutoDone)\r\n            return;\r\n\r\n        game.tutoStep = game.tutoStep ? game.tutoStep : 0;\r\n\r\n        if (game.showTextTuto && game.showTextTuto.next) {\r\n            game.tutoStep++;\r\n            game.showTextTuto.next = false;\r\n        }\r\n\r\n        let step = this.tutoSteps[game.tutoStep];\r\n        if (!step)\r\n            return;\r\n\r\n        if (this.autoNextStep(game, step)) {\r\n            game.tutoStep++;\r\n        }\r\n\r\n        step = this.tutoSteps[game.tutoStep];\r\n        if (!step || step.isDone)\r\n            return;\r\n\r\n        step.isDone = true;\r\n        step.action(this, game);\r\n    }\r\n\r\n    static autoNextStep(game, step) {\r\n        if (!step.isDone || game.tutoStep + 1 >= this.tutoSteps.length)\r\n            return false;\r\n\r\n        const nextStep = this.tutoSteps[game.tutoStep + 1];\r\n        const task = game.tasks.length > 0 ? game.tasks[0] : null;\r\n        return nextStep.conditions(this, game, task);\r\n    }\r\n\r\n    static conditionNexTurn(context, game) {\r\n        return game.player1.hand.length > 0 && !game.player1.hand[0].to && context.cardHighlight.length < 1;\r\n    }\r\n\r\n    static tutoText = {\r\n        used: null,\r\n        en: {\r\n            welcome: 'Welcome to Gundam TCG.',\r\n            deck: 'This is your deck. It contains 50 cards.',\r\n            playUnit: 'The first turn has begun. You’ve drawn one card from your deck. It’s a unit card you can play. Press and hold the card, then drag it here.',\r\n            cantAttack: \"A unit can't attack the turn it's played unless it's linked with a pilot. We’ll learn about linking pilots shortly.\",\r\n            endTurn: \"You’ve done all you can this turn. Press the 'End Turn' button to proceed.\",\r\n            zoom: \"Click on a card to zoom in and see its details.\",\r\n            showLevelCost: \"In the top-left corner of a card, you can see its level (3) and cost (2).\",\r\n            showLink: \"In the bottom-left corner, you’ll find the card’s pilot link condition: (White Base Team) Trait.\",\r\n            showApHp: \"In the bottom-right corner, you’ll see the card’s Attack Points (AP: 2) and Hit Points (HP: 3). Click again to unzoom.\",\r\n            showResources: \"This is the 2 resource bars. The bottom bar is yours; the top one belongs to your opponent. You currently have 3 resources.\",\r\n            showResources2: \"Your opponent has 2 regular resources (yellow) and 1 EX resource (blue). Player 2 always starts with one EX resource.\",\r\n            showResources3: \"To play a card, you must pay its cost using your available resources. EX resources are always used first. At the start of each turn, you gain 1 additional resource.\",\r\n            playLevel3: \"To play a level 3 card that costs 2, you need at least 3 total resources, including 2 available ones.\",\r\n            playIt: \"The requirements are met. The card is glowing yellow, meaning you can play it. Do it like the previous one.\",\r\n            resourcesUsed: \"2 resources were used. You still have 1 available (yellow) and 2 unavailable (red).\",\r\n            ennemyBase: \"This is the enemy base. Each player starts the game with one.\",\r\n            attack: \"This unit is ready to attack. Select it and release it on the opponent’s field to launch an attack.\",\r\n            rested: \"This unit has attacked. It’s now rested (rotated 90 degrees).\",\r\n            showApHp2: \"Above the card, you see (0 - 1), indicating the card’s AP (0) and HP (1).\",\r\n            showApHp3: \"The unit attacked the enemy base, dealing 2 AP damage. The base had 3 HP and is now reduced to 1 HP.\",\r\n            showEffect: \"When a card’s effect activates, a red circle with text appears.\",\r\n            p2LinkUnit: \"Player 2 has played a unit with a linked pilot, so it can attack this turn.\",\r\n            p2AttackBase: \"Player 2 can now use this unit to attack our base.\",\r\n            p2AttackUnit: \"Alternatively, it can attack our rested units.\",\r\n            unitTrash: \"Our unit’s HP reached 0. It’s been sent to the trash.\",\r\n            linkUnit: \"This unit can be linked with a pilot. Play it now.\",\r\n            linkPilot: \"You can now pair this pilot with the unit you just played.\",\r\n            attackLink: \"The pilot’s AP and HP values have been added to those of the unit. Additionally, you can now attack with this linked unit.\",\r\n            revenge: \"We’ll avenge it by attacking the Gelgoog with our unit. Select your unit and release it onto the opponent’s unit.\",\r\n            famous: \"Now it's time to link a unit with a pilot. To do that, I’m giving you a famous unit card.\",\r\n            baseDestroyed: \"The enemy base has been destroyed. To win this battle, you now need to destroy all shield cards and land a final attack.\",\r\n            command: \"This is a command card. When played, it activates its effect and is then sent to the trash.\",\r\n            attackRested: \"These opponent units are now rested. We can attack one of them.\",\r\n            burst: \"This shield card was revealed due to the Zaku II's attack. When that happens, its 'Burst' effect is triggered.\",\r\n            playBase: \"This is a base card. Play it now.\",\r\n            oneBase: \"Each player can only have one base on the field.\",\r\n            useEffect: \"Our base has an ability we can activate from here.\",\r\n            whiteBase: \"The White Base effect gives you a unit. This unit has no link condition.\",\r\n            pairPilot: \"However, we can still pair a pilot with it.\",\r\n            showPairUnit: \"These cards are paired, not linked. That means the unit can’t attack this turn. However, the pilot’s AP and HP have been added to the unit’s values.\",\r\n            playAlone: \"Now it’s your turn to play on your own. Try to win this duel by attacking where no shield or base remains.\"\r\n        },\r\n        fr: {\r\n            welcome: 'Bienvenue dans Gundam TCG.',\r\n            deck: 'Voici votre Deck. Il contient 50 cartes.',\r\n            playUnit: 'Le premier tour commence. Vous avez pioché une carte de votre Deck. C’est une carte unité (Unit) que vous pouvez jouer. Appuyez longuement sur la carte, puis faites-la glisser ici.',\r\n            cantAttack: \"Une unité ne peut pas attaquer le tour où elle est jouée, sauf si elle est liée à un pilote. Nous verrons cela dans quelques instants.\",\r\n            endTurn: \"Vous ne pouvez plus rien faire ce tour-ci. Appuyez sur le bouton 'Fin du tour' pour continuer.\",\r\n            zoom: \"Cliquez sur une carte pour zoomer et voir ses détails.\",\r\n            showLevelCost: \"En haut à gauche d’une carte, vous pouvez voir son Level (3) et son Cost (2).\",\r\n            showLink: \"En bas à gauche, vous trouverez la condition de liaison de pilote (Link) : (White Base Team) Trait.\",\r\n            showApHp: \"En bas à droite, vous verrez les Points d’Attaque (AP : 2) et les Points de Vie (HP : 3) de la carte. Cliquez à nouveau pour dézoomer.\",\r\n            showResources: \"Voici les 2 barres de ressources. Celle du bas est la vôtre ; celle du haut est celle de votre adversaire. Vous disposez actuellement de 3 ressources.\",\r\n            showResources2: \"Votre adversaire possède 2 ressources classiques (jaunes) et 1 ressource EX (bleue). Le joueur 2 commence toujours avec une ressource EX.\",\r\n            showResources3: \"Pour jouer une carte, vous devez en payer le coût avec vos ressources disponibles. Les ressources EX sont toujours utilisées en premier. Au début de chaque tour, vous gagnez une ressource supplémentaire.\",\r\n            playLevel3: \"Pour jouer une carte de niveau 3 avec un coût de 2, vous devez avoir au moins 3 ressources au total, dont 2 disponibles.\",\r\n            playIt: \"Les conditions sont remplies. La carte brille en jaune : vous pouvez la jouer, comme la précédente.\",\r\n            resourcesUsed: \"2 ressources ont été utilisées. Il vous en reste 1 disponible (jaune) et 2 indisponibles (rouges).\",\r\n            ennemyBase: \"Voici la base ennemie. Chaque joueur commence la partie avec une base.\",\r\n            attack: \"Cette unité est prête à attaquer. Sélectionnez-la et relâchez-la sur le terrain adverse pour lancer l’attaque.\",\r\n            rested: \"Cette unité a attaqué. Elle est maintenant engagée (Rest), pivotée à 90 degrés.\",\r\n            showApHp2: \"Au-dessus de la carte, vous voyez (0 - 1), indiquant les AP (0) et les HP (1).\",\r\n            showApHp3: \"L’unité a attaqué la base ennemie, infligeant 2 points de dégâts (AP). La base avait 3 HP avant l'attaque, elle n’en a plus qu’un maintenant.\",\r\n            showEffect: \"Lorsqu’un effet de carte est activé, un cercle rouge avec le tite de l'effet apparaît.\",\r\n            p2LinkUnit: \"Le joueur 2 a joué une unité avec un pilote lié. Elle peut donc attaquer ce tour-ci.\",\r\n            p2AttackBase: \"Le joueur 2 peut utiliser cette unité pour attaquer notre base.\",\r\n            p2AttackUnit: \"Ou bien il peut attaquer notre unité engagée (Rest).\",\r\n            unitTrash: \"Les PV de notre unité sont tombés à 0. Elle a été envoyée à la défausse (Trash).\",\r\n            linkUnit: \"Cette unité peut être liée à un pilote. Jouez-la maintenant.\",\r\n            linkPilot: \"Vous pouvez maintenant associer ce pilote à l’unité que vous venez de jouer.\",\r\n            attackLink: \"Les valeurs d’AP et de HP du pilote ont été ajoutées à celles de l’unité. De plus, vous pouvez désormais attaquer avec cette unité liée.\",\r\n            revenge: \"Nous allons le venger en attaquant le Gelgoog avec notre unité. Sélectionnez votre unité et relâchez-la sur l’unité ennemie.\",\r\n            famous: \"Il est maintenant temps de lier une unité à un pilote. Pour cela, je vais vous donner une carte unité célèbre.\",\r\n            baseDestroyed: \"La base ennemie a été détruite. Pour remporter ce combat, vous devez maintenant détruire toutes les cartes Shield et lancer une attaque finale.\",\r\n            command: \"Ceci est une carte Command. Lorsqu'elle est jouée, son effet s’active, puis elle est envoyée à la défausse.\",\r\n            attackRested: \"Les unités adverses sont maintenant épuisées. Nous pouvons en attaquer une.\",\r\n            burst: \"Cette carte Shield a été révélée à cause de l’attaque du Zaku II. Lors de cette révélation, l’effet 'Burst' s’active.\",\r\n            playBase: \"Voici une carte Base. Jouez-la.\",\r\n            oneBase: \"Un joueur ne peut avoir qu’une seule base sur le terrain.\",\r\n            useEffect: \"Notre base possède un effet que nous pouvons activer ici.\",\r\n            whiteBase: \"L’effet de cette carte 'White Base' vous donne une unité. Cette unité n’a pas de condition de lien.\",\r\n            pairPilot: \"Mais nous pouvons tout de même associer (Pair) un pilote à cette unité.\",\r\n            showPairUnit: \"Ces cartes sont associées (Pair), mais non liées (Link). Cela signifie que l’unité ne peut pas attaquer ce tour-ci. Toutefois, les valeurs d’AP et de HP du pilote ont été ajoutées à celles de l’unité.\",\r\n            playAlone: \"C’est à vous de jouer seul maintenant. Essayez de remporter ce duel.\"\r\n        }\r\n    }\r\n\r\n    static getTextTuto(prop) {\r\n        if (!this.tutoText.used)\r\n            this.tutoText.used = this.tutoText.fr;\r\n        return this.tutoText.used[prop];\r\n    }\r\n\r\n    static tutoSteps = [\r\n        {\r\n            // Show title\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                context.addTutoMask(game);\r\n                game.showTextTuto = {\r\n                    ...context.tutoSmall(game),\r\n                    text: context.getTextTuto('welcome')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Show deck icon\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.player1.resourcesMax = 1;\r\n                game.player1.resourcesEx = 0;\r\n                game.player2.resourcesMax = 1;\r\n                game.player2.resourcesEx = 1;\r\n                game.player1.deck[1].id = 'GD01-004';\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Deck' && x.id !== 'player2Deck');\r\n                game.isPlayer1 = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.player1Deck),\r\n                    text: context.getTextTuto('deck')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // draw a card for the first turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Play Gm unit\r\n            conditions: (context, game, task) => {\r\n                return context.conditionNexTurn(context, game);\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...game.grid.player1Field, y: game.grid.player1Field.y - game.grid.player1Field.height * 0.75, hideNext: true, sens: 1,\r\n                    text: context.getTextTuto('playUnit')\r\n                };\r\n                game.showTextTuto.arrow = context.addArrow(game.showTextTuto, game.grid.player1Field, 1);\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.play.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return game.player1.field.length === 1 && !game.player1.field[0].to; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position, 300, game.grid.boxHeight * 1.5),\r\n                    text: context.getTextTuto('cantAttack')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // unfreeze and mask end turn button\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // zoom on a card\r\n            conditions: (context, game, task) => {\r\n                return context.conditionNexTurn(context, game);\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('zoom')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return game.cardCenter; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y + game.cardCenter.position.height * 0.17, height: game.cardCenter.position.height * 0.83, zindex: 120,\r\n                    text: context.getTextTuto('showLevelCost')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y, height: game.cardCenter.position.height * 0.9, zindex: 120,\r\n                    text: context.getTextTuto('showLink')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text on zoom card\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'resources');\r\n                game.showTextTuto = {\r\n                    ...game.cardCenter.position, y: game.cardCenter.position.y, height: game.cardCenter.position.height * 0.9, zindex: 120, hideNext: true,\r\n                    text: context.getTextTuto('showApHp')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return !game.cardCenter; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight * 1.5, 3),\r\n                    text: context.getTextTuto('showResources')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight * 1.5, 1),\r\n                    text: context.getTextTuto('showResources2')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight * 2, 3),\r\n                    text: context.getTextTuto('showResources3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show tuto text\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position, 300, game.grid.boxHeight *1.5),\r\n                    text: context.getTextTuto('playLevel3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // play opponent unit\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('playIt')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1.id === 'GD01-004'; // Guncanon\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.grid.resources, 300, game.grid.boxHeight, 3),\r\n                    text: context.getTextTuto('resourcesUsed')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // animations base arriving\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Base' && x.id != 'player2Base');\r\n                context.addShielsAndBase(game);\r\n                game.freeze = false;\r\n                context.addTask({ id: context.taskEndRefresh.name });\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return game.tasks.length == 0 && game.player2.base.length > 0 && !game.player2.base[0].to; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.positions.base),\r\n                    text: context.getTextTuto('ennemyBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Gm attack\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position), hideNext: true,\r\n                    text: context.getTextTuto('attack')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.play.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return !task && !game.player1.field[0].to; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position),\r\n                    text: context.getTextTuto('rested')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return context.tutoStep == 18 && !task; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.base[0].position),\r\n                    text: context.getTextTuto('showApHp2')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.player2.base[0].position, 300, game.grid.boxHeight * 1.5, 1),\r\n                    text: context.getTextTuto('showApHp3')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.player1.field[1].fxTextCancelFadeout = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // prepare ai turn\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.player2.resourcesMax = 2;\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return task && task.id === context.showCardsEffect.name && task.hideFx },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[1].position),\r\n                    text: context.getTextTuto('showEffect')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // prepare ai turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.freeze = false;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return game.player2.field.length > 0 && !task; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.player1.field[1].fxTextCancelFadeout = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player2.field[0].position),\r\n                    text: context.getTextTuto('p2LinkUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.base[0].position),\r\n                    text: context.getTextTuto('p2AttackBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position),\r\n                    text: context.getTextTuto('p2AttackUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return context.conditionNexTurn(context, game) && !task; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Trash' && x.id != 'player2Trash');\r\n                game.freeze = false;\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.player1.positions.trash, 300, game.grid.boxHeight * 1.5, 2),\r\n                    text: context.getTextTuto('unitTrash')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Attack Guncannon vs Gelgoog\r\n            conditions: (context, game, task) => { return !task },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position), hideNext: true,\r\n                    text: context.getTextTuto('revenge')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Fight Guncannon vs Gelgoog\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id === 'GD01-004' && task.card2 && task.card2.id == 'GD01-031'; // Guncanon vs Gelgoog\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n            }\r\n        },\r\n        {\r\n            // show tuto text add one card to hand\r\n            conditions: (context, game, task) => { return !task; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = {\r\n                    ...context.tutoSmall(game),\r\n                    text: context.getTextTuto('famous')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Add gundam to hand\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                context.addTask({ id: context.spawnOrMove.name, isPlayer1: true, from: context.locationDeck, to: context.locationHand });\r\n                context.addTask({ id: context.spawnOrMove.name, isPlayer1: false, from: context.locationDeck, to: context.locationHand });\r\n                context.addTask({ id: context.spawnOrMove.name, isPlayer1: false, from: context.locationDeck, to: context.locationHand });\r\n            }\r\n        },\r\n        {\r\n            // Show tuto text gundam link\r\n            conditions: (context, game, task) => { return !task && !game.player1.hand[1].to; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[1].position), hideNext: true,\r\n                    text: context.getTextTuto('linkUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Gundam is played\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id.startsWith('ST01-001'); // Gundam\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Show tuto text play Amuro\r\n            conditions: (context, game, task) => { return !task && !game.player1.field[0].to },\r\n            action: (context, game) => {\r\n                game.cardFocus = game.player1.hand[0];\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.cardFocus.position), hideNext: true,\r\n                    text: context.getTextTuto('linkPilot')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Amuro is played\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id === 'ST01-010' && task.card2 && task.card2.id.startsWith('ST01-001'); // Amuro on Gundam\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Show tuto text Attack with gundam\r\n            conditions: (context, game, task) => { return !task && !game.cardFocus.to; },\r\n            action: (context, game) => {\r\n                game.cardFocus = null;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position), hideNext: true,\r\n                    text: context.getTextTuto('attackLink')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Gundam attack\r\n            conditions: (context, game, task) => { return task && task.id == context.play.name; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show shield\r\n            conditions: (context, game, task) => { return !task; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'player1Shield' && x.id != 'player2Shield');\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextToUsingSens(game, game.player2.positions.shield, 300, game.grid.boxHeight * 2, 1),\r\n                    text: context.getTextTuto('baseDestroyed')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // unfreeze and mask end turn button\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // play command\r\n            conditions: (context, game, task) => { return context.conditionNexTurn(context, game) },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('command')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Command is played\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id === 'GD01-099'; // Command\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Show tuto text Attack with gundam\r\n            conditions: (context, game, task) => { return !task; },\r\n            action: (context, game) => {\r\n                game.cardFocus = null;\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[0].position), hideNext: true,\r\n                    text: context.getTextTuto('attackRested')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Gundam attack\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id.startsWith('ST01-001') && task.card2 && task.card2.id.startsWith('ST03-008'); // Gundam attack zaku II\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // press end turn\r\n            conditions: (context, game, task) => { return !task },\r\n            action: (context, game) => {\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEndTurn');\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEndTurn), hideNext: true,\r\n                    text: context.getTextTuto('endTurn')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // unfreeze and mask end turn button\r\n            conditions: (context, game, task) => { return task && task.id === context.nextTurn.name; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n                game.freezeButtons = true;\r\n                game.player1.shield[0].id = 'GD01-088';\r\n                game.tutoMasks.push({\r\n                    isPlayer1: true, id: 'buttonEndTurn',\r\n                    x: game.grid.buttonEndTurn.x - 10, width: game.grid.buttonEndTurn.width + 20,\r\n                    y: game.grid.buttonEndTurn.y - 10, height: game.grid.buttonEndTurn.height + 20\r\n                });\r\n            }\r\n        },\r\n        {\r\n            // show burst card\r\n            conditions: (context, game, task) => { return game.player1.hand.length > 0 && !game.player1.hand[0].to },\r\n            action: (context, game) => {\r\n                game.freeze = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position),\r\n                    text: context.getTextTuto('burst')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // finish opponent turn\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // play base\r\n            conditions: (context, game, task) => { return game.player1.hand.length > 1 && !game.player1.hand[1].to && context.cardHighlight.length < 1; },\r\n            action: (context, game) => {\r\n                game.freeze = false;\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[1].position), hideNext: true,\r\n                    text: context.getTextTuto('playBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Base is played\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id === 'ST01-015'; // White base\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return !task; },\r\n            action: (context, game) => {\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.base[0].position),\r\n                    text: context.getTextTuto('oneBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show use effect button\r\n            conditions: (context, game, task) => { return false },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.tutoMasks = game.tutoMasks.filter(x => x.id != 'buttonEffect');\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.grid.buttonEffect), hideNext: true,\r\n                    text: context.getTextTuto('useEffect')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // use effect popup\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.id == context.lunchMainEffectCard.name;\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // popup select white base\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id === 'ST01-015'; // White base\r\n                if (task && task.id == context.popup.name)\r\n                    return false;\r\n                if (!task) {\r\n                    game.tutoStep -= 1;\r\n                    this.tutoSteps[game.tutoStep].isDone = false;\r\n                    this.tutoSteps[game.tutoStep + 1].isDone = false;\r\n                    return false;\r\n                }\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // show text tuto\r\n            conditions: (context, game, task) => { return !task && game.player1.field.length > 0 && !game.player1.field[1].to; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[1].position),\r\n                    text: context.getTextTuto('whiteBase')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // show text tuto play banagher\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.hand[0].position), hideNext: true,\r\n                    text: context.getTextTuto('pairPilot')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // play banagher\r\n            conditions: (context, game, task) => {\r\n                const isGood = task && task.card1 && task.card1.id.startsWith('GD01-088') && task.card2 && task.card2.id === 'T-002'; // banagher on token guncanon\r\n                if (!isGood) {\r\n                    game.tasks = [];\r\n                }\r\n                return isGood;\r\n            },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.showTextTuto = null;\r\n            }\r\n        },\r\n        {\r\n            // Show text tuto banagher guncanon\r\n            conditions: (context, game, task) => { return !task; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = true;\r\n                game.showTextTuto = {\r\n                    ...context.alignPositionNextTo(game, game.player1.field[1].position, 300, game.grid.boxHeight * 1.5),\r\n                    text: context.getTextTuto('showPairUnit')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // Attack with gundam\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.tutoMasks = [];\r\n                game.showTextTuto = {\r\n                    ...context.tutoSmall(game),\r\n                    text: context.getTextTuto('playAlone')\r\n                };\r\n            }\r\n        },\r\n        {\r\n            // hide text tuto\r\n            conditions: (context, game, task) => { return false; },\r\n            action: (context, game) => {\r\n                game.freezeButtons = false;\r\n                game.freeze = false;\r\n                game.showTextTuto = null;\r\n                game.tutoDone = true;\r\n            }\r\n        }\r\n    ];\r\n}\r\n\r\n\r\nexport default tuto;\r\n","class pair {\r\n    static pair(game, task, player) {\r\n        const cardUnit = this.isCardUnit(task.card1) ? task.card1 : task.card2;\r\n        const cardPilot = this.isCardPilot(task.card1) ? task.card1 : task.card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n\r\n        const isExistingPairEffects = task.effectsAlreadyDonePair ? false\r\n            : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onpair);\r\n        task.effectsAlreadyDonePair = true;\r\n        if (isExistingPairEffects)\r\n            return { stop: true };\r\n\r\n        if (isLink) {\r\n            const isExistingLinkEffects = task.effectsAlreadyDoneLink ? false\r\n                : this.lunchEffectTriggerForTwoCard(cardUnit, cardPilot, this.trigger_onlink);\r\n            task.effectsAlreadyDoneLink = true;\r\n            if (isExistingLinkEffects)\r\n                return { stop: true };\r\n        }\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = this.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.pairedWith = cardUnit.index;\r\n        cardPilot.location = this.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.apOrigin += cardPilot.ap;\r\n        cardUnit.hpOrigin += cardPilot.hp;\r\n        cardUnit.hpMaxOrigin += cardPilot.hp;\r\n        cardUnit.verso = false;\r\n        cardPilot.verso = false;\r\n        this.handleMainEffectsCard(game, cardPilot, true);\r\n\r\n        if (isLink) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default pair;\r\n","class ai {\r\n    static newTurnForAI(game, task) {\r\n        if (!task.haveBeenRefresh) {\r\n            task.haveBeenRefresh = true;\r\n            game.cards.forEach(card => card.AiUsed = null);\r\n            this.addTaskFirst({ id: this.refreshFieldAndHand.name, isPlayer1: false, delay: true });\r\n            return { stop: true };\r\n        }\r\n\r\n        const result = this.refreshAiTurn(game, task, game.player2);\r\n        if (result && result.taskAdded)\r\n            this.startTasks(game);\r\n\r\n        return result;\r\n    }\r\n\r\n    static refreshAiTurn(game, task, player) {\r\n\r\n        const cardsAvailable = player.hand.filter(x => x.selectable);\r\n        const combos = this.getAiCombos(game, task, player, cardsAvailable);\r\n\r\n        let result = this.handleAiHand(game, task, player, cardsAvailable, combos);\r\n        if (result.stop || result.taskAdded)\r\n            return result;\r\n\r\n        result = this.handleAiField(game, task, player);\r\n        if (result.taskAdded)\r\n            return result;\r\n\r\n        this.endTurn(game);\r\n        return {};\r\n    }\r\n\r\n    static handleAiPopup(game, task) {\r\n        const selectChoiceNull = task.text.includes('action card');\r\n        if (selectChoiceNull && task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.cards && task.cards.length > 0) {\r\n            task.task.cardChoice = task.cards[0];\r\n            return {};\r\n        }\r\n\r\n        if (task.choices && task.choices.length > 0) {\r\n            task.task.choice = task.choices[0];\r\n            return {};\r\n        }\r\n\r\n        this.deletePopup();\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default ai;\r\n","/* eslint-disable no-unused-vars */\r\n\r\nclass aiCombos {\r\n    static getAiCombos(game, task, player, cardsAvailable) {\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card));\r\n        const pilots = cardsAvailable.filter(card => this.isCardPilot(card));\r\n\r\n        return {\r\n            pilotLinkUnits: this.getAiCombosPilotLinkUnit(game, task, player, units, pilots),\r\n            pilotLinkUnitsOnFieldWithEffects: this.getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots)\r\n        };\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnit(game, task, player, units, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        units.forEach(unit => {\r\n            const costRemaining = player.resourcesAvailable - unit.cost;\r\n            const pilot = pilots.find(pilot => this.isLink(unit, pilot) && pilot.cost <= costRemaining);\r\n            if (pilot) {\r\n                unit.AiUsed = pilot.index;\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n\r\n    static getAiCombosPilotLinkUnitFieldWithEffects(game, task, player, pilots) {\r\n        if (pilots.length < 1)\r\n            return [];\r\n\r\n        let result = [];\r\n        player.field.filter(unit => !unit.pair).forEach(unit => {\r\n            const unitHasEffect = this.hasLinkEffect(unit);\r\n            const pilot = pilots.find(pilot => !pilot.AiUsed && this.isLink(unit, pilot) && (unitHasEffect || this.hasLinkEffect(pilot)));\r\n            if (pilot) {\r\n                pilot.AiUsed = unit.index;\r\n                const value = unit.level + pilot.level;\r\n                result.push({ unit, pilot, value, id: `${unit.name}-${pilot.name}-${value}` });\r\n            }\r\n        });\r\n\r\n        result = result.sort((a, b) => b.value - a.value);\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default aiCombos;\r\n","class aiPlay {\r\n    static handleAiHand(game, task, player, cardsAvailable, combos) {\r\n        if (player.base.length < 1) {\r\n            const bases = cardsAvailable.filter(card => this.isCardBase(card));\r\n            if (bases.length > 0)\r\n                return this.playCombo(player, { unit: bases[0] });\r\n        }\r\n\r\n        if (combos.pilotLinkUnits.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnits[0]);\r\n\r\n        if (combos.pilotLinkUnitsOnFieldWithEffects.length > 0)\r\n            return this.playCombo(player, combos.pilotLinkUnitsOnFieldWithEffects[0]);\r\n\r\n        const combo = this.handleStrategy(game, player, cardsAvailable);\r\n        if (combo.stop || combo.taskAdded)\r\n            return combo;\r\n        if (combo && combo.unit)\r\n            return this.playCombo(player, combo);\r\n\r\n        const units = cardsAvailable.filter(card => this.isCardUnit(card))\r\n            .sort((a, b) => b.level - a.level);\r\n        if (units.length > 0)\r\n            return this.playCombo(player, { unit: units[0] });\r\n\r\n        return {};\r\n    }\r\n\r\n    static playCombo(player, combo) {\r\n        let tasks = [];\r\n        if (combo.unit && combo.unit.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.unit));\r\n\r\n        if (combo.pilot && combo.pilot.location === this.locationHand)\r\n            tasks = tasks.concat(this.getPlayCardTasks(player, combo.pilot, combo.unit));\r\n\r\n        this.addTasksFirst(tasks);\r\n        return { taskAdded: tasks.length > 0 };\r\n    }\r\n\r\n    static handleAiField(game, task, player) {\r\n        const unitsThatCanAttack = player.field\r\n            .filter(card => this.isCardUnit(card) && card.canAttack)\r\n            .sort((a, b) => b.ap - a.ap);\r\n        const attacker = unitsThatCanAttack[0];\r\n        if (!attacker)\r\n            return {};\r\n\r\n        const notEnoughShield = this.getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker);\r\n        const target = this.getTarget(game, task, player, attacker, notEnoughShield);\r\n        this.declareAiAttack(attacker, target);\r\n        return { taskAdded: true };\r\n    }\r\n\r\n    static getNotEnoughShield(game, task, player, unitsThatCanAttack, attacker) {\r\n        let attackMinimimForWin = game.player1.shield.length + 1;\r\n        if (game.player1.base.length > 0) {\r\n            attackMinimimForWin += 1;\r\n            const base = game.player1.base[0];\r\n            if (base.hp > attacker.ap)\r\n                attackMinimimForWin += 1;\r\n        }\r\n        return attackMinimimForWin <= unitsThatCanAttack.length;\r\n    }\r\n\r\n    static getTarget(game, task, player, attacker, notEnoughShield) {\r\n        const targets = game.player1.field.filter(x => this.isValidTarget(game.player1, attacker, x) && x.hp <= attacker.ap);\r\n        const target = targets.length < 1 ? null : targets.sort((a, b) => b.level - a.level)[0];\r\n\r\n        if (target && attacker.breach)\r\n            return target;\r\n\r\n        if (notEnoughShield)\r\n            return null;\r\n\r\n        return target;\r\n    }\r\n\r\n    static getPlayCardTasks(player, card1, card2) {\r\n        const value = `I Play ${card1.name} ${card2 ? 'with ' + card2.name : ''}`;\r\n        return [\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            { id: this.play.name, card1, card2, zone: player.positions.field, regularPlay: true }\r\n        ]\r\n    }\r\n\r\n    static declareAiAttack(attacker, target) {\r\n        const value = `I attack with ${attacker.name} (Level ${attacker.level}, AP ${attacker.ap}) ${target ? 'against ' + target.name : ''}`;\r\n        this.addTasksFirst([\r\n            { id: this.showTitle.name, value, isPlayer1: false, delay: true },\r\n            {\r\n                id: this.attack.name,\r\n                attacker, isPlayer1: false,\r\n                target\r\n            }\r\n        ]);\r\n    }\r\n}\r\n\r\n\r\nexport default aiPlay;\r\n","class aiStrategy {\r\n    static handleStrategy(game, player, cardsAvailable) {\r\n        let result = null;\r\n\r\n        const base = player.base.length > 0 ? player.base[0] : null;\r\n        if (base && base.active) {\r\n            result = this.handleStrategyCard(game, player, cardsAvailable, base);\r\n            if (result.stop || result.taskAdded)\r\n                return result;\r\n        }\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playAsap\");\r\n        if (result.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnits\");\r\n        if (result.length > 0 && game.player2.field.length > 0)\r\n            return { unit: result[0] };\r\n\r\n        result = cardsAvailable.filter(x => x.strategy && x.strategy == \"playIfOpponentUnitsRested\");\r\n        if (result.length > 0 && game.player2.field.filter(x => !x.active).length > 0)\r\n            return { unit: result[0] };\r\n\r\n        return {};\r\n    }\r\n\r\n    static handleStrategyCard(game, player, cardsAvailable, card) {\r\n        let lunchMainEffectCard = false;\r\n\r\n        if (card.id === 'GD01-124'){ // Side 7\r\n            const hasActiveUnitThatNeedRepair = player.field.find(x => x.hp < x.hpMax);\r\n            lunchMainEffectCard = hasActiveUnitThatNeedRepair;\r\n        }\r\n\r\n        else if (card.id === 'ST01-016') { // Asticassia School of Technology, Earth House\r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST01-015' && player.resourcesAvailable > 1){  // White base            \r\n            lunchMainEffectCard = true;\r\n        }\r\n\r\n        else if (card.id === 'ST04-015'){ // Archangel\r\n            const hasInactiveBlocker = player.field.find(x => !x.active && this.hasEffect(x, 'blocker'));\r\n            lunchMainEffectCard = player.resourcesAvailable > 1 && hasInactiveBlocker;\r\n        } \r\n\r\n        if (lunchMainEffectCard) {\r\n            this.addTaskFirst({ id: this.lunchMainEffectCard.name, cardChoice: card });\r\n            return { taskAdded: true };\r\n        }\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\n\r\nexport default aiStrategy;\r\n","import effectsLuncher from './effectsLuncher';\r\nimport effectsTarget from './effectsTarget';\r\nimport mainEffects from './mainEffects';\r\nimport positioner from './positioner';\r\nimport selectable from './selectable';\r\nimport cardAction from './cardAction';\r\nimport conditions from './conditions';\r\nimport cardMove from './cardMove';\r\nimport cardLife from './cardLife';\r\nimport cardPlay from './cardPlay';\r\nimport refresh from './refresh';\r\nimport effects from './effects';\r\nimport attack from './attack';\r\nimport setup from './setup';\r\nimport popup from './popup';\r\nimport tasks from './tasks';\r\nimport utils from './utils';\r\nimport show from './show';\r\nimport turn from './turn';\r\nimport tuto from './tuto';\r\nimport pair from './pair';\r\nimport ai from './ai';\r\nimport aiCombos from './aiCombos';\r\nimport aiPlay from './aiPlay';\r\nimport aiStrategy from './aiStrategy';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass game {\r\n    static game = null;\r\n    static index = 1;\r\n    static delay = 500;\r\n    static needTaskEndRefresh;\r\n    static cardHighlight = [];\r\n    static isStart;\r\n    static quickstart;\r\n\r\n    static setup(width, height, cards, decklistPlayer1, decklistPlayer2, quickstart, useTuto) {\r\n        this.cards = cards.cards;\r\n        this.quickstart = quickstart;\r\n        this.game = {\r\n            logs: '',\r\n            cards: [],\r\n            tasks: [{ id: 'setupGame' }],\r\n            cardList: cards.cards,\r\n            gundamCards: cards,\r\n            decklistPlayer1, decklistPlayer2,\r\n            incruises: [],\r\n            effects: [],\r\n            tuto:useTuto\r\n        };\r\n\r\n        const scripts = [\r\n            tasks, utils, popup, setup, positioner, turn, refresh, selectable, show, mainEffects,\r\n            cardLife, cardMove, cardPlay, cardAction, effectsLuncher, effectsTarget, conditions, effects, pair, attack,\r\n            ai, aiCombos, aiPlay, aiStrategy\r\n        ];\r\n        if(useTuto)\r\n            scripts.push(tuto); // = [tuto].concat(scripts);\r\n\r\n        utils.addFunction(scripts, this, useTuto);\r\n        this.game.grid = this.createGrid(width, height);\r\n        this.continue(this.game);\r\n        this.isStart = true;\r\n        return this.game;\r\n    }\r\n\r\n    static continue(game) {\r\n        if (this.isStart) {\r\n            this.addTaskFirst({ id: this.mulligan.name }, { id: this.nextTurn.name });\r\n            this.isStart = false;\r\n        }\r\n        this.endAnimation(game);\r\n        let result = this.handleTasks(game);\r\n        if (!game.refresh && !game.isPlayer1) {\r\n            this.addTask({ id: this.newTurnForAI.name });\r\n            result = this.continue(game);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        this.startTasks(game);\r\n        this.addTask({ id: this.play.name, card1, card2, zone, regularPlay: true });\r\n        return this.continue(game);\r\n    }\r\n\r\n    static useEffect(game) {\r\n        this.startTasks(game);\r\n        return this.lunchMainEffectCard(game);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.popup.task.choice = choice;\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.popup.task.cardChoice = card;\r\n        return game;\r\n    }\r\n\r\n    static tutoNext(game, next=true){\r\n        if(!game.showTextTuto)\r\n            return game;\r\n        game.showTextTuto.next=next;\r\n        this.continueTuto(game);\r\n        return this.continue(game);\r\n    }\r\n\r\n    static showLocationCards(game, location, isPlayer1) {\r\n        const player = this.getPlayer(isPlayer1);\r\n        this.addTaskFirst({\r\n            id: this.popup.name,\r\n            cards: player[location],\r\n            task: {},\r\n            isPlayer1: true,\r\n            text: `${location} of player ${player.index}`,\r\n            choices: [{ text: 'ok' }]\r\n        });\r\n        return game;\r\n    }\r\n\r\n    static endTurn(game, card1, card2, drop) {\r\n        this.startTasks(game);\r\n        game.tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n        return game;\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        this.game.isVictory = isPlayer1;\r\n        const message = isPlayer1 ? 'Victory' : 'Defeat';\r\n        return { end: true };\r\n    }\r\n}\r\n\r\n\r\nexport default game;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: _vm.card.fadeOut },style:({\n    left: _vm.card.position.x + 'px',\n    top: _vm.card.position.y + 'px',\n    width: _vm.card.position.width + 'px',\n    height: _vm.card.position.height + 'px',\n    transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n    'z-index': _vm.card.zindex,\n    cursor: _vm.shine ? 'pointer' : '',\n    border: _vm.card.fx ? '1px solid yellow' : ''\n  }),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(_vm.card.fxRed)?_c('div',{class:{ bgRed: 1, circle: 1, absolute: 1, fadeInOut: !_vm.card.fxTextCancelFadeout },style:(_vm.getRedFxStyle(_vm.card))}):_vm._e(),(!_vm.card)?_c('div',[_vm._v(\"No card\")]):(_vm.card.verso === true)?_c('img',{class:{ w100p: true, h100p: true, absolute: true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + 'empty.webp')}}):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute: true },style:({\n    'object-fit': 'cover',\n    'object-position': _vm.card.bgposition,\n    'pointer-events': 'none'\n  }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(_vm.card.fxText)?_c('div',{class:{ absolute: 1, 'text-center': 1, 'text-center-vertical': 1, fontSize150em: 1, 'text-shadow-black': 1, fadeInOut: !_vm.card.fxTextCancelFadeout },style:({ ..._vm.getRedFxStyle(_vm.card), 'mask-image': '', 'color': 'red' })},[_vm._v(\" \"+_vm._s(_vm.card.fxText)+\" \")]):_vm._e(),(!_vm.card.verso && !_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"w100p h100p\",style:({ transform: !_vm.card.position.rotation || _vm.card.position.rotation == 0 ? '' : 'rotate(-90deg)' })},[_c('div',{staticClass:\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\",staticStyle:{\"width\":\"70px\",\"height\":\"30px\",\"top\":\"-10px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")])]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine circle15px\",staticStyle:{\"top\":\"0px\",\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div @click=\"$emit('click', card)\"\r\n    :class=\"{ absolute: 1, bgYellow: 1, circle15px: 1, 'elevation-24': 1, fadeOut: card.fadeOut }\" :style=\"{\r\n      left: card.position.x + 'px',\r\n      top: card.position.y + 'px',\r\n      width: card.position.width + 'px',\r\n      height: card.position.height + 'px',\r\n      transform: 'rotate(' + card.position.rotation + 'deg)',\r\n      'z-index': card.zindex,\r\n      cursor: shine ? 'pointer' : '',\r\n      border: card.fx ? '1px solid yellow' : ''\r\n    }\">\r\n    <div v-if=\"card.fxRed\" :class=\"{ bgRed: 1, circle: 1, absolute: 1, fadeInOut: !card.fxTextCancelFadeout }\"\r\n      :style=\"getRedFxStyle(card)\">\r\n    </div>\r\n\r\n\r\n    <div v-if=\"!card\">No card</div>\r\n\r\n    <!-- Card Image-->\r\n    <img v-else-if=\"card.verso === true\" :class=\"{ w100p: true, h100p: true, absolute: true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + 'empty.webp')\" />\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute: true }\" draggable=\"false\" :style=\"{\r\n      'object-fit': 'cover',\r\n      'object-position': card.bgposition,\r\n      'pointer-events': 'none'\r\n    }\" :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n\r\n    <!-- fxText-->\r\n    <div v-if=\"card.fxText\"\r\n      :class=\"{ absolute: 1, 'text-center': 1, 'text-center-vertical': 1, fontSize150em: 1, 'text-shadow-black': 1, fadeInOut: !card.fxTextCancelFadeout }\"\r\n      :style=\"{ ...getRedFxStyle(card), 'mask-image': '', 'color': 'red' }\">\r\n      {{ card.fxText }}\r\n    </div>\r\n\r\n    <!-- stats-->\r\n    <div v-if=\"!card.verso && !hidestat && (card.ap || card.hp)\" class=\"w100p h100p\"\r\n      :style=\"{ transform: !card.position.rotation || card.position.rotation == 0 ? '' : 'rotate(-90deg)' }\">\r\n      <div class=\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize150em\"\r\n        style=\"width:70px; height:30px; top:-10px; background-color: #FFFFFFB0;\">\r\n        {{ card.ap }} - {{ card.hp }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- red background-->\r\n    <div class=\"w100p h100p absolute shine circle15px\" v-if=\"card && card.dead\"\r\n      style=\"top:0px; background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat'],\r\n  methods: {\r\n    getRedFxStyle(card) {\r\n      return {\r\n        opacity: card.fxTextCancelFadeout ? 1 : 0,\r\n        left: '-100%',\r\n        top: '-71.3%',\r\n        width: (this.card.position.width * 3) + 'px', height: (this.card.position.width * 3) + 'px',\r\n        'mask-image': 'radial-gradient(rgba(0 0 0 /0) 40%, black 45%, rgba(0 0 0 /0) 70%)'\r\n      };\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=8679530e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8679530e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#F44336', _vm.p1max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#3F51B5', _vm.p1yellow + _vm.p1blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(true, '#FFEB3B', _vm.p1yellow))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#F44336', _vm.p2max))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#3F51B5', _vm.p2yellow + _vm.p2blue))}),_c('div',{staticClass:\"banana absolute\",style:(_vm.getBananaStyle(false, '#FFEB3B', _vm.p2yellow))}),(_vm.p1yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(true, _vm.p1yellow))},[_vm._v(_vm._s(_vm.p1yellow)+\" \")]):_vm._e(),(_vm.p2yellow > 0)?_c('div',{staticClass:\"text absolute text-center\",style:(_vm.getTextStyle(false, _vm.p2yellow))},[_vm._v(_vm._s(_vm.p2yellow)+\" \")]):_vm._e(),(_vm.p1blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(true, _vm.p1yellow + _vm.p1blue))},[_vm._v(\" \"+_vm._s(_vm.p1yellow + _vm.p1blue)+\" \")]):_vm._e(),(_vm.p2blue > 0)?_c('div',{staticClass:\"text absolute text-center bgBlue\",style:(_vm.getTextStyle(false, _vm.p2yellow + _vm.p2blue))},[_vm._v(\" \"+_vm._s(_vm.p2yellow + _vm.p2blue)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"relative\" style=\"width: 100%; height: 100%;\">\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#F44336', p1max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#3F51B5', p1yellow + p1blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(true, '#FFEB3B', p1yellow)\"></div>\r\n\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#F44336', p2max)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#3F51B5', p2yellow + p2blue)\"></div>\r\n        <div class=\"banana absolute\" :style=\"getBananaStyle(false, '#FFEB3B', p2yellow)\"></div>\r\n\r\n        <div v-if=\"p1yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(true, p1yellow)\">{{ p1yellow }}\r\n        </div>\r\n        <div v-if=\"p2yellow > 0\" class=\"text absolute text-center\" :style=\"getTextStyle(false, p2yellow)\">{{ p2yellow }}\r\n        </div>\r\n\r\n        <div v-if=\"p1blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(true, p1yellow + p1blue)\">\r\n            {{ p1yellow + p1blue }}\r\n        </div>\r\n        <div v-if=\"p2blue > 0\" class=\"text absolute text-center bgBlue\" :style=\"getTextStyle(false, p2yellow + p2blue)\">\r\n            {{ p2yellow + p2blue }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.banana {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    mask-image: radial-gradient(rgba(0 0 0 /0) 40%, black 45%);\r\n}\r\n\r\n.text {\r\n    color: black;\r\n    background: #FFEB3B;\r\n    border-radius: 50%;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'banana-bars',\r\n    props: ['width', 'p1yellow', 'p1blue', 'p2yellow', 'p2blue', 'p1max', 'p2max', 'max'],\r\n    methods: {\r\n        getBananaStyle(isPlayer1, color, value) {\r\n            const percent = value * 100 / this.max;\r\n            const margin = 10;\r\n            const angle = isPlayer1 ? 225 : 45;\r\n            const anglePercent = percent * 180 / 100;\r\n            const anglePercentMinusMargin = anglePercent - margin;\r\n            return {\r\n                transform: `rotate(${angle}deg) scaleX(-1)`,\r\n                background: `conic-gradient(transparent 0deg, \r\n                                            ${color} ${margin}deg, \r\n                                            ${color} ${anglePercentMinusMargin}deg, \r\n                                            transparent ${anglePercent}deg)`\r\n            };\r\n        },\r\n        getTextStyle(isPlayer1, value) {\r\n            const percent = value / this.max;\r\n            const percentIncruise = this.width / 100;\r\n            let leftValue = isPlayer1 ? this.getParabolicY(15, 68, 76, percent) : this.getParabolicY(64, 11, 5, percent);\r\n            leftValue *= percentIncruise;\r\n\r\n            let topValue = isPlayer1 ? this.getParabolicY(70, 68, 14, percent) : this.getParabolicY(9, 12, 61, percent);\r\n            topValue *= percentIncruise;\r\n\r\n            return { width: 25 + 'px', height: 25 + 'px', left: leftValue + 'px', top: topValue + 'px' };\r\n        },\r\n        getParabolicY(y0, y50, y100, t) {\r\n            const a = 2 * y0 - 4 * y50 + 2 * y100;\r\n            const b = -3 * y0 + 4 * y50 - y100;\r\n            const c = y0;\r\n            return a * t * t + b * t + c;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bananaBars.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bananaBars.vue?vue&type=template&id=0d48b94b&scoped=true&\"\nimport script from \"./bananaBars.vue?vue&type=script&lang=js&\"\nexport * from \"./bananaBars.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bananaBars.vue?vue&type=style&index=0&id=0d48b94b&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d48b94b\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('img',{staticClass:\"w100p h100p\",staticStyle:{\"object-fit\":\"contain\"},attrs:{\"src\":require('@/assets/Gundam/' + _vm.icon)},on:{\"click\":function($event){return _vm.$emit('click')}}}),_c('div',{staticClass:\"absolute text-center w100p text-shadow-black\",staticStyle:{\"top\":\"35%\"}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.length)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <img @click=\"$emit('click')\" class=\"w100p h100p\" style=\"object-fit:contain\" :src=\"require('@/assets/Gundam/' + icon)\" />\r\n        <div class=\"absolute text-center w100p text-shadow-black\" style=\"top: 35%;\">\r\n            {{ text }}\r\n            <br>\r\n            {{ length }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    name: 'deck-icon',\r\n    props: ['icon', 'length', 'text']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckIcon.vue?vue&type=template&id=07473bde&\"\nimport script from \"./deckIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./deckIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p mask bg2\" style=\"height: 100dvh\" :key=\"refreshG\">\r\n        <span v-if=\"game\">\r\n            <!-- Drag and drop field-->\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.halfPlayer2)\"></div>\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.centerZoneP2)\"></div>\r\n            <div class=\"absolute bg2\" :style=\"getFieldStyleObj(game.grid.halfPlayer1)\"></div>\r\n            <div class=\"absolute diagonal-split\" :style=\"getFieldStyleObj(game.grid.resources)\">\r\n            </div>\r\n            <div class=\"absolute text-center textVerticalCenter fontSize075em\"\r\n                :style=\"{ ...getFieldStyleObj(game.grid.resources), transform: 'rotate(-45deg)' }\">\r\n                Resources\r\n            </div>\r\n            <banana-bars :p1yellow=\"game.player1.resourcesAvailable - game.player1.resourcesEx\"\r\n                :p1blue=\"game.player1.resourcesEx\" :p1max=\"game.player1.resourcesMax\"\r\n                :p2yellow=\"game.player2.resourcesAvailable - game.player2.resourcesEx\"\r\n                :p2blue=\"game.player2.resourcesEx\" :p2max=\"game.player2.resourcesMax\" :max=\"game.resourcesMax\"\r\n                :style=\"getFieldStyleObj(game.grid.resources)\" :width=\"game.grid.resources.width\">\r\n            </banana-bars>\r\n\r\n            <!-- Player 1 -->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Deck)\" text=\"Deck\"\r\n                :length=\"game.player1.deck.length\" :icon=\"game.player1.deckIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Trash)\" text=\"Trash\"\r\n                :length=\"game.player1.trash.length\" :icon=\"game.player1.trashIcon\"\r\n                @click=\"showLocationCards('trash', true)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Base)\" text=\"Base\"\r\n                :icon=\"game.player1.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player1Shield)\" text=\"Shield\"\r\n                :length=\"game.player1.shield.length\" :icon=\"game.player1.shieldIcon\">\r\n            </deck-icon>\r\n            <div v-if=\"game\" class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player1Hand)\">\r\n            </div>\r\n            <div v-if=\"game\" class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player1Field)\">\r\n            </div>\r\n\r\n            <!-- Player 2-->\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Deck)\" text=\"Deck\"\r\n                :length=\"game.player2.deck.length\" :icon=\"game.player2.deckIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Trash)\" text=\"Trash\"\r\n                :length=\"game.player2.trash.length\" :icon=\"game.player2.trashIcon\"\r\n                @click=\"showLocationCards('trash', false)\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Base)\" text=\"Base\"\r\n                :icon=\"game.player2.baseIcon\">\r\n            </deck-icon>\r\n            <deck-icon class=\"absolute\" :style=\"getFieldStyleObj(game.grid.player2Shield)\" text=\"Shield\"\r\n                :length=\"game.player2.shield.length\" :icon=\"game.player2.shieldIcon\">\r\n            </deck-icon>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player2Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player2Field)\">\r\n            </div>\r\n\r\n            <!-- Buttons -->\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEffect)\">\r\n                <v-btn target=\"_blank\"\r\n                    :class=\"{ bg: true, shine: !freeze && game.player1.hasEffects, w100p: true, h100p: true }\"\r\n                    @click=\"useEffect\" style=\"min-width:0px;\">\r\n                    <span>Use<br>Effect</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute bgYellow circle10px fontSize075em\" :style=\"getFieldStyleObj(game.grid.buttonEndTurn)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg: true, shine: !freeze, w100p: true, h100p: true }\"\r\n                    style=\"min-width:0px;\" @click=\"nextTurn\">\r\n                    <span v-if=\"game.grid.buttonEndTurn.width > 50\">End<br>Turn</span><span v-else>End</span>\r\n                </v-btn>\r\n            </div>\r\n            <div class=\"absolute vertical-scroll\" v-html=\"game.logs\" :style=\"getFieldStyleObj(game.grid.logZone)\">\r\n            </div>\r\n\r\n            <!-- TutoMasks-->\r\n            <div v-for=\"(tutoMask, index) in game.tutoMasks\" :key=\"'TutoMask' + index\"\r\n                :class=\"{ absolute: 1, bg2: tutoMask.isPlayer1, bg: !tutoMask.isPlayer1 }\"\r\n                :style=\"getFieldStyleObj(tutoMask)\">\r\n            </div>\r\n\r\n            <!-- Highlight and TextZone-->\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.textZone)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardCenter)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardLeft)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.highlightCardRight)\">\r\n            </div>\r\n\r\n            <!-- cards -->\r\n            <div v-for=\"card in cards.filter(x => !x.hide)\" :key=\"'B' + card.index\">\r\n                <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                    :hidestat=\"card.hidestat\" @click=\"showCard(card)\">\r\n                </gameCard>\r\n            </div>\r\n\r\n            <!-- Tuto Text -->\r\n            <div v-if=\"game.showTextTuto\" class=\"absolute fadeIn\"\r\n                :style=\"{ ...getFieldStyleObj(game.showTextTuto), 'z-index': game.showTextTuto.zindex ? game.showTextTuto.zindex : 56 }\">\r\n                <!-- Arrow-->\r\n                <div class=\"bgWhite absolute\" v-if=\"game.showTextTuto.arrow\"\r\n                    :style=\"{ ...getFieldStyleObj(game.showTextTuto.arrow), transform: 'rotate(45deg)', 'z-index': -1, border: 'solid blue 5px' }\">\r\n                </div>\r\n\r\n                <div class=\"w100p h100p bgWhite colorBlack flex\"\r\n                    style=\"flex-direction: column; justify-content: center; border: solid blue 5px\">\r\n                    <div class=\"text-center m5px\">{{ game.showTextTuto.text }}</div>\r\n                    <div v-if=\"!game.showTextTuto.hideNext\" class=\"m5px bgYellow circle10px\"\r\n                        style=\"align-self: flex-end;\">\r\n                        <v-btn class=\"bg2 shine\" @click=\"tutoNext\">Next</v-btn>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </span>\r\n\r\n        <drag-drop-arrow id=\"0\" :sources=\"sources\" @drop=\"dropPoint\" @click=\"clickDrop\" :targets=\"targets\"\r\n            :freeze=\"freeze || game?.popup\">\r\n        </drag-drop-arrow>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game && game.popup\" class=\"absolute w100p h100p m5px\"\r\n            style=\"top:0px; display: flex; overflow: hidden; flex-direction: column; z-index: 80;\">\r\n            <div class=\"flex-grow\" style=\"min-height: 10%;\"> </div>\r\n            <div class=\"w100p\">\r\n                <div class=\"flex flex-wrap w100p\" style=\"justify-content:center\">\r\n                    <v-btn class=\"m10px\" style=\"background-color: #FFFF00F0;\" @click=\"showOrHidePopup(false)\">\r\n                        <span v-if=\"popupShow\">Hide Popup</span><span v-else>Show Popup</span>\r\n                    </v-btn>\r\n                    <div v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"popupShow\" style=\"background-color: #FFFF00F0; width:100%; overflow-y: auto;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p mp5px\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p horizontal-scroll\" v-if=\"game?.popup.cards && game?.popup.cards.length > 0\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\"\r\n                        :style=\"{ width: game?.grid.card100.height + 'px' }\">\r\n                        <div class=\"text-center colorBlack\">{{ card.location }} P{{ card.isPlayer1 ? '1' : '2' }}\r\n                        </div>\r\n                        <img :style=\"{ width: game?.grid.card100.width + 'px', 'aspect-ratio': '107/150', transform: 'rotate(' + card.position?.rotation ?? 0 + 'deg)' }\"\r\n                            @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game\" id=\"divTextEffect\" class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\"\r\n            :style=\"{\r\n                ...getFieldStyleObj(game.grid.textZone), 'z-index': 11, height: 0\r\n            }\">\r\n            <div v-html=\"text\"></div>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\"\r\n            :style=\"{ top: '80px', width: '100%', height: '0px', 'z-index': 13 }\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 70;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute\" style=\"top:0px; left:0px;\">\r\n            <!-- Debug -->\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport cards from '../data/gundamCards.json';\r\nimport gameGundam from './gundam/game';\r\nimport gameCard from './card';\r\nimport bananaBars from './bananaBars.vue';\r\nimport deckIcon from './deckIcon.vue';\r\nimport dragDropArrow from './dragDropArrow.vue';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: ['deck1', 'deck2', 'quickstart', 'tuto'],\r\n    components: { gameCard, bananaBars, deckIcon, dragDropArrow },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: null,\r\n        text: null,\r\n        popupShow: true,\r\n        ignoreEvent: [],\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        sources: [],\r\n        targets: []\r\n    }),/*\r\n    watch: {\r\n        deck1() { this.setDecks();},\r\n        deck2() { this.setDecks();}\r\n    },*/\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n\r\n        this.cardList = cards.cards;\r\n        this.setDecks();\r\n    },\r\n    methods: {\r\n        setDecks() {\r\n            this.decklistPlayer1 = this.deck1;\r\n            this.decklistPlayer2 = this.deck2;\r\n            if (this.decklistPlayer1 && this.decklistPlayer2)\r\n                this.start();\r\n        },\r\n        start() {\r\n            this.game = gameGundam.setup(this.$vuetify.breakpoint.width,\r\n                this.$vuetify.breakpoint.height,\r\n                cards,\r\n                this.decklistPlayer1,\r\n                this.decklistPlayer2,\r\n                this.quickstart,\r\n                this.tuto);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.endTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameGundam.continue(this.game);\r\n            if (this.game.end) {\r\n                this.$emit('end', this.game.isVictory);\r\n                return;\r\n            }\r\n            if (this.game.popup || this.game.freeze) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.freezeButtons)\r\n                this.freeze = true;\r\n\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        useEffect() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.useEffect(this.game);\r\n            this.continue();\r\n        },\r\n        dropPoint(event) {\r\n            if (!event || !event.target || !event.target.text)\r\n                return;\r\n\r\n            if (event.target.text === 'Play')\r\n                this.playCard(event.source.card, null, this.game.grid.player1Field);\r\n            if (event.target.text === 'Pair')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player1Field);\r\n            if (event.target.text === 'Attack')\r\n                this.playCard(event.source.card, event.target.card, this.game.grid.player2Field);\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameGundam.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        showLocationCards(location, isPlayer1) {\r\n            this.game = gameGundam.showLocationCards(this.game, location, isPlayer1);\r\n            this.refreshGame();\r\n        },\r\n        showOrHidePopup() {\r\n            this.popupShow = !this.popupShow;\r\n        },\r\n        tutoNext(next = true) {\r\n            this.game = gameGundam.tutoNext(this.game, next);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            this.sources = this.game.player1.drags;\r\n\r\n            this.showTextEffect(this.game.showTitle, 'title', 'divTitleParent', { height: 0 });\r\n            this.showTextEffect(this.game.textEffect?.text, 'text', 'divTextEffect', { height: 0 });\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gameGundam.delay;\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gameGundam.delay;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = cardsToAnimate.length < 1 && !this.game.showTitle && !this.game.textEffect ? 10 : gameGundam.delay;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTextEffect(text, property, divId, to) {\r\n            if (!text || this.ignoreEvent.includes(property))\r\n                return;\r\n\r\n            const animationTime = 200;\r\n            this.ignoreEvent.push(property);\r\n            this[property] = text;\r\n\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate(divId, { height: 100 }, to, false, animationTime); }, 10 + animationTime * 4);\r\n            setTimeout(() => { this.ignoreEvent = this.ignoreEvent.filter(x => x !== property); }, 10 + animationTime * 6);\r\n        },\r\n\r\n        // --------- showCard\r\n        clickDrop(event) {\r\n            this.showCard(event.card);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.highlightCardCenter : { x: 0, y: 0, width: 200, height: 280 };\r\n            if (!card) {\r\n                if (this.game.freeze)\r\n                    return;\r\n\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            }\r\n            else {\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n            }\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gameGundam.delay);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n                this.game.cardCenter = this.cardCenter.position.height > 0 ? this.cardCenter : null;\r\n                this.tutoNext(false);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=083fa465&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=083fa465&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            function getAnimValue(property, anim, time) {\r\n                let t = time;\r\n                let from = null;\r\n                let to = null;\r\n                let progress = 0;\r\n\r\n                if (anim.delay) {\r\n                    t = (t < 0.5) ? (t + 0.5) : (t - 0.5);\r\n                }\r\n\r\n                if (!anim.mid || !anim.mid[property]) {\r\n                    progress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n                    from = anim.from;\r\n                    to = anim.to;\r\n                }\r\n                else if (t < 0.5) {\r\n                    t = t / 0.5;\r\n                    progress=t;\r\n                    from = anim.from;\r\n                    to = anim.mid;\r\n                } else {\r\n                    t = (t - 0.5) / 0.5;\r\n                    progress=t;\r\n                    from = anim.mid;\r\n                    to = anim.to;\r\n                }\r\n\r\n                return from[property] + (to[property] - from[property]) * progress;\r\n            }\r\n\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = getAnimValue('x', anim, t);\r\n                const currentY = getAnimValue('y', anim, t);\r\n                const currentWidth = getAnimValue('width', anim, t);\r\n                const currentHeight = getAnimValue('height', anim, t);\r\n                const currentRotation = getAnimValue('rotation', anim, t);\r\n                const currentOpacity = getAnimValue('opacity', anim, t);\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.opacity = currentOpacity;\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = val1[property];\r\n            const value = val2[property];\r\n            if (value)\r\n                result[property] += value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static setIfNull(from, mid) {\r\n        const properties = 'x,y,width,height,rotation,opacity';\r\n        const result = {};\r\n        properties.split(',').forEach(property => {\r\n            result[property] = from[property];\r\n            const value = mid[property];\r\n            if (value)\r\n                result[property] = value;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.element = document.getElementById(anim.id);\r\n            if (!anim.element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            anim.from = anim.from ?? {\r\n                x: this.pxStringToInt(anim.element.style.left),\r\n                y: this.pxStringToInt(anim.element.style.top),\r\n                rotation: anim.element.style.rotation,\r\n                height: anim.element.style.height,\r\n                width: anim.element.style.width,\r\n                delay: false\r\n            };\r\n            anim.from.rotation = anim.from.rotation ?? 0;\r\n            anim.from.opacity = anim.from.opacity ?? 1;\r\n            anim.from.height = anim.from.height ?? anim.element.clientHeight;\r\n            anim.to = anim.isIncrement ? this.add(anim.from, anim.to) : anim.to;\r\n            anim.mid = !anim.mid ? null : anim.isIncrement ? this.add(anim.from, anim.mid) : anim.mid;\r\n        });\r\n        this.animateElements(animations, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071,\n\t\"./empty.webp\": 8621,\n\t\"./empty2.webp\": 66626,\n\t\"./emptyOld.webp\": 40879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./CardsGundam.png\": 4859,\n\t\"./EncyclopedieGundam.png\": 15831,\n\t\"./GundamEncyclopedie.png\": 94627,\n\t\"./GundamLogo.jpg\": 30262,\n\t\"./GundamLogo2.png\": 68499,\n\t\"./cards/EXB-001.webp\": 43631,\n\t\"./cards/EXBP-001.webp\": 69411,\n\t\"./cards/GD01-004.webp\": 19862,\n\t\"./cards/GD01-004_p1.webp\": 91962,\n\t\"./cards/GD01-005.webp\": 80632,\n\t\"./cards/GD01-008.webp\": 13406,\n\t\"./cards/GD01-009.webp\": 39343,\n\t\"./cards/GD01-011.webp\": 57985,\n\t\"./cards/GD01-013.webp\": 25257,\n\t\"./cards/GD01-015.webp\": 29370,\n\t\"./cards/GD01-016.webp\": 24272,\n\t\"./cards/GD01-018.webp\": 62998,\n\t\"./cards/GD01-026.webp\": 83759,\n\t\"./cards/GD01-026_p1.webp\": 58145,\n\t\"./cards/GD01-028.webp\": 21495,\n\t\"./cards/GD01-030.webp\": 94485,\n\t\"./cards/GD01-031.webp\": 38537,\n\t\"./cards/GD01-034.webp\": 63515,\n\t\"./cards/GD01-040.webp\": 66732,\n\t\"./cards/GD01-041.webp\": 70958,\n\t\"./cards/GD01-068.webp\": 46040,\n\t\"./cards/GD01-070.webp\": 45504,\n\t\"./cards/GD01-070_p1.webp\": 85993,\n\t\"./cards/GD01-072.webp\": 8042,\n\t\"./cards/GD01-075.webp\": 52313,\n\t\"./cards/GD01-076.webp\": 85876,\n\t\"./cards/GD01-077.webp\": 97867,\n\t\"./cards/GD01-081.webp\": 18546,\n\t\"./cards/GD01-088.webp\": 14026,\n\t\"./cards/GD01-088_p1.webp\": 68437,\n\t\"./cards/GD01-089.webp\": 27418,\n\t\"./cards/GD01-091.webp\": 81708,\n\t\"./cards/GD01-097.webp\": 34893,\n\t\"./cards/GD01-099.webp\": 49483,\n\t\"./cards/GD01-100.webp\": 93330,\n\t\"./cards/GD01-100_p1.webp\": 92990,\n\t\"./cards/GD01-105.webp\": 67155,\n\t\"./cards/GD01-107.webp\": 66642,\n\t\"./cards/GD01-107_p1.webp\": 60768,\n\t\"./cards/GD01-117.webp\": 79955,\n\t\"./cards/GD01-118.webp\": 70779,\n\t\"./cards/GD01-118_p1.webp\": 57707,\n\t\"./cards/GD01-120.webp\": 90273,\n\t\"./cards/GD01-124.webp\": 8279,\n\t\"./cards/R-001.webp\": 96567,\n\t\"./cards/R-002.webp\": 38857,\n\t\"./cards/ST01-001.webp\": 16906,\n\t\"./cards/ST01-001_p1.webp\": 6864,\n\t\"./cards/ST01-002.webp\": 23582,\n\t\"./cards/ST01-005.webp\": 7162,\n\t\"./cards/ST01-007.webp\": 56694,\n\t\"./cards/ST01-008.webp\": 70791,\n\t\"./cards/ST01-010.webp\": 45022,\n\t\"./cards/ST01-011.webp\": 56581,\n\t\"./cards/ST01-011_p1.webp\": 1978,\n\t\"./cards/ST01-012.webp\": 13866,\n\t\"./cards/ST01-013.webp\": 79915,\n\t\"./cards/ST01-015.webp\": 51310,\n\t\"./cards/ST01-016.webp\": 86882,\n\t\"./cards/ST02-001.webp\": 58864,\n\t\"./cards/ST02-001_p1.webp\": 76074,\n\t\"./cards/ST02-002.webp\": 23941,\n\t\"./cards/ST02-005.webp\": 55045,\n\t\"./cards/ST02-010.webp\": 99834,\n\t\"./cards/ST02-012.webp\": 57160,\n\t\"./cards/ST02-013.webp\": 55214,\n\t\"./cards/ST02-015.webp\": 34078,\n\t\"./cards/ST03-007.webp\": 82235,\n\t\"./cards/ST03-008.webp\": 55340,\n\t\"./cards/ST03-011.webp\": 56486,\n\t\"./cards/ST03-011_p1.webp\": 92329,\n\t\"./cards/ST03-016.webp\": 77816,\n\t\"./cards/ST04-001.webp\": 22859,\n\t\"./cards/ST04-001_p1.webp\": 46858,\n\t\"./cards/ST04-002.webp\": 18971,\n\t\"./cards/ST04-005.webp\": 54511,\n\t\"./cards/ST04-010.webp\": 80363,\n\t\"./cards/ST04-013.webp\": 14005,\n\t\"./cards/ST04-015.webp\": 81633,\n\t\"./cards/T-001.webp\": 32442,\n\t\"./cards/T-002.webp\": 46514,\n\t\"./cards/T-003.webp\": 88739,\n\t\"./cards/T-006.webp\": 17071,\n\t\"./cards/empty.webp\": 8621,\n\t\"./cards/empty2.webp\": 66626,\n\t\"./cards/emptyOld.webp\": 40879,\n\t\"./centerZone.png\": 17852,\n\t\"./centerZone2.png\": 75025,\n\t\"./centerZone3.png\": 95130,\n\t\"./deck1.png\": 69877,\n\t\"./deck2.png\": 85350,\n\t\"./deck3.png\": 58251,\n\t\"./deck4.png\": 13665,\n\t\"./deck5.png\": 35931,\n\t\"./deck6.png\": 23094,\n\t\"./gundam.png\": 63111,\n\t\"./gundam2.png\": 98815,\n\t\"./head.png\": 83639,\n\t\"./wallpaper.webp\": 45648,\n\t\"./wallpaper2.webp\": 81121,\n\t\"./wingzero2.gif\": 70898\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73890;","var map = {\n\t\"./Gundam/cards/empty.webp\": 8621\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50655;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["render","_vm","this","_c","_self","staticClass","_l","sources","point","index","key","class","absolute","pointCircle","colorYellow","show","style","top","y","left","x","width","height","attrs","on","$event","drag","$emit","display","source","targets","filter","target","colorGreen","_v","_s","text","staticStyle","id","color","staticRenderFns","name","props","component","components","arrowDiv","data","delay","animations","mouse","watch","resetSources","mounted","window","addEventListener","updateMouse","mouseUp","beforeUnmount","removeEventListener","methods","e","touch","touches","length","clientX","clientY","updateAnimation","forEach","element","document","getElementById","animate","freeze","helperAnimation","setTimeout","isInside","box","minX","minY","maxX","maxY","createAnimation","find","from","destination","animation","rotation","getAngleDeg","widthHalf","to","mid","opacity","isIncrement","angleRad","Math","atan2","PI","refreshG","getFieldStyleObj","game","transform","player1","resourcesAvailable","resourcesMax","player2","grid","resources","bg","w100p","h100p","buttonEndTurn","logZone","domProps","logs","tutoMasks","tutoMask","cards","card","showTextTuto","border","choice","popup","position","effectsLuncher","static","trigger","isEffectExisting","card1","result","lunchEffectTriggerForOneCard","effects","getEffects","cancelMoveToTrash","getCancelMoveToTrash","addTaskFirst","applyEffectCard","card2","isExistingCard1Effect","isExistingCard2Effect","tasks","push","cardUnit","cardPilot","addTasksFirst","ignorePair","map","fx","pair","concat","effectsThatCancelMoveToTrash","sendToHand","deploy","effect","includes","task","getEffectText","join","tasksDelay","hide","showCardsEffect","applyEffect","addTasks","toString","value","effect2","ap","hp","replace","incruises","removeEndTurn","players","player","field","recalculateApHp","lost","log","opponent","targetResult","handleEffectTarget","stop","end","isEffectMatchConditions","cost","playCardCost","oneTurn","isConditionsAfterRespected","rest","setActive","_defineProperty","effectsTarget","cardChoice","popupTargetCards","pairedWith","isCardUnit","active","hadBlocker","hand","targetId","attribute","targetAttribute","hasEffect","Error","choices","optional","isPlayer1","mainEffects","trigger_main","refreshPlayersMainEffect","hasEffects","lunchMainEffectCard","positioner","screenWidth","screenHeight","border2","widthMargin","heightMargin","boxHeight","boxWidth","isVertical","card100","player2Hand","location","locationHand","player2Field","locationField","centerZone","centerZoneP2","player1Field","player1Hand","createVerticalGrid","createHorizontalGrid","cardSizeReduce","player1Deck","player1Trash","boxWidthVertical","buttonEffect","halfPlayer1","halfPlayer2","heightQuarter","textZone","highlightCardCenter","highlightCardLeft","getCardSize","highlightCardRight","drop","boxHeightVertical","player1Shield","locationShield","player1Base","locationBase","locationDeck","locationTrash","player2Shield","player2Base","player2Deck","player2Trash","clone","count","cardHeightPercent","desiredWidth","desiredHeight","cardSize","total","degree","wrapCut","centerEmptyZone","zoneHeight","totalCards","cardSizeModified","floor","indexModified","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","totalWidth","elementWidth","sizeWidth","ratio","margin","maxSize","i","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","ceil","ratioInverted","heightDesired","widthDesired","sens","widthEdit","heightEdit","isValid","alignPositionNextToUsingSens","isHorizontal","xOffset","yOffset","arrow","addArrow","selectable","max","isCostAvailable","level","isTurnPlayer","canAttack","cardAction","askForActionCardsForThisPlayer","property","noActionCard","trigger_action","taskAttack","move","actionCard","playerIndex","conditions","isConditionsRespected","conditionsAfter","condition","hasAttribute","trash","isCardCommand","cardMove","cardSpawn","moveCard","spawnIfNot","addIn","positions","deck","zindex","locationFrom","locationTo","removeByIndex","splice","onField","isTemporaryCard","fadeOut","hidestat","verso","handleMainEffectsCard","link","needToRefreshAllField","cardPlay","zone","playFromHand","prepareAttack","playThisCard","sendBack","sendCardBackToSquareOne","isSamePlayer","addTaskPos2","attack","attacker","breach","wrongCost","regularPlay","positionDrag","refresh","playCost","isPilot","isCardPilot","isCommand","pilotOrCommand","askPilotOrCommand","isExisting","effectsAlreadyDone","trigger_onplay","isCardBase","base","addTasksPos2","trigger_command","resourcesEx","refreshPlayerArea","cardsToRemoveIndex","setSelectable","resource","baseIcon","shieldIcon","getIcon","shield","deckIcon","trashIcon","textEffect","useZoneSize","bgposition","getWrapPosition","adjustRotationSize","getPairPosition","percent","previous","reverPercentHalf","loseX","loseY","positionOld","wait","showTitle","tuto","continueTuto","triggerRefreshAlreadyDone","lunchEffectTriggerMultiple","trigger_refresh","needTaskEndRefresh","refreshOnlyTextEffect","cardHighlight","refreshFieldAndHand","refreshDragAndDrop","drags","unitWithoutPilots","drops","unit","getPos","ennemyTarget","isValidTarget","spawnOrMove","costOrigin","reduceValue","JSON","stringify","createCard","values","undefined","min","playToken","destroyUnit","hpMax","hpOrigin","hpMaxOrigin","getAndRemoveFirst","bottomCard","shieldProtection","cardPlayer","getPlayer","alreadyDone","blocker","highManeuver","addTask","play","attackActiveEnnemy","immuneAp","step","attackStep","stepSelectBlocker","selectBlocker","stepSelectActionCards","askForActionCards","stepSelectCardOpponent","selectCardOpponent","stepEffectBattle","effectBattle","stepShowFight","showFight","stepFight","fight","nextStep","array","indexOf","blockers","burstEffect","trigger_burst","showCards","battleEffectsAlreadyDone","trigger_battle","damage","activeBreach","tasksAttackerDead","setup","quickstart","resourceStart","handStartLength","createPlayer","decklistPlayer1","decklistPlayer2","random","fields","playerOpponent","decklist","createDeck","empty","split","line","info","quantity","parseInt","cardList","createUniqueRare","sortRandom","rareKeyWord","rareCards","gundamCards","files","rareCard","firstCard","sort","removeIds","addShielsAndBase","nextTurn","addBase","shieldStartLength","deletePopup","handleAiPopup","actionPlayer","actionOpponent","tasksString","taskEndRefresh","indexTask","addTasksIndex","first","resetZIndex","message","alert","obj","Object","assign","cla","useTuto","ignore","c","getOwnPropertyNames","method","list","slice","valueOld","valueNew","title","taskTextShow","fxRed","hideFx","fxText","turn","getOpponent","global","trigger_end","getPlayerTurn","playerId","startTasks","idTask","taskMoveAndShowCenter","removeOneTurnEffect","setSelectableFalse","baseText","turnIndex","trigger_turn","properties","prop","startsWith","tutoDone","tutoStep","next","tutoSteps","autoNextStep","isDone","action","context","tutoText","used","fr","en","welcome","playUnit","cantAttack","endTurn","zoom","showLevelCost","showLink","showApHp","showResources","showResources2","showResources3","playLevel3","playIt","resourcesUsed","ennemyBase","rested","showApHp2","showApHp3","showEffect","p2LinkUnit","p2AttackBase","p2AttackUnit","unitTrash","linkUnit","linkPilot","attackLink","revenge","famous","baseDestroyed","command","attackRested","burst","playBase","oneBase","useEffect","whiteBase","pairPilot","showPairUnit","playAlone","addTutoMask","tutoSmall","getTextTuto","alignPositionNextTo","conditionNexTurn","hideNext","freezeButtons","cardCenter","isGood","fxTextCancelFadeout","cardFocus","isLink","isExistingPairEffects","effectsAlreadyDonePair","lunchEffectTriggerForTwoCard","trigger_onpair","isExistingLinkEffects","effectsAlreadyDoneLink","trigger_onlink","locationPair","apOrigin","ai","haveBeenRefresh","AiUsed","refreshAiTurn","taskAdded","cardsAvailable","combos","getAiCombos","handleAiHand","handleAiField","selectChoiceNull","aiCombos","units","pilots","pilotLinkUnits","getAiCombosPilotLinkUnit","pilotLinkUnitsOnFieldWithEffects","getAiCombosPilotLinkUnitFieldWithEffects","costRemaining","pilot","a","b","unitHasEffect","hasLinkEffect","aiPlay","bases","playCombo","combo","handleStrategy","getPlayCardTasks","unitsThatCanAttack","notEnoughShield","getNotEnoughShield","getTarget","declareAiAttack","attackMinimimForWin","aiStrategy","handleStrategyCard","strategy","hasActiveUnitThatNeedRepair","hasInactiveBlocker","scripts","utils","cardLife","addFunction","createGrid","continue","isStart","mulligan","endAnimation","handleTasks","newTurnForAI","isVictory","bgYellow","circle15px","cursor","shine","bgRed","circle","fadeInOut","getRedFxStyle","_e","require","folder","preventDefault","fontSize150em","dead","getBananaStyle","p1max","p1yellow","p1blue","p2max","p2yellow","p2blue","getTextStyle","angle","anglePercent","anglePercentMinusMargin","background","percentIncruise","leftValue","getParabolicY","topValue","y0","y50","y100","t","icon","gameCard","bananaBars","dragDropArrow","popupShow","ignoreEvent","body","overflow","setDecks","deck1","deck2","start","gameGundam","$vuetify","breakpoint","refreshGame","animTextEffect","dropPoint","event","playCard","selectChoice","selectChoiceCard","showLocationCards","showOrHidePopup","tutoNext","showTextEffect","beginAnimation","animationTime","cardsToAnimate","divId","clickDrop","showCard","center","getCard","getFieldStyle","w","h","duration","anim","animateElements","startTime","performance","now","update","currentTime","getAnimValue","time","progress","pow","elapsedTime","currentX","currentY","currentWidth","currentHeight","currentRotation","currentOpacity","requestAnimationFrame","val1","val2","animateMultiple","pxStringToInt","clientHeight","add","console","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}