{"version":3,"file":"js/536.2f5afdbb.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/positioner.js","webpack://front/./src/games/gundam/cardMove.js","webpack://front/./src/games/gundam/refresh.js","webpack://front/./src/games/gundam/setup.js","webpack://front/./src/games/gundam/popup.js","webpack://front/./src/games/gundam/tasks.js","webpack://front/./src/games/gundam/array.js","webpack://front/./src/games/gundam/turn.js","webpack://front/./src/games/gundam/game.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/deck.vue","webpack://front/src/games/deck.vue","webpack://front/./src/games/deck.vue?7d6b","webpack://front/./src/games/deck.vue?2d1a","webpack://front/./src/games/deckList.vue","webpack://front/./src/games/scripts/gameTask.js","webpack://front/./src/games/scripts/gundam/effects.js","webpack://front/./src/games/scripts/global.js","webpack://front/./src/games/scripts/positioner.js","webpack://front/./src/games/deckListCard.vue","webpack://front/src/games/deckListCard.vue","webpack://front/./src/games/deckListCard.vue?d81c","webpack://front/./src/games/deckListCard.vue?43bb","webpack://front/src/games/deckList.vue","webpack://front/./src/games/deckList.vue?5bfd","webpack://front/./src/games/deckList.vue?5ba8","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/Gundam/ sync ^\\.\\/.*$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p mask h100p\"},[(_vm.decklistShow)?_c('deck-list',{staticStyle:{\"top\":\"50px\"},attrs:{\"decklist\":_vm.decklistShow,\"cardlist\":_vm.cardList,\"folder\":\"Gundam/cards/\"},on:{\"cardclick\":_vm.showCardDeckList,\"cancel\":function($event){return _vm.showDeckList(null)},\"validate\":_vm.selectDeckList}}):_vm._e(),(!_vm.game)?_c('div',[_c('h2',[_vm._v(\"Select deck for the \"+_vm._s(_vm.decklistPlayer1 ? 'opponent' : 'player'))]),_c('div',{staticClass:\"flex flex-wrap flex-space-around fontSize32\"},_vm._l((_vm.deckList),function(deck,index){return _c('deck',{key:'Deck' + index,attrs:{\"deck\":deck,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showDeckList(deck)}}})}),1)]):_vm._e(),(_vm.game)?_c('span',[_c('div',{staticClass:\"absolute bg2\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer1))}),_c('div',{staticClass:\"absolute bg\",style:(_vm.getFieldStyleObj(_vm.game.grid.halfPlayer2))}),_c('img',{staticClass:\"w100p, absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.centerZone), 'object-fit': 'cover' }),attrs:{\"src\":require('@/assets/Gundam/centerZone.png')}}),_vm._v(\" \"+_vm._s(_vm.game.player1.deckIcon)+\" \"),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Base), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.baseIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Shield), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.shieldIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Deck), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.deckIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player1Trash), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player1.trashIcon)}}),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Base.text))},[_vm._v(\" Base \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Shield.text))},[_vm._v(\" Shield \"+_vm._s(_vm.game.player1.shield.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Deck.text))},[_vm._v(\" Deck \"+_vm._s(_vm.game.player1.deck.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Trash.text))},[_vm._v(\" Trash \"+_vm._s(_vm.game.player1.trash.length)+\" \")]),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player1Field))}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Base), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.baseIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Shield), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.shieldIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Deck), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.deckIcon)}}),_c('img',{staticClass:\"absolute\",style:({ ..._vm.getFieldStyleObj(_vm.game.grid.player2Trash), 'object-fit': 'contain' }),attrs:{\"src\":require('@/assets/Gundam/' + _vm.game.player2.trashIcon)}}),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Base.text))},[_vm._v(\" Base \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Shield.text))},[_vm._v(\" Shield \"+_vm._s(_vm.game.player2.shield.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Deck.text))},[_vm._v(\" Deck \"+_vm._s(_vm.game.player2.deck.length)+\" \")]),_c('div',{staticClass:\"absolute fontSize05em text-center\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Trash.text))},[_vm._v(\" Trash \"+_vm._s(_vm.game.player2.trash.length)+\" \")]),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Hand))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.player2Field))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.textZone))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardCenter))}),_c('div',{staticClass:\"absolute bgYellow hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardLeft))}),_c('div',{staticClass:\"absolute bgRed hide\",style:(_vm.getFieldStyleObj(_vm.game.grid.highlightCardRight))}),_c('div',{staticClass:\"absolute bgYellow circle10px\",style:(_vm.getFieldStyleObj(_vm.game.grid.rightButton))},[_c('v-btn',{class:{ bg2: true, shine: !_vm.freeze, fontSize075em: true, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[(_vm.game.grid.rightButton.width > 50)?_c('span',[_vm._v(\"End Turn\")]):_c('span',[_vm._v(\"End\")])])],1),_c('div',{staticClass:\"absolute\",style:(_vm.getFieldStyleObj(_vm.game.grid.leftButton))},[_c('v-btn',{class:{ bg: true, fontSize075em: true, w100p: true, h100p: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" Logs \")])],1)]):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game && false)?_c('div',[_c('div',{staticClass:\"bgYellow absolute circle10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize075em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"13\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class positioner {\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createGrid(screenWidth, screenHeight) {\r\n        const grid = {};\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        grid.width = screenWidth - grid.border2;\r\n        grid.height = screenHeight - grid.border2;\r\n\r\n        const boxHeight = (grid.height - (grid.border * 6)) / 6;\r\n        grid.centerZone = {\r\n            x: 0,\r\n            y: (0.5 * grid.height) - (0.5 * boxHeight),\r\n            width: grid.width - grid.border2,\r\n            height: boxHeight,\r\n            zone: 'center0',\r\n            location: 'locationCenter',\r\n            show: true\r\n        };\r\n        grid.centerZone.heightQuarter = grid.centerZone.height / 4;\r\n\r\n        const gundamHead = grid.width * 0.04; // > 500 ? 100 : 50;\r\n        let width = (grid.width - gundamHead - (10 * grid.border)) / 8;\r\n        const textHeight = grid.border * 4;\r\n        const iconHeight = grid.centerZone.heightQuarter * 2 - textHeight;\r\n\r\n        // Player 1\r\n        const player1TextLine = grid.centerZone.y + grid.centerZone.heightQuarter + grid.border;\r\n        const player1DeckLine = player1TextLine + (grid.border * 5);\r\n        let x = this.getDeckX(grid, width, 0, true);\r\n        grid.player1Base = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationBase\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 1, true);\r\n        grid.player1Shield = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationShield\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 2, true);\r\n        grid.player1Deck = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationDeck\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 3, true);\r\n        grid.player1Trash = {\r\n            x, y: player1DeckLine, width, height: iconHeight,\r\n            text: { x, y: player1TextLine, width, height: textHeight },\r\n            location : this.locationTrash\r\n        };\r\n\r\n        // Player 2\r\n        const player2TextLine = grid.centerZone.y + grid.centerZone.height - grid.centerZone.heightQuarter - grid.border * 5;\r\n        const player2DeckLine = player2TextLine - (grid.border * 3) - iconHeight;\r\n        x = this.getDeckX(grid, width, 0, false);\r\n        grid.player2Base = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationBase\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 1, false);\r\n        grid.player2Shield = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationShield\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 2, false);\r\n        grid.player2Deck = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationDeck\r\n        };\r\n\r\n        x = this.getDeckX(grid, width, 3, false);\r\n        grid.player2Trash = {\r\n            x, y: player2DeckLine, width, height: iconHeight,\r\n            text: { x, y: player2TextLine, width, height: textHeight },\r\n            location : this.locationTrash\r\n        };\r\n\r\n        // Buttons\r\n        width = ((grid.width) / 4) - grid.border2;\r\n        let height = grid.centerZone.heightQuarter - grid.border2;\r\n        let y = grid.centerZone.y;\r\n        grid.rightButton = {\r\n            width, height, y, x: grid.width - width - grid.border2,\r\n        };\r\n        grid.leftButton = {\r\n            width, height, y: y, x: grid.rightButton.x - width - grid.border\r\n        };\r\n\r\n        // Hand and Field\r\n        x = 0;\r\n        width = grid.width;\r\n        height = grid.height / 2;\r\n        grid.halfPlayer1 = { x, width, height, y: grid.height / 2 };\r\n        grid.halfPlayer2 = { x, width, height, y: 0 };\r\n\r\n        grid.player1Hand = {\r\n            x: 0, y: grid.height - grid.border - boxHeight,\r\n            width: grid.width - grid.border2, height: boxHeight,\r\n            location: this.locationHand\r\n        }\r\n        grid.player1Field = {\r\n            x: 0, y: grid.centerZone.y + grid.centerZone.height + grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight * 1.5,\r\n            location: this.locationField\r\n        }\r\n\r\n        grid.player2Hand = {\r\n            x: 0, y: grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight,\r\n            location: this.locationHand\r\n        }\r\n        grid.player2Field = {\r\n            x: 0, y: grid.player2Hand.y + grid.player2Hand.height + grid.border,\r\n            width: grid.width - grid.border2, height: boxHeight * 1.5,\r\n            location: this.locationHand\r\n        }\r\n\r\n        // Highlight center cards\r\n        grid.textZone = { ...grid.player2Hand };\r\n        grid.highlightCardCenter = { y: grid.player2Field.y, height: grid.height - grid.player2Field.y };\r\n        grid.highlightCardLeft = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 2, 1), y: grid.highlightCardCenter.y };\r\n        grid.highlightCardRight = { ...grid.highlightCardLeft, x:grid.highlightCardLeft.x + grid.highlightCardLeft.width };\r\n        grid.highlightCardCenter = { ...this.getCardSize(grid.width, grid.highlightCardCenter.height, 1, 1), y: grid.highlightCardCenter.y };\r\n\r\n        return grid;\r\n    }\r\n\r\n    static getDeckX(grid, width, index, isPlayer1) {\r\n        const gundamSize = width > 500 ? 55 : 25;\r\n        let value = gundamSize + (index * (width + grid.border));\r\n        value = isPlayer1 ? value : -1 * value - width;\r\n        return (grid.width / 2) + value;\r\n    }\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', this.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', this.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', this.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', this.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', this.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', this.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', this.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', this.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', this.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', this.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', this.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', this.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', this.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', this.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = this.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([this.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == this.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!this.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = this.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.15);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        let x = (width - desiredWidth) / 2;\r\n        let y = (height - desiredHeight) / 2;\r\n\r\n        if(count > 1){\r\n            x= (width - (count * desiredWidth)) /2;\r\n        }\r\n\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n        \r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","class cardMove {\r\n    \r\n    static spawnOrMove(game, task, player) {\r\n        const cardSpawn = this.moveCard(player, task.card1, task.from, task.to);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n    \r\n    static move(game, task, player) {\r\n        return this.moveCard(player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!this.game.cards.find(x => x.index === card.index))\r\n            this.game.cards = this.addIn(this.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? this.game.player1 : this.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static moveCard(player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = locationFrom && locationFrom != 'pair' ? locationFrom : null;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if (from)\r\n            player[from] = this.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard || (card.isTemporaryCard && locationTo === this.locationField))\r\n            player[to] = this.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === this.locationTrash;\r\n        card.location = locationTo;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [this.locationHand, this.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n}\r\n\r\n\r\nexport default cardMove;\r\n","class refresh {\r\n\r\n    static refreshFieldAndHand(game, player) {\r\n        this.refreshPlayerField(player.hand, player.positions.hand, false, 7);\r\n        this.refreshPlayerField(player.field, player.positions.field, false, 3);\r\n        this.refreshPlayerField(player.base, player.positions.base, true);\r\n        \r\n        /*\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        global.game.cards = global.game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n        */\r\n\r\n        // this.setSelectable(player);\r\n\r\n        player.resource = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        player.baseIcon = player.base.length > 0 ? 'cards/' + player.base[0].id + '.webp' : 'deck6.png';\r\n        player.shieldIcon = this.getIcon(player.shield.length);\r\n        player.deckIcon = this.getIcon(player.deck.length);\r\n        player.trashIcon = this.getIcon(player.trash.length);\r\n    }\r\n    \r\n    static refreshPlayerField(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == this.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!this.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == this.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getIcon(length){\r\n        return length < 1 ? 'deck6.png'\r\n            : length < 2 ? 'deck5.png'\r\n            : length < 7 ? 'deck4.png'\r\n            : length < 15 ? 'deck3.png'\r\n            : length < 35 ? 'deck2.png'\r\n            : 'deck1.png';\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n}\r\n\r\n\r\nexport default refresh;\r\n","\r\n\r\nclass setup {\r\n\r\n    static handStartLength=5;\r\n    static shieldStartLength=6;\r\n\r\n    static setupGame(game) {\r\n        game.player1 = this.createPlayer(game, true, game.decklistPlayer1);\r\n        game.player2 = this.createPlayer(game, false, game.decklistPlayer2);\r\n        game.isPlayer1 = false; // Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < this.handStartLength; i++) {\r\n            this.addTasks([\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true },\r\n                { id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: false }]);\r\n        }\r\n    }\r\n\r\n    static createPlayer(game, isPlayer1, decklist) {\r\n        const deck = this.createDeck(game, isPlayer1, decklist);\r\n\r\n        const result = {\r\n            isPlayer1, deck, shield: [], hand: [], field: [], trash: [], base: [], empty: [],\r\n            positions: {\r\n                deck: isPlayer1 ? game.grid.player1Deck : game.grid.player2Deck,\r\n                shield: isPlayer1 ? game.grid.player1Shield : game.grid.player2Shield,\r\n                hand: isPlayer1 ? game.grid.player1Hand : game.grid.player2Hand,\r\n                field: isPlayer1 ? game.grid.player1Field : game.grid.player2Field,\r\n                trash: isPlayer1 ? game.grid.player1Trash : game.grid.player2Trash,\r\n                base: isPlayer1 ? game.grid.player1Base : game.grid.player2Base,\r\n                empty: {}\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static createDeck(game, isPlayer1, decklist) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = game.cardList.find(x => x.id == id);\r\n            if (!card)\r\n                throw new Error(\"This card doesn't exist : \" + id);\r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(this.createCard(card.id));\r\n        })\r\n\r\n        result.forEach(x => {\r\n            x.index = this.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = this.locationDeck;\r\n        });\r\n\r\n        result = this.sortRandom(result);\r\n        return result;\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        card.hpMax = card.hp;\r\n        card.effects = !card.effects ? [] : card.effects.map(fx => this.clone(fx));\r\n        return card;\r\n    }\r\n\r\n    static sortRandom(cards) {\r\n        return cards.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    static mulligan(game, task) {\r\n        task.choice = {};\r\n        if (!task.choice) {\r\n            return this.addTaskFirst({ id: this.popup.name, task, text: 'Do you want to do a mulligan ?', choices: [{ id: 'yes', text: 'yes' }, { text: 'no' }] });\r\n        } else {\r\n            let tasks = [];\r\n            if (task.choice.id === 'yes') {\r\n                game.player1.deck = this.sortRandom(game.player1.deck.concat(game.player1.hand));\r\n                const removeIds = game.player1.hand.map(x => x.index);\r\n                game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n                game.player1.hand = [];\r\n\r\n                for (let i = 0; i < this.handStartLength; i++) \r\n                    tasks.push({ id: this.spawnOrMove.name, from: this.locationDeck, to: this.locationHand, isPlayer1: true });\r\n            }\r\n            \r\n            tasks = tasks.concat(this.addShielsAndBase(game));\r\n            tasks.push({ id: this.nextTurn.name, isPlayer1: game.isPlayer1 });\r\n            this.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static addShielsAndBase(game){\r\n        let tasks = [];\r\n        \r\n        for (let i = 0; i < this.shieldStartLength; i++) {\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: true });\r\n            tasks.push({ id: this.move.name, from: this.locationDeck, to: this.locationShield, isPlayer1: false });\r\n        }\r\n\r\n        game.player1.base = [this.createCard('EXB-001')];\r\n        game.player2.base = [this.createCard('EXB-001')];\r\n\r\n        return tasks;\r\n    }\r\n}\r\n\r\nexport default setup;\r\n","class popup {\r\n\r\n    static popup(game, task) {\r\n        if (!game.popup || !game.popup.task || (!game.popup.task.cardChoice && !game.popup.task.choice)) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        } \r\n        \r\n        this.deletePopup();\r\n    }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.cardChoice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n    }\r\n}\r\n\r\n\r\nexport default popup;\r\n","\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass tasks {    \r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1\r\n                : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1\r\n                    : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = isPlayer1 ? game.player2 : game.player1;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            if(!this[task.id])\r\n                throw new Error(`Can't handle this tasks : ${JSON.stringify(task)}`);\r\n            const result = this[task.id](game, task, player, opponent);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? this.delay : task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (this.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n    \r\n    static addTask(task) { return this.addTasks[task]; }\r\n    static addTasks(tasks) {\r\n        this.needTaskEndRefresh = true;\r\n        this.game.tasks = this.game.tasks.concat(tasks);\r\n        return {};\r\n    }\r\n\r\n    static addTaskFirst(task) { return this.addTasksFirst([task]); }\r\n    static addTasksFirst(tasks) {\r\n        this.game.tasks = tasks.concat(this.game.tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        //game.endRefresh();\r\n        this.needTaskEndRefresh = false;\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        this.cardHighlight = [];\r\n\r\n        this.refreshFieldAndHand(game, game.player1);\r\n        this.refreshFieldAndHand(game, game.player2);\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;\r\n","class array {   \r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n}\r\n\r\n\r\nexport default array;\r\n","class turn {\r\n    \r\n    static nextTurn() { //game, task, player, opponent\r\n        /*\r\n        const cards = player.field.filter(x => x.effects && x.effects.find(y => y.trigger === this.effectsEnd));\r\n        let tasks = [];\r\n        cards.forEach(card => {\r\n            tasks.push({\r\n                id: 'this.applyEffect.name',\r\n                card1: card,\r\n                trigger: this.effectsEnd\r\n            });\r\n        });\r\n\r\n        //tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: player.isPlayer1 });\r\n\r\n        game.isPlayer1 = !game.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n        const newPlayer = opponent;\r\n\r\n        tasks = tasks.concat([\r\n            { id: 'gameTask.taskTitleShow.name', value: 'New turn for player ' + playerId, isPlayer1: game.isPlayer1, delay: true },\r\n            { id: 'gameTask.taskMoveAndShowCenter.name', isPlayer1: this.isPlayer1, from: this.locationDeck, to: this.locationHand }\r\n        ]);\r\n\r\n        //effects.removeOneTurnEffect(global.game.cards);\r\n        if (newPlayer.resourcesMax < 10)\r\n            newPlayer.resourcesMax += 1;\r\n\r\n        newPlayer.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        \r\n        game.cards.forEach(card => card.selectable = false);\r\n\r\n        newPlayer.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n\r\n        const baseText = newPlayer.base.length > 0 ? newPlayer.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${playerId}, ${newPlayer.resourcesAvailable}re, ${newPlayer.shield.length}sh, ${baseText}ba`);\r\n        */\r\n    }\r\n}\r\n\r\n\r\nexport default turn;\r\n","\r\nimport positioner from './positioner';\r\nimport cardMove from './cardMove';\r\nimport refresh from './refresh';\r\nimport setup from './setup';\r\nimport popup from './popup';\r\nimport tasks from './tasks';\r\nimport array from './array';\r\nimport turn from './turn';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass game {\r\n    static game = null;\r\n    static index = 1;\r\n    static delay = 500;\r\n    static needTaskEndRefresh;\r\n    static cardHighlight = [];\r\n    static isStart;\r\n\r\n    static setup(width, height, cards, decklistPlayer1, decklistPlayer2) {\r\n        this.cards = cards.cards;\r\n        this.game = { cards: [], tasks: [{ id: 'setupGame' }], cardList: cards.cards, decklistPlayer1, decklistPlayer2 };\r\n        this.addFunction([tasks, array, popup, setup, positioner, turn, refresh, cardMove], this);\r\n        this.game.grid = this.createGrid(width, height);\r\n        this.continue(this.game);\r\n        this.isStart = true;\r\n        return this.game;\r\n    }\r\n\r\n    static continue(game) {\r\n        if (this.isStart) {\r\n            this.addTaskFirst({ id: this.mulligan.name });\r\n            this.isStart = false;\r\n        }\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static playCard(game, card1, card2, drop) {\r\n        return game;\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.popup.task.choice = choice;\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.popup.task.cardChoice = card;\r\n        return game;\r\n    }\r\n\r\n    static endTurn(game, card1, card2, drop) {\r\n        return game;\r\n    }\r\n\r\n\r\n    /*\r\n\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        if (cardUnit.link.includes('['))\r\n            return cardUnit.link.includes(cardPilot.name);\r\n        else {\r\n            const targetStr = cardUnit.link.replace('(', '').replace(')', '');\r\n            return cardPilot.attribute.includes(targetStr);\r\n        }\r\n    }\r\n\r\n    static destroyUnit(card1, delay = true) {\r\n        card1.dead = true;\r\n        return [\r\n            { id: gameTask.taskApplyEffect.name, card1, trigger: effects.ondestroyed },\r\n            { id: gameTask.taskMove.name, delay, card1, to: this.locationTrash, isPlayer1: card1.isPlayer1 }\r\n        ];\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Victory' : 'Defeat';\r\n        alert(message);\r\n        return { end: true };\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n        */\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static addFunction(cla, obj) {\r\n        const ignore = ['length', 'name', 'prototype'];\r\n        cla.forEach(c => {\r\n            Object.getOwnPropertyNames(c).forEach(method => {\r\n                if (!ignore.includes(method))\r\n                    if (obj[method]) \r\n                        throw new Error(`cette fonction existe deja : ${c.name}.${method}`)\r\n                    else\r\n                        obj[method] = c[method];\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    static test(message) {\r\n        alert(message);\r\n    }\r\n}\r\n\r\n\r\nexport default game;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow circle15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine circle15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow circle15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute circle10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine circle15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=407d3193&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"407d3193\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative cursorHand parentHover\",staticStyle:{\"width\":\"400px\",\"height\":\"340px\"},on:{\"click\":function($event){return _vm.$emit('click', _vm.deck)}}},[_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(-15deg)\",\"left\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardLeft\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card2 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(15deg)\",\"right\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardRight\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card3 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(0deg)\",\"left\":\"25%\",\"height\":\"82%\",\"top\":\"30px\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card1 + '.webp')}})]),_c('div',{staticClass:\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter circle15px\",staticStyle:{\"width\":\"40%\",\"top\":\"65%\",\"left\":\"30%\"},attrs:{\"id\":\"title\"}},[_vm._v(\" \"+_vm._s(_vm.deck.name)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div @click=\"$emit('click', deck)\" class=\"relative cursorHand parentHover\"\r\n        style=\"width:400px; height:340px;\">\r\n        <div id=\"cardLeft\" style=\"width:50%; transform: rotate(-15deg); left:30px; height: 82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card2 + '.webp')\">\r\n        </div>\r\n        <div id=\"cardRight\" style=\"width:50%; transform: rotate(15deg); right:30px; height:82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card3 + '.webp')\">\r\n        </div>\r\n        <div style=\"width:50%; transform: rotate(0deg); left:25%; height: 82%; top:30px\" class=\"bgYellow absolute\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card1 + '.webp')\">\r\n        </div>\r\n        <div id=\"title\" class=\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter circle15px\"\r\n            style=\"width:40%; top:65%; left:30%;\">\r\n            {{deck.name}}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card{\r\n    transition: left .5s ease, right .5s ease, transform .5s ease;\r\n}\r\n#title {transition: background-color .5s ease;}\r\n\r\n.parentHover:hover #cardLeft {\r\n    transform: rotate(-22deg) !important;\r\n    left:0px !important;\r\n}\r\n.parentHover:hover #cardRight {\r\n    transform: rotate(22deg) !important;\r\n    right:0px !important;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'game-deck',\r\n    props: ['deck', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deck.vue?vue&type=template&id=eb582cfe&scoped=true&\"\nimport script from \"./deck.vue?vue&type=script&lang=js&\"\nexport * from \"./deck.vue?vue&type=script&lang=js&\"\nimport style0 from \"./deck.vue?vue&type=style&index=0&id=eb582cfe&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb582cfe\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p bg2 h100p\"},[_c('div',{staticClass:\"relative w100p\",staticStyle:{\"margin-left\":\"300px\"}},_vm._l((_vm.cardData),function(card,index){return _c('decklist-card',{key:'Decklist card ' + index,attrs:{\"card\":card,\"folder\":_vm.folder},on:{\"cardclick\":function($event){return _vm.$emit('cardclick', card)},\"clickdown\":function($event){return _vm.incruise(card,-1)},\"clickup\":function($event){return _vm.incruise(card,1)}}})}),1),_c('div',{staticClass:\"m5px h100p bgWhite fontSize125em\",staticStyle:{\"width\":\"300px\"}},[_c('v-btn',{staticClass:\"w100p bg\",staticStyle:{\"height\":\"45px\"},on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(\"Back\")]),_c('div',{staticClass:\"w100p text-center\"},[_vm._v(_vm._s(_vm.resume))]),_c('deck',{staticStyle:{\"width\":\"280px\",\"height\":\"238px\"},attrs:{\"deck\":_vm.decklist,\"folder\":_vm.folder}}),_c('v-btn',{staticClass:\"w100p shine bg2\",staticStyle:{\"height\":\"45px\"},on:{\"click\":_vm.validate}},[_vm._v(\"Valider\")]),_c('br'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.list),expression:\"list\"}],staticClass:\"w100p h100p\",domProps:{\"value\":(_vm.list)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.list=$event.target.value},_vm.setList]}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import global from './global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass gameTask {\r\n    static addTasks(tasks) {\r\n        global.needTaskEndRefresh = true;\r\n        global.game.tasks = global.game.tasks.concat(tasks);\r\n    }\r\n\r\n    static addTasksFirst(tasks) {\r\n        global.game.tasks = tasks.concat(global.game.tasks);\r\n        return { stop: true };\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        if (game.end) {\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1 : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1 : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n\r\n            let tasksString = game.tasks.map(x => x.id).join(', ');\r\n            const result = this[task.id](game, task, player);\r\n            tasksString = game.tasks.map(x => x.id).join(', ');\r\n\r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay === true ? global.delay : task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (global.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        game.manager.endRefresh();\r\n        global.needTaskEndRefresh = false;\r\n        global.cardHighlight = [];\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        game.manager.refreshFieldAndHand(game.player1);\r\n        game.manager.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n        game.taskAttack = null;\r\n    }\r\n\r\n    /* ----------------------------- Tasks  */\r\n\r\n    static taskRefreshField(game, task, player) {\r\n        game.manager.refreshFieldAndHand(player);\r\n        this.taskTextHide(game, task, player);\r\n    }\r\n\r\n    static taskTitleShow(game, task, player) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task, player) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: global.clone(global.grid.centerMini.text)\r\n        };\r\n        game.textEffect.to = global.clone(game.textEffect.position);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static taskTextHide(game, task, player) {\r\n        game.refreshOnlyTextEffect = false;\r\n        if (!game.textEffect)\r\n            return;\r\n\r\n        game.textEffect.position.height = global.grid.centerMini.text.height;\r\n        game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n        game.refreshOnlyTextEffect = true;\r\n    }\r\n\r\n    static taskMove(game, task, player) {\r\n        global.spawnOrMove(player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static taskAttackPlayerAnimation(game, task, player) {\r\n        const opponent = global.getPlayer(!player.isPlayer1);\r\n        const heartPosition = opponent.isPlayer1 ? global.grid.player1Heart : global.grid.player2Heart;\r\n        task.card1.to = { ...task.card1.position, x: heartPosition.x, y: heartPosition.y };\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        const card = global.spawnOrMove(player, task.card1, task.from, task.to);\r\n        const taskCenter = { id: this.taskCardToCenter.name, card1: card, isPlayer1: task.isPlayer1, delay: true };\r\n        global.game.tasks = global.addListInArrayAfterIndex(global.game.tasks, 1, [taskCenter]);\r\n    }\r\n\r\n    static taskCardsToMiniCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? global.grid.centerMini.card1 : global.grid.centerMini.card3;\r\n        task.card1.to = global.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n\r\n        if (task.card2) {\r\n            global.spawnIfNot(task.card2);\r\n            global.cardHighlight.push(task.card2);\r\n            task.card2.to = global.clone(global.grid.centerMini.card2);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n        }\r\n\r\n        if (task.text) {\r\n            this.taskTextShow(game, task, player);\r\n        }\r\n    }\r\n\r\n    static taskCardToCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        task.card1.to = global.clone(global.grid.center);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n    }\r\n\r\n    static taskAttack(game, task, player) {\r\n        return game.manager.attack(task);\r\n    }\r\n\r\n    static taskPopup(game, task, player) {\r\n        if (!game.cardChoice && !game.choice) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        }\r\n    }\r\n\r\n    static taskPlayCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, task.regularPlay);\r\n    }\r\n\r\n    static taskPairCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.pair(cardPlayer, task.card1, task.card2);\r\n    }\r\n\r\n    static taskApplyEffect(game, task, player) {\r\n        return game.manager.applyEffect(player, task.card1, task.card2, task.trigger);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n    static ondestroyed = 'ondestroyed';\r\n    static onRefreshField = 'onRefreshField';\r\n    static end = 'end';\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static handleEffects(player, card1, card2, trigger) {\r\n        const effectsRemainings = this.getEffectsRemaining(trigger, card1, card2);\r\n        if (!effectsRemainings || effectsRemainings.length < 1)\r\n            return {};\r\n\r\n        const text = effectsRemainings.map(x => this.getEffectText(x)).join('<br>');\r\n        const isShowingEffect = global.cardHighlight.find(x => x.index === card1.index);\r\n\r\n        if (!isShowingEffect) {\r\n            global.game.tasks = [{ id: gameTask.taskCardsToMiniCenter.name, delay:true, card1, card2, text }]\r\n                .concat(global.game.tasks);\r\n            return { stop: true };\r\n        } \r\n        // else gameTask.addTasks([{ id: gameTask.taskRefreshField.name, isPlayer1: card1.isPlayer1 }]);\r\n\r\n        return this.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if (effect.effects)\r\n            result = result.concat(effect.effects.map(x => this.getEffectText(x)).join(', '));\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        card1.effectsRemaining = this.getEffectsRemaining(trigger, card1, card2);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        const opponent = global.getPlayer(!player.isPlayer1);\r\n        const needNewCard2 = ['opponentUnitHpUnderValue', 'opponentUnitRested', 'playerUnitWithAttribute', 'playerUnit'];\r\n        let card2Obj = effect.target && needNewCard2.includes(effect.target) ? null : card2;\r\n\r\n        if (effect.target && !card2Obj) {\r\n            if (effect.card2) {\r\n                card2Obj = effect.card2;\r\n            }\r\n            else if (global.game.cardChoice) {\r\n                card2Obj = global.game.cardChoice;\r\n                effect.card2 = card2Obj;\r\n                global.deletePopup();\r\n                delete (global.game.cardChoice);\r\n            }\r\n            else {\r\n                let cards = [];\r\n                if (effect.target === 'opponentUnitHpUnderValue') {\r\n                    cards = opponent.field.filter(x => global.isCardUnit(x) && x.hp < effect.value);\r\n                }\r\n                else if (effect.target === 'opponentUnitRested') {\r\n                    cards = opponent.field.filter(x => global.isCardUnit(x) && !x.active);\r\n                }\r\n                else if (effect.target === 'playerUnit') {\r\n                    cards = player.field.filter(x => global.isCardUnit(x));\r\n                }\r\n                else if(effect.target === 'playerUnitWithAttribute'){\r\n                    cards = player.field.filter(x => global.isCardUnit(x) && x.attribute.includes(effect.targetAttribute));\r\n                }\r\n                else if (effect.target === 'unit') {\r\n                    alert('cant do that');\r\n                    global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                    return { stop: true }\r\n                }\r\n\r\n                if (cards.length < 1) {\r\n                    console.log(`Can't play the effect of ${card1.name} (${effect.id}) because there is no target available`);\r\n                    return {};\r\n                }\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select available target',\r\n                    cards\r\n                }].concat(global.game.tasks);\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        return this[effect.id](player, card1, card2Obj, effect);\r\n    }\r\n\r\n    /*\r\n    -------------------------------- Effects ------------------------------------\r\n    */\r\n\r\n    static dealDamage(player, card1, card2, effect) {\r\n        card2.hp -= effect.value;\r\n        if (card2.hp < 1) {\r\n            const tasks = global.destroyUnit(card2, false);\r\n            gameTask.addTasks(tasks);\r\n        }\r\n    }\r\n\r\n    static discard(player, card1, card2, effect) {\r\n        const card = global.game.cardChoice;\r\n        if (!card) {\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n\r\n        global.deletePopup();\r\n        global.move(player, card, null, global.locationTrash);\r\n    }\r\n\r\n    static pilotToHand(player, card1, card2, effect) {\r\n        if (!card1.pair)\r\n            return;\r\n\r\n        const card = card1.pair;\r\n        delete (card1.pair);\r\n        card.isPaired = false;\r\n        global.move(player, card, null, global.locationHand);\r\n    }\r\n\r\n    static gainEffects(player, card1, card2, effect) {\r\n        card1.effects = card1.effects.concat(effect.effects);\r\n    }\r\n\r\n    static rest(player, card1, card2, effect) {\r\n        global.setActive(card2, false);\r\n    }\r\n\r\n    static repair(player, card1, card2, effect) {\r\n        const card = card2 ? card2 : card1;\r\n        card.hp = Math.min(card.hp + effect.value, card.hpMax);\r\n    }\r\n\r\n    static get1ShieldToHand(player, card1, card2, effect) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card = player.shield.splice(0, 1)[0];\r\n        const text = 'Get one shield to hand';\r\n        card.location = player.positions.shield.location;\r\n        gameTask.addTasks([{\r\n            id: gameTask.taskMove.name,\r\n            card1: card,\r\n            to: global.locationHand,\r\n            isPlayer1: player.isPlayer1\r\n        }]);\r\n        global.logEffect(effect, text);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(player, card1, card2, effect) {\r\n        if (!global.game.cardChoice) {\r\n            const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        else {\r\n            const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n            player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n            global.deletePopup();\r\n        }\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(player, card1, card2, effect) {\r\n        if (player.base || card2.index)\r\n            return;\r\n\r\n        const shield = player.shield[0];\r\n        const stop = shield.level < effect.value;\r\n        if (stop)\r\n            global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n        return { stop };\r\n    }\r\n\r\n    static gainThisTurn(player, card1, card2, effect) {\r\n        const effectClone = global.clone(effect);\r\n        delete effectClone.target;\r\n        effectClone.id = effectClone.effect2;\r\n        global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n        this.applyEffect(player, card2, null, effectClone);\r\n        card2.removeEndTurn = [effectClone];\r\n    }\r\n\r\n    static incruise(player, card1, card2, effect) {\r\n        card1.ap += effect.ap;\r\n        card1.hp += effect.hp;\r\n        card1.hpMax += effect.hp;\r\n        global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationHand);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToField(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationField);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToBase(player, card1, card2, effect) {\r\n        //global.move(player, card1, null, global.locationHand);\r\n        //global.logEffect(effect, `${card1.name} is send to hand`);\r\n        card1.location = global.locationShield;\r\n        gameTask.addTasks([{ id: gameTask.taskPlayCard.name, card1: card1, zone: player.positions.field }]);\r\n        return {};\r\n    }\r\n\r\n    static placeExResource(player, card1, card2, effect) {\r\n        player.resourcesEx += effect.value;\r\n        player.resourcesAvailable += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n    }\r\n\r\n    static placeRestedResource(player, card1, card2, effect) {\r\n        player.resourcesMax += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n    }\r\n\r\n    static breach(player, card1, card2, effect) {\r\n        if (!card1.breach || card1.breach < effect.value) {\r\n            card1.breach = effect.value;\r\n            global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static highManeuver(player, card1, card2, effect) {\r\n        if (!card1.highManeuver) {\r\n            card1.highManeuver = true;\r\n            global.logEffect(effect, `${card1.name} has highManeuver`);\r\n        }\r\n    }\r\n\r\n    static deploy(player, card1, card2, effect) {\r\n        const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n        if (targets.length < 1) return;\r\n        const card = targets[0];\r\n        card.selectable = false;\r\n        card.canAttack = false;\r\n        global.move(player, card, card.location, global.locationField);\r\n        global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n        this.apply(GameGundamEffect.onplay, player, card, null);\r\n    }\r\n\r\n    static attackActiveEnnemy(player, card1, card2, effect) {\r\n        if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n            card1.attackActiveEnnemy = effect.value;\r\n            global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(player, card1, card2, effect) {\r\n        if (card1.breach) {\r\n            if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                card1.immuneAp = effect.value;\r\n                global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n    static cardHighlight = [];\r\n    static needTaskEndRefresh = false;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'empty';\r\n    static locationTrash = 'trash';\r\n    static locationDeck = 'deck';\r\n    static locationShield = 'shield';\r\n    static locationHand = 'hand';\r\n    static locationField = 'field';\r\n    static locationBase = 'base';\r\n    static locationResource = 'resource';\r\n    static locationPair = 'pair';\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        card.hpMax = card.hp;\r\n        card.effects = !card.effects ? [] : card.effects.map(fx=> this.clone(fx));\r\n        return card;\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = locationFrom && locationFrom!= 'pair' ? locationFrom: null;\r\n        const to = locationTo;\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if(from)\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard || (card.isTemporaryCard && locationTo === this.locationField) )\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n        card.location = locationTo;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = cardPilot.location;\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        if(cardUnit.link.includes('['))\r\n            return cardUnit.link.includes(cardPilot.name);\r\n        else{\r\n            const targetStr = cardUnit.link.replace('(','').replace(')','');\r\n            return cardPilot.attribute.includes(targetStr);\r\n        }\r\n    }\r\n\r\n    static destroyUnit(card1, delay =true) {\r\n        card1.dead = true;\r\n        return [\r\n            { id: gameTask.taskApplyEffect.name, card1, trigger: effects.ondestroyed },\r\n            { id: gameTask.taskMove.name, delay, card1, to: this.locationTrash, isPlayer1: card1.isPlayer1 }\r\n        ];\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n        return {end:true};\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        // grid.field.cardHeightPercent = 0.54;\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6, grid.field.cardHeightPercent);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width: width - (2 * grid.x1), height: height - (2 * grid.y1), location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = 5; // (height - (grid.centerMini.card1.height * 1)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.card3 = { ...grid.centerMini.card1, x: grid.centerMini.card1.x + (grid.centerMini.card1.width / 2) };\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        grid.player1Heart = {x: width/2, y:height};\r\n        grid.player2Heart = {x: width/2, y:0};\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = global.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!global.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n        //let originXCenter = originX + ((width - (maxSize.width * maxSize.wrapCut))/2);\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n/*\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n*/\r\n\r\n\r\nexport default positioner;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute\",style:({ width: _vm.card.position.width + 'px', top: _vm.card.position.y + 'px', left: _vm.card.position.x + 'px' })},[_c('img',{staticClass:\"w100p\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"click\":function($event){return _vm.$emit('cardclick', _vm.card)}}}),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgRedHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickdown', _vm.card)}}},[_vm._v(\"-\")]):_vm._e(),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgGreenHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickup', _vm.card)}}},[_vm._v(\"+\")]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"absolute\"\r\n        :style=\"{ width: card.position.width + 'px', top: card.position.y + 'px', left: card.position.x + 'px' }\">\r\n        <img class=\"w100p\" style=\"object-fit: cover;\" :src=\"require('@/assets/' + folder + card.id + '.webp')\"\r\n            @click=\"$emit('cardclick', card)\">\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickdown', card)\" class=\"bgRedHover absolute\" style=\"bottom:50px; width:50%\">-</v-btn>\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickup', card)\" class=\"bgGreenHover absolute\" style=\"bottom:50px; width:50%\">+</v-btn>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    name: 'decklist-card',\r\n    components: {},\r\n    props: ['card', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckListCard.vue?vue&type=template&id=2de2b056&\"\nimport script from \"./deckListCard.vue?vue&type=script&lang=js&\"\nexport * from \"./deckListCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"w100p bg2 h100p\">\r\n        <div class=\"relative w100p\" style=\"margin-left:300px\">\r\n            <decklist-card v-for=\"(card, index) in cardData\" :key=\"'Decklist card ' + index\" :card=\"card\"\r\n                :folder=\"folder\" @cardclick=\"$emit('cardclick', card)\" @clickdown=\"incruise(card,-1)\" @clickup=\"incruise(card,1)\">\r\n            </decklist-card>\r\n        </div>\r\n        <div style=\"width: 300px;\" class=\"m5px h100p bgWhite fontSize125em\">\r\n            <v-btn class=\"w100p bg\" style=\"height:45px\" @click=\"$emit('cancel')\">Back</v-btn>\r\n            <div class=\"w100p text-center\">{{ resume }}</div>\r\n            <deck :deck=\"decklist\" :folder=\"folder\" style=\"width:280px; height:238px\"> </deck>\r\n            <v-btn class=\"w100p shine bg2\" style=\"height:45px\" @click=\"validate\">Valider</v-btn>\r\n            <br>\r\n            <textarea class=\"w100p h100p\" v-model=\"list\" @input=\"setList\">\r\n        </textarea>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport positioner from './scripts/positioner';\r\nimport decklistCard from './deckListCard.vue';\r\nimport deck from './deck';\r\n\r\nexport default {\r\n    name: 'deck-list',\r\n    components: { deck, decklistCard },\r\n    props: ['decklist', 'folder', 'cardlist'],\r\n    data: () => ({\r\n        list: '',\r\n        resume: '',\r\n        listCorrect: '',\r\n        cardData: null,\r\n        stopRefresh: false\r\n    }),\r\n    mounted() {\r\n        this.list = this.decklist.list.split(',').join('\\n');\r\n        this.refresh();\r\n    },\r\n    methods: {\r\n        validate() {\r\n            this.$emit('validate', { list: this.listCorrect });\r\n        },\r\n        refresh() {\r\n            const result = [];\r\n            const resultText = [];\r\n            const cards = this.list.split('\\n');\r\n            const listCorrect = [];\r\n            let index=0;\r\n\r\n            cards.forEach(line => {\r\n                index+= line.length;\r\n                let info = line.split('x');\r\n                let quantity = parseInt(info[0]);\r\n                if (info.length < 2 || isNaN(quantity) || quantity < 1) {\r\n                    resultText.push(line);\r\n                }\r\n                else {\r\n                    const id = this.getId(info[1]);\r\n                    const card = this.cardlist?.find(x => x.id == id);\r\n\r\n                    if (card) {\r\n                        result.push({ id, quantity, buttons:quantity===1 });\r\n                        listCorrect.push(`${quantity}x${id}`);\r\n                        resultText.push(`${quantity}x ${id} ${card.name}`);\r\n                        if(!line.includes(' ')){\r\n                            this.list = this.insertStringAt(this.list, index, ' ' + card.name + '\\n');\r\n                            index+= 2 + card.name.length;\r\n                        }\r\n                    } \r\n                }\r\n\r\n            });\r\n\r\n            const ratio = 107 / 200;\r\n            positioner.getWrapMaxPositions(this.$vuetify.breakpoint.width - 310, this.$vuetify.breakpoint.height - 10, result, ratio);\r\n            result.forEach(card => {\r\n                for (let i = 1; i < card.quantity; i++) {\r\n                    result.push({ \r\n                        id: card.id, \r\n                        buttons: i === card.quantity-1,\r\n                        position: { ...card.position, y: card.position.y + (i * 0.06 * card.position.height) } });\r\n                }\r\n            });\r\n\r\n            this.resume = `${result.length} cards`;\r\n            this.listCorrect = listCorrect.join(',');\r\n            this.cardData = result;\r\n        },\r\n        getId(str) {\r\n            return str.trim().split(' ')[0];\r\n        },\r\n        setList() {\r\n            if (this.stopRefresh)\r\n                return;\r\n            this.stopRefresh = true;\r\n            this.refresh();\r\n            this.stopRefresh = false;\r\n        },\r\n        incruise(card, pitch){\r\n            const index = this.list.indexOf(card.id);\r\n            const quantity = parseInt(this.list.charAt(index-2))+pitch;\r\n            this.list = this.insertStringAt(this.list, index-2, quantity);\r\n            this.setList();\r\n        },\r\n        insertStringAt(content, index, str){\r\n            return content.substring(0, index) + str + content.substring(index+1);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckList.vue?vue&type=template&id=29d22ed5&\"\nimport script from \"./deckList.vue?vue&type=script&lang=js&\"\nexport * from \"./deckList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p mask h100p\" :key=\"refreshG\">\r\n\r\n        <!-- DeckList Show-->\r\n        <deck-list v-if=\"decklistShow\" :decklist=\"decklistShow\" :cardlist=\"cardList\" folder=\"Gundam/cards/\"\r\n            style=\"top:50px\" @cardclick=\"showCardDeckList\" @cancel=\"showDeckList(null)\" @validate=\"selectDeckList\">\r\n        </deck-list>\r\n\r\n        <!-- DeckLists -->\r\n        <div v-if=\"!game\">\r\n            <h2>Select deck for the {{ decklistPlayer1 ? 'opponent' : 'player' }}</h2>\r\n            <div class=\"flex flex-wrap flex-space-around fontSize32\">\r\n                <deck v-for=\"(deck, index) in deckList\" :key=\"'Deck' + index\" :deck=\"deck\" folder=\"Gundam/cards/\"\r\n                    @click=\"showDeckList(deck)\">\r\n                </deck>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), bg: box.zone.endsWith('0'), fontSize075em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 'locationHand'\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n         -->\r\n\r\n        <span v-if=\"game\">\r\n            <!-- Drag and drop field-->\r\n            <div class=\"absolute bg2\" :style=\"getFieldStyleObj(game.grid.halfPlayer1)\">\r\n            </div>\r\n            <div class=\"absolute bg\" :style=\"getFieldStyleObj(game.grid.halfPlayer2)\">\r\n            </div>\r\n\r\n            <img class=\"w100p, absolute\" :style=\"{ ...getFieldStyleObj(game.grid.centerZone), 'object-fit': 'cover' }\"\r\n                :src=\"require('@/assets/Gundam/centerZone.png')\" />\r\n\r\n            <!-- Player 1 -->\r\n            {{ game.player1.deckIcon }}\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Base), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.baseIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Shield), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.shieldIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Deck), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.deckIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player1Trash), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player1.trashIcon)\" />\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player1Base.text)\">\r\n                Base\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player1Shield.text)\">\r\n                Shield {{ game.player1.shield.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player1Deck.text)\">\r\n                Deck {{ game.player1.deck.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player1Trash.text)\">\r\n                Trash {{ game.player1.trash.length }}\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player1Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player1Field)\">\r\n            </div>\r\n\r\n            <!-- Player 2-->\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Base), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.baseIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Shield), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.shieldIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Deck), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.deckIcon)\" />\r\n            <img class=\"absolute\" :style=\"{ ...getFieldStyleObj(game.grid.player2Trash), 'object-fit': 'contain' }\"\r\n                :src=\"require('@/assets/Gundam/' + game.player2.trashIcon)\" />\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player2Base.text)\">\r\n                Base\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player2Shield.text)\">\r\n                Shield {{ game.player2.shield.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player2Deck.text)\">\r\n                Deck {{ game.player2.deck.length }}\r\n            </div>\r\n            <div class=\"absolute fontSize05em text-center\" :style=\"getFieldStyleObj(game.grid.player2Trash.text)\">\r\n                Trash {{ game.player2.trash.length }}\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.player2Hand)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.player2Field)\">\r\n            </div>\r\n\r\n            <!-- Highlight and TextZone-->\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.textZone)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardCenter)\">\r\n            </div>\r\n            <div class=\"absolute bgYellow hide\" :style=\"getFieldStyleObj(game.grid.highlightCardLeft)\">\r\n            </div>\r\n            <div class=\"absolute bgRed hide\" :style=\"getFieldStyleObj(game.grid.highlightCardRight)\">\r\n            </div>\r\n\r\n            <div class=\"absolute bgYellow circle10px\" :style=\"getFieldStyleObj(game.grid.rightButton)\">\r\n                <v-btn target=\"_blank\"\r\n                    :class=\"{ bg2: true, shine: !freeze, fontSize075em: true, w100p: true, h100p: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    <span v-if=\"game.grid.rightButton.width > 50\">End Turn</span><span v-else>End</span>\r\n                </v-btn>\r\n            </div>\r\n\r\n            <div class=\"absolute\" :style=\"getFieldStyleObj(game.grid.leftButton)\">\r\n                <v-btn target=\"_blank\" :class=\"{ bg: true, fontSize075em: true, w100p: true, h100p: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    Logs\r\n                </v-btn>\r\n            </div>\r\n        </span>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game && false\">\r\n            <div class=\"bgYellow absolute circle10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize075em: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:13\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style>\r\nhtml {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameGundam from './gundam/game';\r\nimport gameCard from './card';\r\nimport deck from './deck';\r\nimport deckList from './deckList';\r\nimport cards from '../data/gundamCards.json';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard, deck, deckList },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n        center: null,\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        decklistShow: null,\r\n        deckList: []\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        //this.center = positioner.getCardSize(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, 1, 1);\r\n        this.cardList = cards.cards;\r\n        this.decklistPlayer1 = cards.decklist[3].list;\r\n        this.decklistPlayer2 = cards.decklist[3].list;\r\n        this.start();\r\n    },\r\n    methods: {\r\n        showDeckList(decklist) {\r\n            this.decklistShow = decklist;\r\n        },\r\n        selectDeckList(decklist) {\r\n            if (!this.decklistPlayer1)\r\n                this.decklistPlayer1 = decklist.list;\r\n            else {\r\n                this.decklistPlayer2 = decklist.list;\r\n                this.start();\r\n            }\r\n            this.decklistShow = null;\r\n        },\r\n        start() {\r\n            this.game = gameGundam.setup(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, cards, this.decklistPlayer1, this.decklistPlayer2);\r\n            this.continue();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameGundam.endTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameGundam.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameGundam.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameGundam.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gameGundam.delay;\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gameGundam.delay;\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gameGundam.delay;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            }\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCardDeckList(card) {\r\n            const newCard = { ...card };\r\n            newCard.position = { ...card.position, x: card.position.x + 300 };\r\n            this.showCard(newCard);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.center : this.center;\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gameGundam.delay);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if (this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if (!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=591fcce4&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=591fcce4&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? {\r\n                x: this.pxStringToInt(element.style.left),\r\n                y: this.pxStringToInt(element.style.top),\r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) : anim.to;\r\n            animationsArray.push({ element, from, to });\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071,\n\t\"./empty.webp\": 8621,\n\t\"./empty2.webp\": 66626\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./CardsGundam.png\": 4859,\n\t\"./EncyclopedieGundam.png\": 15831,\n\t\"./GundamEncyclopedie.png\": 94627,\n\t\"./GundamLogo.jpg\": 30262,\n\t\"./GundamLogo2.png\": 68499,\n\t\"./cards/EXB-001.webp\": 43631,\n\t\"./cards/EXBP-001.webp\": 69411,\n\t\"./cards/GD01-004.webp\": 19862,\n\t\"./cards/GD01-004_p1.webp\": 91962,\n\t\"./cards/GD01-005.webp\": 80632,\n\t\"./cards/GD01-008.webp\": 13406,\n\t\"./cards/GD01-009.webp\": 39343,\n\t\"./cards/GD01-011.webp\": 57985,\n\t\"./cards/GD01-013.webp\": 25257,\n\t\"./cards/GD01-015.webp\": 29370,\n\t\"./cards/GD01-016.webp\": 24272,\n\t\"./cards/GD01-018.webp\": 62998,\n\t\"./cards/GD01-026.webp\": 83759,\n\t\"./cards/GD01-026_p1.webp\": 58145,\n\t\"./cards/GD01-028.webp\": 21495,\n\t\"./cards/GD01-030.webp\": 94485,\n\t\"./cards/GD01-031.webp\": 38537,\n\t\"./cards/GD01-034.webp\": 63515,\n\t\"./cards/GD01-040.webp\": 66732,\n\t\"./cards/GD01-041.webp\": 70958,\n\t\"./cards/GD01-068.webp\": 46040,\n\t\"./cards/GD01-070.webp\": 45504,\n\t\"./cards/GD01-070_p1.webp\": 85993,\n\t\"./cards/GD01-072.webp\": 8042,\n\t\"./cards/GD01-075.webp\": 52313,\n\t\"./cards/GD01-076.webp\": 85876,\n\t\"./cards/GD01-077.webp\": 97867,\n\t\"./cards/GD01-081.webp\": 18546,\n\t\"./cards/GD01-088.webp\": 14026,\n\t\"./cards/GD01-088_p1.webp\": 68437,\n\t\"./cards/GD01-089.webp\": 27418,\n\t\"./cards/GD01-091.webp\": 81708,\n\t\"./cards/GD01-097.webp\": 34893,\n\t\"./cards/GD01-099.webp\": 49483,\n\t\"./cards/GD01-100.webp\": 93330,\n\t\"./cards/GD01-100_p1.webp\": 92990,\n\t\"./cards/GD01-105.webp\": 67155,\n\t\"./cards/GD01-107.webp\": 66642,\n\t\"./cards/GD01-107_p1.webp\": 60768,\n\t\"./cards/GD01-117.webp\": 79955,\n\t\"./cards/GD01-118.webp\": 70779,\n\t\"./cards/GD01-118_p1.webp\": 57707,\n\t\"./cards/GD01-120.webp\": 90273,\n\t\"./cards/GD01-124.webp\": 8279,\n\t\"./cards/R-001.webp\": 96567,\n\t\"./cards/R-002.webp\": 38857,\n\t\"./cards/ST01-001.webp\": 16906,\n\t\"./cards/ST01-001_p1.webp\": 6864,\n\t\"./cards/ST01-002.webp\": 23582,\n\t\"./cards/ST01-005.webp\": 7162,\n\t\"./cards/ST01-007.webp\": 56694,\n\t\"./cards/ST01-008.webp\": 70791,\n\t\"./cards/ST01-010.webp\": 45022,\n\t\"./cards/ST01-011.webp\": 56581,\n\t\"./cards/ST01-011_p1.webp\": 1978,\n\t\"./cards/ST01-012.webp\": 13866,\n\t\"./cards/ST01-013.webp\": 79915,\n\t\"./cards/ST01-015.webp\": 51310,\n\t\"./cards/ST01-016.webp\": 86882,\n\t\"./cards/ST02-001.webp\": 58864,\n\t\"./cards/ST02-001_p1.webp\": 76074,\n\t\"./cards/ST02-002.webp\": 23941,\n\t\"./cards/ST02-005.webp\": 55045,\n\t\"./cards/ST02-010.webp\": 99834,\n\t\"./cards/ST02-012.webp\": 57160,\n\t\"./cards/ST02-013.webp\": 55214,\n\t\"./cards/ST02-015.webp\": 34078,\n\t\"./cards/ST03-007.webp\": 82235,\n\t\"./cards/ST03-008.webp\": 55340,\n\t\"./cards/ST03-011.webp\": 56486,\n\t\"./cards/ST03-011_p1.webp\": 92329,\n\t\"./cards/ST03-016.webp\": 77816,\n\t\"./cards/ST04-001.webp\": 22859,\n\t\"./cards/ST04-001_p1.webp\": 46858,\n\t\"./cards/ST04-002.webp\": 18971,\n\t\"./cards/ST04-005.webp\": 54511,\n\t\"./cards/ST04-010.webp\": 80363,\n\t\"./cards/ST04-013.webp\": 14005,\n\t\"./cards/ST04-015.webp\": 81633,\n\t\"./cards/T-001.webp\": 32442,\n\t\"./cards/T-002.webp\": 46514,\n\t\"./cards/T-003.webp\": 88739,\n\t\"./cards/T-006.webp\": 17071,\n\t\"./cards/empty.webp\": 8621,\n\t\"./cards/empty2.webp\": 66626,\n\t\"./centerZone.png\": 17852,\n\t\"./deck1.png\": 69877,\n\t\"./deck2.png\": 85350,\n\t\"./deck3.png\": 58251,\n\t\"./deck4.png\": 13665,\n\t\"./deck5.png\": 35931,\n\t\"./deck6.png\": 23094,\n\t\"./gundam.png\": 63111,\n\t\"./gundam2.png\": 98815,\n\t\"./head.png\": 83639,\n\t\"./wingzero2.gif\": 70898\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73890;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXB-001.webp\": 43631,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-004.webp\": 19862,\n\t\"./Gundam/cards/GD01-004_p1.webp\": 91962,\n\t\"./Gundam/cards/GD01-005.webp\": 80632,\n\t\"./Gundam/cards/GD01-008.webp\": 13406,\n\t\"./Gundam/cards/GD01-009.webp\": 39343,\n\t\"./Gundam/cards/GD01-011.webp\": 57985,\n\t\"./Gundam/cards/GD01-013.webp\": 25257,\n\t\"./Gundam/cards/GD01-015.webp\": 29370,\n\t\"./Gundam/cards/GD01-016.webp\": 24272,\n\t\"./Gundam/cards/GD01-018.webp\": 62998,\n\t\"./Gundam/cards/GD01-026.webp\": 83759,\n\t\"./Gundam/cards/GD01-026_p1.webp\": 58145,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-030.webp\": 94485,\n\t\"./Gundam/cards/GD01-031.webp\": 38537,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-068.webp\": 46040,\n\t\"./Gundam/cards/GD01-070.webp\": 45504,\n\t\"./Gundam/cards/GD01-070_p1.webp\": 85993,\n\t\"./Gundam/cards/GD01-072.webp\": 8042,\n\t\"./Gundam/cards/GD01-075.webp\": 52313,\n\t\"./Gundam/cards/GD01-076.webp\": 85876,\n\t\"./Gundam/cards/GD01-077.webp\": 97867,\n\t\"./Gundam/cards/GD01-081.webp\": 18546,\n\t\"./Gundam/cards/GD01-088.webp\": 14026,\n\t\"./Gundam/cards/GD01-088_p1.webp\": 68437,\n\t\"./Gundam/cards/GD01-089.webp\": 27418,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-097.webp\": 34893,\n\t\"./Gundam/cards/GD01-099.webp\": 49483,\n\t\"./Gundam/cards/GD01-100.webp\": 93330,\n\t\"./Gundam/cards/GD01-100_p1.webp\": 92990,\n\t\"./Gundam/cards/GD01-105.webp\": 67155,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/GD01-107_p1.webp\": 60768,\n\t\"./Gundam/cards/GD01-117.webp\": 79955,\n\t\"./Gundam/cards/GD01-118.webp\": 70779,\n\t\"./Gundam/cards/GD01-118_p1.webp\": 57707,\n\t\"./Gundam/cards/GD01-120.webp\": 90273,\n\t\"./Gundam/cards/GD01-124.webp\": 8279,\n\t\"./Gundam/cards/R-001.webp\": 96567,\n\t\"./Gundam/cards/R-002.webp\": 38857,\n\t\"./Gundam/cards/ST01-001.webp\": 16906,\n\t\"./Gundam/cards/ST01-001_p1.webp\": 6864,\n\t\"./Gundam/cards/ST01-002.webp\": 23582,\n\t\"./Gundam/cards/ST01-005.webp\": 7162,\n\t\"./Gundam/cards/ST01-007.webp\": 56694,\n\t\"./Gundam/cards/ST01-008.webp\": 70791,\n\t\"./Gundam/cards/ST01-010.webp\": 45022,\n\t\"./Gundam/cards/ST01-011.webp\": 56581,\n\t\"./Gundam/cards/ST01-011_p1.webp\": 1978,\n\t\"./Gundam/cards/ST01-012.webp\": 13866,\n\t\"./Gundam/cards/ST01-013.webp\": 79915,\n\t\"./Gundam/cards/ST01-015.webp\": 51310,\n\t\"./Gundam/cards/ST01-016.webp\": 86882,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-001_p1.webp\": 76074,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./Gundam/cards/ST03-007.webp\": 82235,\n\t\"./Gundam/cards/ST03-008.webp\": 55340,\n\t\"./Gundam/cards/ST03-011.webp\": 56486,\n\t\"./Gundam/cards/ST03-011_p1.webp\": 92329,\n\t\"./Gundam/cards/ST03-016.webp\": 77816,\n\t\"./Gundam/cards/ST04-001.webp\": 22859,\n\t\"./Gundam/cards/ST04-001_p1.webp\": 46858,\n\t\"./Gundam/cards/ST04-002.webp\": 18971,\n\t\"./Gundam/cards/ST04-005.webp\": 54511,\n\t\"./Gundam/cards/ST04-010.webp\": 80363,\n\t\"./Gundam/cards/ST04-013.webp\": 14005,\n\t\"./Gundam/cards/ST04-015.webp\": 81633,\n\t\"./Gundam/cards/T-001.webp\": 32442,\n\t\"./Gundam/cards/T-002.webp\": 46514,\n\t\"./Gundam/cards/T-003.webp\": 88739,\n\t\"./Gundam/cards/T-006.webp\": 17071,\n\t\"./Gundam/cards/empty.webp\": 8621,\n\t\"./Gundam/cards/empty2.webp\": 66626,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","decklistShow","selectDeckList","style","getFieldStyleObj","game","grid","halfPlayer2","player1Shield","player1Deck","text","player1","deck","length","player1Trash","trash","player1Hand","player1Field","player2Shield","player2Deck","player2","player2Trash","player2Hand","player2Field","textZone","highlightCardCenter","highlightCardLeft","highlightCardRight","rightButton","class","shine","fontSize075em","w100p","h100p","getFieldStyle","textEffect","position","domProps","_e","card","selectable","$event","showCard","onDragOver","left","choice","positioner","static","screenWidth","screenHeight","border2","border","height","boxHeight","centerZone","x","y","zone","location","show","heightQuarter","gundamHead","textHeight","iconHeight","player1TextLine","player1DeckLine","getDeckX","player1Base","locationBase","locationShield","locationDeck","locationTrash","player2TextLine","player2DeckLine","player2Base","leftButton","halfPlayer1","locationHand","locationField","getCardSize","index","isPlayer1","gundamSize","value","result","box","base","createZone","x15","y8","x0","y7","shield","y9","y6","y10","y5","y11","y4","resource","y12","y3","locationResource","hand","y13","x1","y0","field","x14","x2","cardHeightPercent","y1","y2","p1","p2","concat","centerMini","cards","useZoneSize","wrapCut","zoneHeight","cardSize","forEach","degree","active","bgposition","to","getWrapPosition","cardHighlight","find","zindex","pair","getPairPosition","clone","rotation","count","desiredWidth","desiredHeight","total","getCardPositionXY","mid","Math","floor","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","totalWidth","elementWidth","sizeWidth","ratio","margin","maxSize","i","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","ceil","widthMargin","heightMargin","ratioInverted","heightDesired","widthDesired","_defineProperty","cardMove","task","player","cardSpawn","moveCard","card1","from","spawnIfNot","addIn","positions","locationFrom","locationTo","removeByIndex","splice","end","isTemporaryCard","hidestat","isPaired","move","needToRefreshAllField","includes","refresh","refreshPlayerField","resourcesAvailable","resourcesMax","baseIcon","id","shieldIcon","getIcon","deckIcon","trashIcon","positionDrag","positionOld","wait","showTitle","setup","createPlayer","decklistPlayer1","decklistPlayer2","handStartLength","addTasks","spawnOrMove","decklist","createDeck","empty","split","line","info","quantity","parseInt","cardList","Error","push","createCard","getNextIndex","sortRandom","hpMax","hp","effects","map","fx","sort","random","addTaskFirst","popup","choices","tasks","removeIds","filter","addShielsAndBase","nextTurn","shieldStartLength","cardChoice","stop","deletePopup","actionPlayer","actionOpponent","opponent","tasksString","join","JSON","stringify","delay","needTaskEndRefresh","taskEndRefresh","addTasksFirst","refreshOnlyTextEffect","refreshFieldAndHand","taskAttack","array","list","slice","turn","addFunction","createGrid","continue","isStart","mulligan","endAnimation","handleTasks","card2","drop","type","isCardPilot","isCardCommand","logs","effect","log","obj","Object","assign","cla","ignore","c","getOwnPropertyNames","method","message","alert","top","transform","cursor","$emit","absolute","folder","preventDefault","ap","dead","card3","cardData","resume","expression","target","setList","gameTask","global","manager","endRefresh","taskTextHide","getPlayer","heartPosition","player1Heart","player2Heart","taskCenter","taskCardToCenter","addListInArrayAfterIndex","destination","taskTextShow","center","attack","cardPlayer","playCard","regularPlay","applyEffect","trigger","GameGundamEffect","removeEndTurn","lost","effectsRemainings","getEffectsRemaining","getEffectText","isShowingEffect","apply","taskCardsToMiniCenter","toString","effect2","effectsRemaining","nothing","toBeRemoved","oneTurn","multiTriggers","onpair","onlink","needNewCard2","card2Obj","isCardUnit","attribute","targetAttribute","logEffect","console","taskPopup","destroyUnit","setActive","min","taskMove","getAndRemoveFirst","select","bottomCard","level","effectClone","taskPlayCard","resourcesEx","resAString","breach","highManeuver","targets","canAttack","onplay","attackActiveEnnemy","immuneAp","cardUnit","cardPilot","isLink","effectResult","handleEffects","locationPair","targetStr","replace","taskApplyEffect","ondestroyed","divide","widthB","heightB","boxbig","card6","decklistCard","listCorrect","stopRefresh","validate","resultText","isNaN","getId","cardlist","buttons","insertStringAt","getWrapMaxPositions","breakpoint","str","trim","incruise","pitch","indexOf","charAt","content","substring","gameCard","deckList","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","showDeckList","gameGundam","endTurn","refreshGame","animTextEffect","selectChoice","selectChoiceCard","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","showCardDeckList","newCard","addEvent","event","startDrag","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","fields","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridX","getGridY","getGridPlace","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","t","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","animateMultiple","animationsArray","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}