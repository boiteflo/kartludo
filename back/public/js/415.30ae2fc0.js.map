{"version":3,"file":"js/415.30ae2fc0.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\n        bgRed2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card2.x, _vm.game.grid.centerMini.card2.y,\n        _vm.game.grid.centerMini.card2.width, _vm.game.grid.centerMini.card2.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgYellow absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.text.x, _vm.game.grid.centerMini.text.y,\n        _vm.game.grid.centerMini.text.width, _vm.game.grid.centerMini.text.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"2\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 'RefreshField';\r\n    static taskTitleShow = 'TitleShow';\r\n    static taskTextShow = 'TextShow';\r\n    static taskTextHide = 'TextHide';\r\n    static taskTextDelete = 'TextDelete';\r\n    static taskCardToMiniCenter = 'CardToMiniCenter';\r\n    static taskCardToMiniCenter2 = 'CardToMiniCenter2';\r\n    static taskCardToCenter = 'CardToCenter';\r\n    static taskMove = 'Move';\r\n    static taskAttack = 'Attack';    \r\n    static taskPopup = 'Popup';    \r\n    static taskPlayCard = 'PlayCard';\r\n    static taskPlayCardWithEffect = 'PlayCardWithEffect';    \r\n    static taskPairCard = 'PairCard';\r\n    static taskPairCardWithEffect = 'PairCardWithEffect';\r\n\r\n    static addTasks(list, tasks) {\r\n        tasks.forEach(task => {\r\n            //if (!this.alreadyInclude(list, task))\r\n            list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid){\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if(task)\r\n            delete(task.delay);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        card1.effectsRemaining = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1)\r\n                return;\r\n            const card = player.shield.splice(0, 1)[0];\r\n            //const delay = global.delay;\r\n            const text = 'Get one shield to hand';\r\n            card.location = player.positions.shield.location;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskMove, card1: card, to: global.locationHand, isPlayer1: player.isPlayer1 }]);\r\n            global.logEffect(effect, text);\r\n            return {};\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            if (!global.game.cardChoice) {\r\n                const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup,\r\n                    text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                    cards,\r\n                    select: 'top2DeckCard1Top1BottomSelect'\r\n                }].concat(global.game.tasks);\r\n                return { stop: true }\r\n            }\r\n            else {\r\n                const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n                player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n                delete (global.game.popup);\r\n                delete (global.game.cardChoice)\r\n                return {};\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const stop = shield.level < effect.value;\r\n            if (stop)\r\n                global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { stop };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            gameTask.addTasks(global.game.tasks, [\r\n                { id: gameTask.taskCardToCenter, card1, isPlayer1: player.isPlayer1 },\r\n                { id: gameTask.taskMove, card1, to: global.locationHand, isPlayer1: player.isPlayer1 }\r\n            ]);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            global.move(player, card1, global.locationShield, global.locationField);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToBase') {\r\n            card1.location = player.positions.shield.location;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard, card1: card1, zone: player.positions.field }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.canAttack = false;\r\n            global.move(player, card, card.location, global.locationField);\r\n            global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n            this.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemy') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneAp') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'locationEmpty';\r\n    static locationTrash = 'locationTrash';\r\n    static locationDeck = 'locationDeck';\r\n    static locationShield = 'locationShield';\r\n    static locationHand = 'locationHand';\r\n    static locationField = 'locationField';\r\n    static locationBase = 'locationBase';\r\n    static locationResource = 'locationResource';\r\n    static locationPair = 'locationPair';\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        else if (location == this.locationPair) return 'pair';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo, ignoreRefresh);\r\n        this.spawnIfNot(cardSpawn);\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if(!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n        \r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if(!card.positon)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card.isTemporaryCard)\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo, ignoreRefresh);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        if (!ignoreRefresh) {\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2, isShowingEffect) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const task = { id: gameTask.taskPairCardWithEffect, card1: cardUnit, card2: cardPilot };\r\n        const effectResult = global.handleEffects(player, cardUnit, cardPilot, isShowingEffect, trigger, task);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Effects \r\n    static handleEffects(player, card1, card2, isShowingEffect, trigger, task) {\r\n        const effectsRemainings = effects.getEffectsRemaining(trigger, card1, card2);\r\n        const text = effectsRemainings.map(x => `${x.effect} ${x.value}`).join('<br>');\r\n        const delay = global.delay;\r\n        if (effectsRemainings && effectsRemainings.length > 0) {\r\n            if (!isShowingEffect) {\r\n                const taskShowCards = card2\r\n                    ? [\r\n                        { id: gameTask.taskCardToMiniCenter, card1: card1, isPlayer1: card1.isPlayer1 },\r\n                        { id: gameTask.taskCardToMiniCenter2, card1: card2, isPlayer1: card1.isPlayer1 }\r\n                    ]\r\n                    : [{ id: gameTask.taskCardToMiniCenter, card1: card1, isPlayer1: card1.isPlayer1 }];\r\n\r\n                gameTask.addTasks(global.game.tasks, taskShowCards.concat([{ id: gameTask.taskTextShow, delay, text }, task]));\r\n                return { stop: true };\r\n            } else\r\n                gameTask.addTasks(global.game.tasks, [\r\n                    { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n                    { id: gameTask.taskTextHide, delay },\r\n                    { id: gameTask.taskTextDelete },\r\n                ]);\r\n        }\r\n\r\n        return effects.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Tasks \r\n    static startAttackAnimation(player, opponent, attacker, target, zone, breach) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1: attacker, isPlayer1: attacker.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay, card1: target, isPlayer1: target.isPlayer1 },\r\n            { id: gameTask.taskAttack, player, opponent, attacker, target, delay, zone, breach }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterThenBackToSquareOne(card1, card2) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay * 2, card1: card2, isPlayer1: card2.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card2.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenBackToSquareOne(card1, text) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextShow, delay: delay * 2, text },\r\n            { id: gameTask.taskTextHide },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1, delay },\r\n            { id: gameTask.taskTextDelete },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenDeleteIt(card1, text) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextShow, delay: delay * 2, text },\r\n            { id: gameTask.taskTextHide },\r\n            { id: gameTask.taskMove, delay, card1, to: global.locationTrash, isPlayer1: card1.isPlayer1, ignoreRefresh: true },\r\n            { id: gameTask.taskTextDelete },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card1) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 }]);\r\n    }\r\n\r\n    static moveCardToCenterThenBackToSquareOne(card1) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            ]);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width, height, location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = (height - (grid.centerMini.card1.height * 1.5)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n            card.zindex = card.pair ? 2 : 1;\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawnOrMove(global.game.player1, null, global.locationDeck, global.locationHand, true);\r\n            global.spawnOrMove(global.game.player2, null, global.locationDeck, global.locationHand, true);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        global.delay = manager.getAnimDuration();\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        const player = global.isPlayer1 ? game.player1 : game.player2;\r\n        const card = player.deck[0];\r\n        const delay = global.delay;\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskRefreshField, isPlayer1: true },\r\n            { id: gameTask.taskRefreshField, isPlayer1: false },\r\n            { id: gameTask.taskTitleShow, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskMove, isPlayer1: global.isPlayer1, card1: card, from: global.locationDeck, to: global.locationHand, ignoreRefresh: true },\r\n            { id: gameTask.taskCardToCenter, isPlayer1: global.isPlayer1, card1: card, delay },\r\n            { id: gameTask.taskRefreshField, isPlayer1: global.isPlayer1, delay }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        game.manager.playCard(global.getPlayerTurn(), card1, card2, zone);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.manager.selectChoiceCard(game, card);\r\n        return game;\r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        game.manager.selectChoice(game, choice);\r\n        return game;\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks[0];// .splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n\r\n            if (task.id === gameTask.taskRefreshField) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTitleShow) {\r\n                game.showTitle = task.value;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextShow) {\r\n                game.textEffect = {\r\n                    text: task.text,\r\n                    position: global.clone(global.grid.centerMini.text)\r\n                };\r\n                game.textEffect.to = global.clone(game.textEffect.position);\r\n                game.textEffect.position.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextHide) {\r\n                if (game.textEffect) {\r\n                    game.textEffect.position.height = global.grid.centerMini.text.height;\r\n                    game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n                    game.refreshOnlyTextEffect = true;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextDelete) {\r\n                game.refreshOnlyTextEffect = false;\r\n                delete (game.textEffect);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskMove) {\r\n                global.spawnOrMove(player, task.card1, task.from, task.to, task.ignoreRefresh);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter) {\r\n                if (task.card1) {\r\n                    global.spawnIfNot(task.card1);\r\n                    task.card1.to = global.clone(global.grid.centerMini.card1);\r\n                    task.card1.to.rotation = 0;\r\n                    task.card1.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter2) {\r\n                if (task.card1) {\r\n                    global.spawnIfNot(task.card1);\r\n                    task.card1.to = global.clone(global.grid.centerMini.card2);\r\n                    task.card1.to.rotation = 0;\r\n                    task.card1.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToCenter) {\r\n                if (task.card1) {\r\n                    global.spawnIfNot(task.card1);\r\n                    task.card1.to = global.clone(global.grid.center);\r\n                    task.card1.to.rotation = 0;\r\n                    task.card1.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskAttack) {\r\n                game.manager.attack(task.player, task.opponent, task.attacker, task.target, task.zone, task.breach);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPopup) {\r\n                if (!game.cardChoice && !game.choice) {\r\n                    game.popup = task;\r\n                    return game;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPlayCard) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPlayCardWithEffect) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, true);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPairCard) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.pair(cardPlayer, task.card1, task.card2);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPairCardWithEffect) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.pair(cardPlayer, task.card1, task.card2, true);\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = global.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if(global.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable=false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, isShowingEffect) {\r\n        const noDropZone = !card2 && !zone;\r\n        if (noDropZone) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (card1.location === global.locationHand)\r\n            return this.playFromHand(player, card1, card2, zone, isShowingEffect);\r\n        else if (card1.location === global.locationField)\r\n            return this.attack(player, card1, card2, zone);\r\n        else\r\n            return this.playCard(player, card1, card2, zone, isShowingEffect, false);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone, isShowingEffect) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer || zone.location == global.locationHand) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        return this.playCard(player, card1, card2, zone, isShowingEffect, true);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect, playCost) {\r\n        let isPilot = this.isCardPilot(card1);\r\n        let isCommand = this.isCardCommand(card1);\r\n\r\n        if (this.isCardPilot(card1) && this.isCardCommand(card1) && card2) {\r\n            if (!global.game.choice) {\r\n                const choices = [{ text: 'Pilot' }, { text: 'Command' }];\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup,\r\n                    text: 'Do you want to play as pilot or command ?',\r\n                    choices\r\n                }, { id: gameTask.taskPlayCard, isPlayer1: card1.isPlayer1, card1, card2, zone }\r\n                ].concat(global.game.tasks);\r\n                return { stop: true }\r\n            } else {\r\n                isPilot = global.game.choice.text === 'Pilot';\r\n                isCommand = global.game.choice.text === 'Command';\r\n                delete (global.game.choice);\r\n                delete (global.game.popup);\r\n            }\r\n        }\r\n\r\n\r\n        if (!global.game.cards.find(x => x.index === card1.index)) {\r\n            global.game.cards.push(card1);\r\n        }\r\n\r\n        const task = { id: gameTask.taskPlayCardWithEffect, isPlayer1: card1.isPlayer1, card1, card2, zone };\r\n        const effectResult = global.handleEffects(player, card1, card2, isShowingEffect, effects.onplay, task);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        if (this.isCardUnit(card1) && player.field.length < 6) {\r\n            card1.canAttack = false;\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskMove, card1: player.base[0], to: global.locationTrash, isPlayer1: card1.isPlayer1 }]);\r\n\r\n            global.move(player, card1, card1.location, global.locationBase);\r\n            card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && card2 && this.isCardUnit(card2)) {\r\n            if (card1.pair || card2.pair || card1.isPaired || card2.isPaired) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPairCard, card1, card2 }]);\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            const effectResult = effects.apply(effects.command, player, card1, card2);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n\r\n            global.moveCardToMiniCenterWithTextThenDeleteIt(card1, global.effects.join('<br>'));\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone, breach) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            const isValidTarget = card1.attackActiveEnnemy ? card2.level < card1.attackActiveEnnemy : !card2.active;\r\n            if (!isValidTarget) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            global.startAttackAnimation(player, opponent, card1, card2, zone, breach);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            global.startAttackAnimation(player, opponent, card1, target, zone);\r\n            return;\r\n        } else {\r\n            global.setActive(card1, false);\r\n\r\n            let card = opponent.shield.splice(0, 1)[0];\r\n            const effectResult = effects.apply(effects.burst, opponent, card, card1);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            gameTask.addTasks(global.game.tasks, [\r\n                { id: gameTask.taskCardToCenter, card1: card, isPlayer1: card.isPlayer1, delay: global.delay },\r\n                { id: gameTask.taskMove, card1: card, to: global.locationTrash, isPlayer1: card.isPlayer1 },\r\n            ]);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        const delay = global.delay;\r\n\r\n        let damage = breach ? breach : attacker.ap;\r\n        if (target.immuneAp && damage < target.immuneAp)\r\n            damage = 0;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        if (attacker.immuneAp && attacker < target.immuneAp)\r\n            damage = 0;\r\n        attacker.hp -= damage;\r\n\r\n        const activeBreach = !breach && this.isCardUnit(target) && attacker.breach && target.hp < 1;\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : global.delay;\r\n            tasks.push({ id: gameTask.taskMove, delay: delayForTarget, card1: attacker, to: global.locationTrash, isPlayer1: attacker.isPlayer1 });\r\n        }\r\n        else if (!activeBreach)\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskMove, delay, card1: target, to: global.locationTrash, isPlayer1: target.isPlayer1 });\r\n        }\r\n        else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n\r\n        if (activeBreach) {\r\n            this.attack(player, attacker, null, zone, attacker.breach);\r\n        }\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.cardChoice = card;\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.choice = choice;\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 400; }\r\n    static getHandStartLength() { return 12; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.move(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.move(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        game.player1.deck = [global.createCard(\"ST02-013\")].concat(game.player1.deck);\r\n        game.player2.deck = [global.createCard(\"ST02-013\")].concat(game.player2.deck);\r\n\r\n        game.player1.shield = [global.createCard(\"ST02-013\")].concat(game.player1.shield);\r\n        game.player2.shield = [global.createCard(\"ST02-013\")].concat(game.player2.shield);\r\n\r\n        // const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        // playerOpponent.resourcesEx += 1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawnOrMove(player, card, global.locationBase, global.locationBase);\r\n        card.isTemporaryCard = true;\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        player.resourcesMax += 1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n\r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand, false, 7);\r\n        positioner.refresh(player.field, player.positions.field, false, 3);\r\n        positioner.refresh(player.base, player.positions.base, true);\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        global.game.cards = global.game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect) {\r\n        return cardHandler.play(player, card1, card2, zone, isShowingEffect);\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2, zone, breach) {\r\n        cardHandler.attackCard(player, opponent, card1, card2, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        return cardHandler.selectChoice(game, choice);\r\n    }\r\n\r\n    static pair(player, card1, card2, isShowingEffect) {\r\n        return global.pair(player, card1, card2, isShowingEffect);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=9ee1a63e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9ee1a63e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgRed2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card2.x, game.grid.centerMini.card2.y,\r\n            game.grid.centerMini.card2.width, game.grid.centerMini.card2.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgYellow absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.text.x, game.grid.centerMini.text.y,\r\n            game.grid.centerMini.text.width, game.grid.centerMini.text.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:2\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if(this.freeze)\r\n                return;\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if(this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice){\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card) \r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if(this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if(!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if(this.freeze || card.isPlayer1 !== this.game.isPlayer1  || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=070d298e&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=070d298e&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"070d298e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.delay) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if(duration === -1) \r\n            duration = global.delay;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-107.webp\": 66642,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize1em","textVerticalCenter","bgRed2","isPlayer1","style","getFieldStyle","grid","game","centerMini","card2","x","y","_e","text","textEffect","position","domProps","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","gameTask","static","list","tasks","forEach","task","push","find","isEqual","task1","task2","result","id","value","index","taskid","reverse","t","delay","_defineProperty","GameGundamEffect","trigger","player","card1","multiTriggers","onpair","onlink","effects","effect","includes","concat","effectsRemaining","global","length","nothing","toBeRemoved","stop","applyEffect","oneTurn","removeEndTurn","getEffectsRemaining","target","logEffect","JSON","stringify","shield","splice","location","positions","addTasks","taskMove","to","locationHand","cardChoice","bottomCard","popup","cards","deck","getAndRemoveFirst","taskPopup","select","base","level","effectClone","clone","effect2","ap","hp","taskCardToCenter","move","locationShield","locationField","cancel","refreshHandOpponent","taskPlayCard","zone","field","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","targets","hand","attribute","canAttack","apply","onplay","attackActiveEnnemy","immuneAp","lost","fx","log","join","locationEmpty","locationDeck","locationBase","locationResource","locationPair","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnIfNot","addIn","player1","player2","positon","zindex","from","getLocationArrayProperty","removeByIndex","isTemporaryCard","active","hidestat","locationTrash","pair","isPaired","needToRefreshAllField","taskRefreshField","isShowingEffect","cardUnit","isCardUnit","cardPilot","isCardPilot","isLink","taskPairCardWithEffect","effectResult","handleEffects","getNextIndex","effectsRemainings","map","taskShowCards","taskCardToMiniCenter","taskCardToMiniCenter2","taskTextShow","taskTextHide","taskTextDelete","degree","rotation","array","sort","Math","random","opponent","attacker","taskAttack","type","logs","obj","Object","assign","positioner","border","border2","divide","widthB","heightB","boxbig","getCardSize","card6","center","min","createZone","x15","y8","y7","y9","y6","y10","y5","trash","y11","y4","resource","y12","y3","y13","x1","y0","x14","x2","y1","y2","show","p1","p2","useZoneSize","wrapCut","zoneHeight","cardSize","getWrapPosition","getPairPosition","count","desiredWidth","desiredHeight","total","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","sizeWidth","gameManager","manager","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","spawnOrMove","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","playerId","taskTitleShow","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","playCard","getPlayerTurn","selectChoiceCard","selectChoice","refreshFieldAndHand","refreshOnlyTextEffect","attack","cardPlayer","getPlayer","taskPlayCardWithEffect","taskPairCard","cardHandler","max","isCostAvailable","cost","isTurnPlayer","noDropZone","playFromHand","sendCardBackToSquareOne","isSamePlayer","playCost","isPilot","isCommand","isCardCommand","choices","isCardBase","command","moveCardToMiniCenterWithTextThenDeleteIt","getPlayerTurnOpponent","isValidTarget","startAttackAnimation","end","setActive","burst","battle","damage","activeBreach","dead","delayForTarget","message","alert","createDefaultBase","removeOneTurnEffect","baseText","number","cardsToRemoveIndex","setSelectable","play","attackCard","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}