{"version":3,"file":"js/108.924694c0.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/gundamold/gameGundam.vue","webpack://front/./src/games/gundamold/Card/cardUnit.js","webpack://front/./src/games/gundamold/Card/cardCommandPilot.js","webpack://front/./src/games/gundamold/effects.js","webpack://front/./src/games/gundamold/Card/cardCommand.js","webpack://front/./src/games/gundamold/Card/cardPilot.js","webpack://front/./src/games/gundamold/Card/cardBase.js","webpack://front/./src/games/gundamold/global.js","webpack://front/./src/games/gundamold/gridAndSize.js","webpack://front/./src/games/gundamold/setup.js","webpack://front/./src/games/gundamold/manager.js","webpack://front/./src/games/gundamold/gameCard.vue","webpack://front/src/games/gundamold/gameCard.vue","webpack://front/./src/games/gundamold/gameCard.vue?a594","webpack://front/./src/games/gundamold/gameCard.vue?ae48","webpack://front/src/games/gundamold/gameGundam.vue","webpack://front/./src/games/gundamold/gameGundam.vue?5130","webpack://front/./src/games/gundamold/gameGundam.vue?90a5","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game-gundam')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"flex\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[(_vm.showCardId.id)?_c('gameCard',{attrs:{\"card\":_vm.showCardId,\"folder\":\"Gundam/cards/\"}}):_vm._e()],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.gameWorld?.logs)}})],1),(_vm.gameWorld)?_c('div',{key:_vm.refreshG,staticClass:\"relative bgWhite\",style:({\n            width: _vm.gameWorld?.size.gameWidth + 'px',\n            height: _vm.gameWorld?.size.gameHeight + 'px',\n            'font-size': '12px',\n            'text-align': 'center'\n        })},[_c('div',{staticClass:\"absolute bgYellow cirlce5px\",style:({\n                top: _vm.gameWorld?.isPlayer1Turn ? _vm.gameWorld?.player1.position.field.y + 'px' : _vm.gameWorld?.size.infoLineY04 + 5 + _vm.gameWorld?.size.boxHeight + 'px',\n                left: _vm.gameWorld?.isPlayer1Turn ? _vm.gameWorld?.player1.position.res.x + 'px' : _vm.gameWorld?.player2.position.res.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px'\n            })},[_c('v-btn',{staticClass:\"bg shine w100p\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End Turn \")])],1),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.deck.y + 'px',\n                left: _vm.gameWorld?.player1.position.deck.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.deck.length)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.hand.y + 'px',\n                left: _vm.gameWorld?.player1.position.hand.x + 'px',\n                width: _vm.gameWorld?.size.handWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.grave.y + 'px',\n                left: _vm.gameWorld?.player1.position.grave.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.grave.length)+\" \")]),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.res.y + 'px',\n                left: _vm.gameWorld?.player1.position.res.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight * 2 + 5 + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.resAString)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.base.y + 'px',\n                left: _vm.gameWorld?.player1.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px'\n            })}),(_vm.gameWorld?.popup?.attackShield)?_c('div',{staticClass:\"absolute\",style:({\n                top: _vm.gameWorld?.player1.position.base.y + 'px',\n                left: _vm.gameWorld?.player1.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px',\n                'background-color': '#FFFF00'\n            }),on:{\"click\":function($event){return _vm.selectChoice({})}}},[_vm._v(\" Shield \")]):_vm._e(),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.shield.y + 'px',\n                left: _vm.gameWorld?.player1.position.shield.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.miniboxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.shield.length)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.field.y + 'px',\n                left: _vm.gameWorld?.player1.position.field.x + 'px',\n                width: _vm.gameWorld?.size.fieldWidth + 'px',\n                height: _vm.gameWorld?.size.fieldHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.deck.y + 'px',\n                left: _vm.gameWorld?.player2.position.deck.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.deck.length)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.hand.y + 'px',\n                left: _vm.gameWorld?.player2.position.hand.x + 'px',\n                width: _vm.gameWorld?.size.handWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.grave.y + 'px',\n                left: _vm.gameWorld?.player2.position.grave.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.grave.length)+\" \")]),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.res.y + 'px',\n                left: _vm.gameWorld?.player2.position.res.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight * 2 + 5 + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.resAString)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.base.y + 'px',\n                left: _vm.gameWorld?.player2.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px'\n            })}),(_vm.gameWorld?.popup?.attackShield)?_c('div',{staticClass:\"absolute\",style:({\n                top: _vm.gameWorld?.player2.position.base.y + 'px',\n                left: _vm.gameWorld?.player2.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px',\n                'background-color': '#FFFF00'\n            }),on:{\"click\":function($event){return _vm.selectChoice({})}}},[_vm._v(\" Shield \")]):_vm._e(),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.shield.y + 'px',\n                left: _vm.gameWorld?.player2.position.shield.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.miniboxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.shield.length)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.field.y + 'px',\n                left: _vm.gameWorld?.player2.position.field.x + 'px',\n                width: _vm.gameWorld?.size.fieldWidth + 'px',\n                height: _vm.gameWorld?.size.fieldHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bgWhite\",style:({\n                display: 'none',\n                top: _vm.gameWorld.size.centerY + 'px',\n                left: _vm.gameWorld.size.centerX + 'px',\n                width: _vm.gameWorld?.size.cardWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })},[_vm._v(\" Center card \"+_vm._s(_vm.cards.length)+\" \")]),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable},on:{\"mouseover\":_vm.showCard,\"click\":_vm.selectCard}})],1)})],2):_vm._e()]),(_vm.gameWorld?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"6\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"120px\"}},[_c('div',{staticClass:\"flex-wrap\",staticStyle:{\"background-color\":\"#FFFF00E0\",\"width\":\"80%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center m10px\"},[_vm._v(_vm._s(_vm.gameWorld.popup.text))]),_c('span',{staticClass:\"relative\"},_vm._l((_vm.gameWorld.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):(_vm.gameWorld.popup.showCards && choice.id)?_c('gameCard',{attrs:{\"card\":choice,\"folder\":\"Gundam/cards/\",\"shine\":true},on:{\"mouseover\":_vm.showCard,\"click\":_vm.selectCard}}):_vm._e()],1)}),0)])]):_vm._e(),_c('br'),_c('br'),_c('br'),_vm._v(_vm._s(_vm.gameWorld?.player2.shield[0].name)+\" \")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nimport global from '../global';\r\n\r\nclass GameGundamCardUnit {\r\n\r\n    static isSelectable(player, card){        \r\n        return true;\r\n    }\r\n    \r\n    static play(player, card, choiceType, choiceCard) {\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        player.field.push(card);\r\n        card.location = global.locationField;\r\n        card.height = global.size.cardSize.height;\r\n        card.selectable = false;\r\n        card.active = true;\r\n        return {playCost:true, refreshHand:true, refreshField:true};\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardUnit;","/* eslint-disable */\r\nimport global from '../global';\r\n\r\nclass cardCommandPilot {\r\n\r\n    static isSelectable(player, card){        \r\n\r\n        if (card.location !== global.locationHand) return false;\r\n\r\n        const unitsOnField = player.field.filter(x => global.isCardUnit(x));\r\n        const unitsOnFieldWithoutPilot = unitsOnField.filter(x => !x.pair);\r\n        card.PilotTargetAvailable = unitsOnFieldWithoutPilot.map(x => x.index);\r\n        card.CommandtargetAvailable = unitsOnField.map(x => x.index);\r\n\r\n        return !card.targetUnit ? true : card.PilotTargetAvailable.length > 0 || card.CommandtargetAvailable.length > 0;\r\n    }\r\n    static play(player, card) {\r\n        global.showPopupSelectPilotOrCommand(card);\r\n        return {playCost:false, refreshHand:false, refreshField:false};;\r\n    }\r\n}\r\n\r\n\r\nexport default cardCommandPilot;","/* eslint-disable */\r\nimport global from './global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // effect\r\n    static deploy = 'deploy';\r\n    static get1ShieldToHand = 'get1ShieldToHand';\r\n    static top2DeckCard1Top1Bottom = 'top2DeckCard1Top1Bottom';\r\n    static protectionShieldLv4OrLower = 'protectionShieldLv4OrLower';\r\n    static breach3 = 'breach3';\r\n    static breach5 = 'breach5';\r\n    static ap1hp1 = 'ap1hp1';\r\n    static place1ExResource = 'place1ExResource';\r\n    static attackActiveEnnemyLv4OrLower = 'attackActiveEnnemyLv4OrLower';\r\n    static place1RestedResource = 'place1RestedResource';\r\n    static immuneAp3IfBreach = 'immuneAp3IfBreach';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        let result = {};\r\n\r\n        effects.filter(effect => effect.trigger == trigger).forEach(effect => {\r\n            if (result.stop) return;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1) return;\r\n            const card = player.shield.splice(0, 1)[0];\r\n            global.spawnCard(player, card, global.locationHand);\r\n            card.position = player.position.shield;\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            let deckCards = [player.deck[0], player.deck[1]];\r\n            if (!card2) {\r\n                global.showPopupSelectHiddenCard(card1, \"which should go at the top deck ?\", deckCards);\r\n                return { stop: true }\r\n            }\r\n\r\n            deckCards = player.deck.splice(0, 2);\r\n            const bottomCard = deckCards.find(x => x.index !== card2.index);\r\n            player.deck = [card2].concat(player.deck).concat([bottomCard]);\r\n\r\n            global.log(`With ${card1.name}, move top 2 deck cards Above or bellow`);\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const cancel = shield.level < effect.value;\r\n            if (cancel)\r\n                global.log(`attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { cancel };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.log(`${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.log(`${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            player.shield = global.removeObj(player.shield, card1);\r\n            global.spawnCard(player, card1, global.locationHand);\r\n            card1.position = player.position.shield;\r\n            global.log(`${card1.name} is send to hand`);\r\n            return { cancel: true, refreshHandOpponent: true };\r\n        } \r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            player.hand.push(card1);\r\n            global.spawnCard(player, card1, global.locationHand);\r\n            card1.position = player.position.shield;\r\n            global.log(`${card1.name} is send to hand`);\r\n            return { cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = global.getRes(player);\r\n            global.log(`${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = global.getRes(player);\r\n            global.log(`${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.log(`${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.height = global.size.cardSize.height;\r\n            player.hand = global.removeObj(player.hand, card);\r\n            player.field.push(card);\r\n            global.log(`${card1.name} deploy ${card.name}`);\r\n            GameGundamEffect.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemyLvXOrLower') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.log(`${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneApXIfBreach') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.log(`${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","/* eslint-disable */\r\nimport global from '../global';\r\nimport effects from '../effects';\r\n\r\nclass GameGundamCardCommand {\r\n    static isSelectable(player, card) {\r\n\r\n        if (card.location !== global.locationHand) return false;\r\n\r\n        const unitsOnField = player.field.filter(x => global.isCardUnit(x));\r\n        card.CommandtargetAvailable = unitsOnField.map(x => x.index);\r\n\r\n        return !card.targetUnit ? true : card.CommandtargetAvailable.length > 0;\r\n    }\r\n\r\n    static play(player, card, choiceCard) {\r\n        if (card.CommandTargetAvailable) {\r\n            if (card.CommandTargetAvailable.length > 1 && !choiceCard) {\r\n                global.showPopupSelectCard(card, card.CommandTargetAvailable);\r\n                return { stop:true, playCost: false, refreshHand: false, refreshField: false };\r\n            } else\r\n                choiceCard = global.getCardsByIndex(card.CommandTargetAvailable)[0];\r\n        }\r\n\r\n        const effectResult= effects.apply(effects.command, player, card, choiceCard);\r\n        if(effectResult.stop)\r\n            return {stop:true};\r\n\r\n        card.height = global.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        card.to = global.size.center;\r\n        card.explode = true;\r\n        \r\n\r\n        return { playCost: true, refreshHand: true, refreshField: false };\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardCommand;","/* eslint-disable */\r\nimport global from '../global';\r\n\r\nclass GameGundamCardPilot {\r\n\r\n    static isSelectable(player, card) {\r\n        if (card.location !== global.locationHand)\r\n            return false;\r\n\r\n        const unitsOnField = player.field.filter(x => global.isCardUnit(x));\r\n        const unitsOnFieldWithoutPilot = unitsOnField.filter(x => !x.pair);\r\n        card.PilotTargetAvailable = unitsOnFieldWithoutPilot.map(x => x.index);\r\n\r\n        return card.PilotTargetAvailable.length > 0;\r\n    }\r\n\r\n    static play(player, card, choiceCard) {\r\n        if (card.PilotTargetAvailable.length > 1 && !choiceCard) {\r\n            global.showPopupSelectCard(card, card.PilotTargetAvailable);\r\n            return {playCost:false, refreshHand:false, refreshField:false};\r\n        } else if(!choiceCard){\r\n            choiceCard = global.getCardsByIndex(card.PilotTargetAvailable)[0];\r\n        }\r\n\r\n        card.height = global.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        global.pairCards(player, choiceCard, card);\r\n        return {playCost:true, refreshHand:true, refreshField:false};\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardPilot;","/* eslint-disable */\r\nimport global from '../global';\r\n\r\nclass GameGundamCardBase {\r\n\r\n    static isSelectable(player, card) {\r\n        return true;\r\n    }\r\n    \r\n    static play(player, card) {\r\n        card.height = global.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        card.to = player.position.base;\r\n        if (player.base)\r\n            global.sendToGrave(player, player.base);\r\n        player.base = card;\r\n        card.selectable=false;\r\n        return {playCost:true, refreshHand:true, refreshField:false};\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardBase;","import cards from '../../data/gundamCards.json';\r\nimport cardUnit from './Card/cardUnit';\r\nimport cardCommandPilot from './Card/cardCommandPilot';\r\nimport cardCommand from './Card/cardCommand';\r\nimport cardPilot from './Card/cardPilot';\r\nimport cardBase from './Card/cardBase';\r\nimport GameGundamEffect from './effects';\r\n\r\nclass global {\r\n    static world = null;\r\n    static cards = cards.cards;\r\n    static lastChoiceType;\r\n    static awaitingCardChoice = false;\r\n    static awaitingAttackTarget = false;\r\n    static size;\r\n    static index = 1;\r\n    static isPlayer1Turn;\r\n    static phase = 0;\r\n\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationDeck = 0;\r\n    static locationShield = 1;\r\n    static locationHand = 2;\r\n    static locationField = 3;\r\n    static locationBase = 4;\r\n    static locationGrave = 5;\r\n\r\n    static getPlayerTurn() {\r\n        return this.isPlayer1Turn ? this.world.player1 : this.world.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return this.isPlayer1Turn ? this.world.player2 : this.world.player1;\r\n    }\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to) card.to = card.position;\r\n        card.to = { x: card.to.x, y: card.to.y, rotation: degree };\r\n    }\r\n\r\n    static pairCards(player, cardUnit, cardPilot) {\r\n        const cardHeight25Percent = this.size.cardSize.height * 0.25;\r\n        cardPilot.to = this.clone({ x: cardUnit.position.x, y: cardUnit.position.y + cardHeight25Percent });\r\n        cardPilot.zindex = 1;\r\n        cardPilot.active = false;\r\n        cardPilot.selectable = false;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.pair = cardPilot;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        GameGundamEffect.apply(GameGundamEffect.onpair, player, cardUnit, cardPilot);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            GameGundamEffect.apply(GameGundamEffect.onlink, player, cardUnit, cardPilot);\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static showPopupSelectPilotOrCommand(card) {\r\n        this.showPopup(card, \"Comand or Pilot ?\", [{ text: 'Command' }, { text: 'Pilot' }]);\r\n    }\r\n\r\n    static showPopupSelectCard(card, targetAvailable) {\r\n        this.prepareResetSelectable();\r\n        const cards = this.getCardsByIndex(targetAvailable);\r\n        cards.forEach(card => card.selectable = true);\r\n        card.selectable = true;\r\n        this.awaitingCardChoice = true;\r\n        this.showPopup(card, \"Choice a card\", cards);\r\n    }\r\n\r\n    static prepareResetSelectable(){\r\n        this.world.cards.forEach(card => {\r\n            card.selectableOld = card.selectable;\r\n            card.selectable = false;\r\n        });\r\n    }\r\n\r\n    static showPopupSelectHiddenCard(card, text, cards) {\r\n        this.prepareResetSelectable();\r\n        card.selectable = true;\r\n        const width = 64 * 107 / 150;\r\n        cards.forEach((card, index) => {\r\n            card.position = { x: index * (width + 5), y: 0 };\r\n            card.width = width;\r\n        });\r\n        this.awaitingCardChoice = true;\r\n        this.showPopup(card, text, cards);\r\n        this.world.popup.showCards=true;\r\n    }\r\n\r\n    static showPopupSelectAttackTarget(card, targetAvailable, hasBase) {\r\n        this.world.cards.forEach(card => {\r\n            card.selectableOld = card.selectable;\r\n            card.selectable = false;\r\n        });\r\n        targetAvailable.forEach(card => card.selectable = true);\r\n        card.selectable = true;\r\n        this.awaitingAttackTarget = true;\r\n        this.showPopup(card, \"Choice a target\", []);\r\n        this.world.popup.attackShield = !hasBase;\r\n    }\r\n\r\n    static showPopup(card, text, choices) {\r\n        this.world.popup = {\r\n            card,\r\n            text,\r\n            choices\r\n        };\r\n    }\r\n\r\n    static draw(player, cardNumber) {\r\n        for (let i = 0; i < cardNumber; i++)\r\n            this.spawnCard(player, player.deck.splice(0, 1)[0], this.locationHand);\r\n    }\r\n\r\n    static addToShield(player, cardNumber) {\r\n        const result = [];\r\n        for (let i = 0; i < cardNumber; i++) {\r\n            const card = player.deck.splice(0, 1)[0];\r\n            card.width = this.size.cardSize.width;\r\n            card.location = this.locationShield;\r\n            card.show = false;\r\n            result.push(card);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static spawnCard(player, card, location) {\r\n        if (location == this.locationHand) {\r\n            card.position = player.position.res;\r\n            player.hand.push(card);\r\n            card.height = this.size.boxSize.height * 2 + 5;\r\n        }\r\n        if (location == this.locationShield) {\r\n            card.position = player.position.shield;\r\n            card.to = player.position.grave;\r\n            player.shield = player.shield.filter(x => x.index !== card.index);\r\n            player.grave.push(card);\r\n            card.height = this.size.cardSize.height;\r\n            card.explode = true;\r\n        }\r\n        if (location == this.locationBase) {\r\n            card.position = player.position.base;\r\n            card.width = this.size.boxSize.width;\r\n            card.height = this.size.cardSize.height;\r\n            card.show = true;\r\n            card.isTrash = true;\r\n        }\r\n        card.location = location;\r\n        card.show = true;\r\n        card.width = this.size.cardSize.width;\r\n        card.bgposition = 'top center';\r\n        this.world.cards.push(card);\r\n        return card;\r\n    }\r\n\r\n    static sendToGrave(player, card) {\r\n        card.to = player.position.grave;\r\n        card.explode = true;\r\n        if (card.pair)\r\n            this.sendToGrave(player, card.pair);\r\n        if (!card.isTrash)\r\n            player.grave.push(card);\r\n    }\r\n\r\n    static resetSelectable() {\r\n        this.world.cards.forEach(card => {\r\n            card.selectable = card.selectableOld;\r\n            delete (card.selectableOld);\r\n        });\r\n    }\r\n\r\n    static getRes(player) { return player.resourcesAvailable + \" / \" + player.resourcesMax; }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static getCardHandler(card, choiceType) {\r\n        if (choiceType)\r\n            return choiceType.text == 'Pilot' ? cardPilot : cardCommand;\r\n\r\n        if (this.isCardUnit(card)) return cardUnit;\r\n        if (this.isCardCommandPilot(card)) return cardCommandPilot;\r\n        if (this.isCardCommand(card)) return cardCommand;\r\n        if (this.isCardPilot(card)) return cardPilot;\r\n        if (this.isCardBase(card)) return cardBase;\r\n    }\r\n\r\n    static getCardsByIndex(ids) { return this.world.cards.filter(x => ids.includes(x.index)); }\r\n\r\n    static log(text) { this.world.logs = text + '<br>' + this.world.logs; }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n\r\n    static removeObj(array, obj, property = 'index') { return array.filter(x => x[property] !== obj[property]); }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n}\r\n\r\n\r\nexport default global;","class gridAndSize {\r\n\r\n    static size;\r\n\r\n    static calculateGameSize(w, h) {\r\n        const size = {};\r\n        const width = w - 300;\r\n        const height = h - 64;\r\n        const desiredHeight = width * 9 / 16;\r\n        const desiredWidth = (height * 16 / 9);\r\n        size.gameWidth = desiredHeight < height ? width : desiredWidth;\r\n        size.gameHeight = size.gameWidth * 9 / 16;\r\n\r\n        size.fieldHeight = (size.gameHeight - 4 * 7) / 3;\r\n        size.handHeight = size.fieldHeight / 2;\r\n        size.boxHeight = (size.handHeight - 5) / 2;\r\n        size.cardHeight = size.fieldHeight * 0.75;\r\n        size.cardWidth = size.cardHeight * 107 / 150;\r\n        size.boxWidth = size.cardWidth;\r\n        size.handWidth = size.gameWidth - 10 - 10 - size.boxWidth;\r\n        size.miniboxHeight = size.fieldHeight - size.cardHeight;\r\n        \r\n        size.boxSize = { width: size.boxWidth, height: size.boxHeight };\r\n        size.cardSize = { width: size.cardWidth, height: size.cardHeight };\r\n\r\n        size.centerX = (size.gameWidth - size.boxWidth) / 2;\r\n        size.centerY = (size.gameHeight - size.cardHeight) / 2;\r\n        size.center = { x: size.centerX, y: size.centerY };\r\n        size.infoLineX1 = 5;\r\n        size.infoLineX2 = 5 + size.boxWidth + 5;\r\n        size.infoLineX3 = size.gameWidth - 10 - size.boxWidth;\r\n\r\n        size.infoLineY01 = 7;\r\n        size.infoLineY02 = size.infoLineY01 + 5 + size.boxHeight;\r\n        size.infoLineY03 = size.infoLineY02 + 5 + size.boxHeight;\r\n        size.infoLineY04 = size.infoLineY03 + 5 + size.boxHeight;\r\n        size.infoLineY05 = size.infoLineY03 + 5 + size.fieldHeight;\r\n        size.infoLineY07 = size.infoLineY05 + 5 + size.fieldHeight;\r\n        size.infoLineY06 = size.infoLineY07 - 5 - size.boxHeight;\r\n        size.infoLineY08 = size.infoLineY07 + 5 + size.boxHeight;\r\n        size.infoLineY04bis = size.infoLineY05 - 5 - size.cardHeight;\r\n        size.infoLineY06bis = size.infoLineY05 + size.cardHeight;\r\n\r\n        size.fieldWidth = size.infoLineX3 - size.infoLineX2 - 10;\r\n        this.size = size;\r\n        return size;\r\n    }\r\n\r\n    static getPlayerPosition(isPlayer1) {\r\n        return {\r\n            deck: { \r\n                x: isPlayer1 ? this.size.infoLineX3 : this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY06 - this.size.boxHeight -5 : this.size.infoLineY04, rotation: 0 },\r\n            grave: { \r\n                x: isPlayer1 ?  this.size.infoLineX3 : this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY06 : this.size.infoLineY03, rotation: 0 },\r\n            hand: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX2, \r\n                y: isPlayer1 ? this.size.infoLineY07 : this.size.infoLineY01, rotation: 0 },\r\n            base: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX3, \r\n                y: isPlayer1 ? this.size.infoLineY05 : this.size.infoLineY04bis, rotation: 0 },\r\n            shield: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX3, \r\n                y: isPlayer1 ? this.size.infoLineY06bis : this.size.infoLineY03, rotation: 0 },\r\n            field: { \r\n                x: isPlayer1 ? this.size.infoLineX2 : this.size.infoLineX2, \r\n                y: isPlayer1 ? this.size.infoLineY05 : this.size.infoLineY03, rotation: 0 },\r\n            res: { \r\n                x: isPlayer1 ? this.size.infoLineX3: this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY07 : this.size.infoLineY01, rotation: 0 },\r\n        };\r\n    }\r\n}\r\n\r\n\r\nexport default gridAndSize;","import global from './global';\r\nimport gridAndSize from './gridAndSize';\r\n\r\nclass setup {\r\n\r\n    static createGame(width, height) {\r\n        global.size = gridAndSize.calculateGameSize(width, height);\r\n\r\n        global.world = {\r\n            size: global.size,\r\n            cards: [],\r\n            popup: null,\r\n            logs: 'Start game<br>'\r\n        };\r\n        global.world.player1 = this.createPlayer(gridAndSize.getPlayerPosition(true), true);\r\n        global.world.player2 = this.createPlayer(gridAndSize.getPlayerPosition(false), false);\r\n\r\n        global.isPlayer1Turn = Math.floor(Math.random() * 2) == 1;\r\n        const nonPlayerTurn = global.getPlayerTurn();\r\n        nonPlayerTurn.resourcesEx = 1;\r\n\r\n        global.world.player1.shield = global.addToShield(global.world.player1, 6);\r\n        global.world.player2.shield = global.addToShield(global.world.player2, 6);\r\n\r\n        global.draw(global.world.player1, 5);\r\n        global.draw(global.world.player2, 5);\r\n\r\n        return global.world;\r\n    }\r\n\r\n    static createPlayer(position, isPlayer1) {\r\n        let deck = this.createDeck(isPlayer1);\r\n        deck = global.sortRandom(deck);\r\n        const result = {\r\n            deck,\r\n            position,\r\n            isPlayer1,\r\n            number : isPlayer1 ? 1 :2,\r\n            hand: [],\r\n            field: [],\r\n            shield: [],\r\n            grave: [],\r\n            resAString: \"0\",\r\n            resourcesMax: 0,\r\n            resourcesRemaining: 0,\r\n            resourcesEx: 0,\r\n            resBString: \"0\",\r\n\r\n        };\r\n        result.base = this.createDefaultBase(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.clone(global.cards.find(x => x.id === \"EXBP-001\"));\r\n        card.index = global.index;\r\n        global.index++;\r\n        global.spawnCard(player, card, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static createDeck(isPlayer1) {\r\n        let result = [];\r\n\r\n        // To delete after test\r\n        /*\r\n        const gundam = global.clone(global.cards.find(x => x.id === 'GD01-034'));\r\n        const pilot = global.cards.find(x => x.id === 'ST02-012');\r\n        for (let i = 0; i < 8; i++)result = result.concat([global.clone(pilot)]);\r\n        for (let i = 0; i < 8; i++)result = result.concat([global.clone(gundam)]);\r\n        */\r\n\r\n        global.cards.forEach(card => {\r\n            result.push(global.clone(card));\r\n            result.push(global.clone(card));\r\n            result.push(global.clone(card));\r\n            result.push(global.clone(card));\r\n        });\r\n\r\n        result = result.splice(0, 50);\r\n        result.forEach(x => {\r\n            x.index = global.index;\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n            global.index++;\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default setup;\r\n","import global from './global';\r\nimport setup from './setup';\r\nimport effects from './effects';\r\nimport gridAndSize from './gridAndSize';\r\n\r\nclass manager {\r\n\r\n    static createGame(width, height) {\r\n        const result = setup.createGame(width, height);\r\n        this.nextTurn();\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        this.refreshHandPosition(opponent);\r\n\r\n        return result;\r\n    }\r\n\r\n    static nextTurn() {\r\n        effects.removeOneTurnEffect(global.world.cards);\r\n\r\n        global.isPlayer1Turn = !global.isPlayer1Turn;\r\n        global.world.isPlayer1Turn=global.isPlayer1Turn;\r\n        const player = global.getPlayerTurn();\r\n\r\n        global.world.cards.forEach(card => card.selectable = false);\r\n        player.field.forEach(card => global.setActive(card, true));\r\n        player.resourcesMax += 1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        player.resources = player.resourcesMax;\r\n        player.resAString = global.getRes(player);\r\n        \r\n        const baseText = player.base ? player.base.hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n\r\n        global.draw(player, 1);\r\n\r\n        this.refreshHandPosition(player, false);\r\n        player.field.forEach(card => {\r\n            card.active = true;\r\n            card.selectable = true;\r\n        });\r\n\r\n        return global.world;\r\n    }\r\n\r\n    static refreshHandPosition(player, setSelectableOff = true) {\r\n        player.hand.forEach((card, index) => {\r\n            card.to = this.getHandPosition(player, index);\r\n            card.selectable = setSelectableOff ? false : this.isSelectable(player, card);\r\n        });\r\n    }\r\n\r\n    static refreshFieldPosition(player) {\r\n        player.field.forEach((card, index) => {\r\n            card.to = card.to ?? this.getFieldPosition(player, card, index);\r\n            if (card.pair && !card.pair.to)\r\n                card.pair.to = { x: card.to.x, y: card.pair.position.y };\r\n        });\r\n    }\r\n\r\n    static isSelectable(player, card) {\r\n        if (card.location === global.locationHand) {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            if (!isCostAvailable)\r\n                return false;\r\n        }\r\n\r\n        return global.getCardHandler(card).isSelectable(player, card);\r\n    }\r\n\r\n    static selectCard(card, choiceType, choiceCard) {\r\n        const player = global.getPlayerTurn();\r\n\r\n        if (global.awaitingCardChoice && !choiceCard)\r\n            return this.selectChoiceCard(player, card);\r\n\r\n        if (global.awaitingAttackTarget && !choiceCard)\r\n            return this.selectAttackTarget(card);\r\n\r\n        if (card.isPlayer1 != player.isPlayer1 || !card.selectable)\r\n            return global.world;\r\n\r\n        global.world.popup = null;\r\n        let playParams = { refreshHand: true, refreshField: true };\r\n\r\n        if (card.location === global.locationHand)\r\n            playParams = this.play(player, card, choiceType, choiceCard);\r\n        else if (card.location === global.locationField && global.isCardUnit(card) && card.active)\r\n            playParams = this.attack(player, card, choiceCard);\r\n        \r\n        if (playParams.stop) \r\n            return global.world;\r\n\r\n        if (playParams.refreshHand) this.refreshHandPosition(player, false);\r\n        if (playParams.refreshField) this.refreshFieldPosition(player, false);\r\n\r\n        return global.world;\r\n    }\r\n\r\n    static play(player, card, choiceType, choiceCard) {\r\n        let playParams = effects.apply(effects.onplay, player, card, choiceCard);\r\n        if(playParams.stop)\r\n            return playParams;\r\n\r\n        playParams = global.getCardHandler(card, choiceType).play(player, card, choiceCard);\r\n        if (playParams.stop) \r\n            return playParams;\r\n\r\n        if (playParams.playCost)\r\n            this.playCardCost(player, card);\r\n\r\n        global.log(`For ${card.cost}, play ${card.name}`);\r\n\r\n        return playParams;\r\n    }\r\n\r\n    static selectChoiceType(choice) {\r\n        if (global.awaitingAttackTarget)\r\n            return this.selectAttackTarget(choice);\r\n\r\n        global.lastChoiceType = choice;\r\n        return this.selectCard(global.world.popup.card, choice, null);\r\n    }\r\n\r\n    static selectChoiceCard(player, choiceCard) {\r\n        const card = global.world.popup.card;\r\n        global.world.popup = null;\r\n\r\n        if (card.index == choiceCard.index) {\r\n            global.resetSelectable();\r\n            return global.world;\r\n        }\r\n\r\n        const result = this.selectCard(card, global.lastChoiceType, choiceCard);\r\n        global.awaitingCardChoice = false;\r\n        return result;\r\n    }\r\n\r\n    static selectAttackTarget(choiceCard) {\r\n        const card = global.world.popup.card;\r\n        global.world.popup = null;\r\n\r\n        if (card.index == choiceCard.index) {\r\n            global.world.cards.forEach(card => {\r\n                card.selectable = card.selectableOld;\r\n                delete (card.selectableOld);\r\n            });\r\n            card.selectable = true;\r\n            return global.world;\r\n        }\r\n\r\n        const result = this.selectCard(card, global.lastChoiceType, choiceCard);\r\n        global.awaitingAttackTarget = false;\r\n        global.resetSelectable();\r\n        return result;\r\n    }\r\n\r\n    static attack(player, card, target, breach = null) {\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        let result = { playCost: false, refreshHand: false, refreshField: false };\r\n        card.selectable = false;\r\n\r\n        let targets = opponent.field.filter(x => !x.active);\r\n        if (card.attackActiveEnnemy)\r\n            targets = opponent.field.filter(x => !x.active || x.level < card.attackActiveEnnemy);\r\n\r\n        if (opponent.base) targets.push(opponent.base);\r\n        else targets.push({ text: 'Shield' });\r\n\r\n        if (!target) {\r\n            if (targets.length > 1) {\r\n                global.showPopupSelectAttackTarget(card, targets, opponent.base);\r\n                return { playCost: false, refreshHand: false, refreshField: false };\r\n            } else if (opponent.base)\r\n                target = opponent.base\r\n            else\r\n                target = { text: 'Shield' };\r\n        }\r\n\r\n        const effectResult = effects.apply(effects.battle, player, card, target);\r\n        if (effectResult && effectResult.cancel) {\r\n            card.active = false;\r\n            return { playCost: false, refreshHand: false, refreshField: false };\r\n        }\r\n\r\n        global.setActive(card, false);\r\n        if (target && target.id)\r\n            this.attackCard(player, opponent, card, target, breach);\r\n\r\n        if (opponent.base && opponent.base.index == target.index)\r\n            opponent.base = opponent.base.hp > 0 ? opponent.base : null;\r\n        else if (!target.index) {\r\n            if (opponent.shield.length < 1)\r\n                this.endFight();\r\n            else {\r\n                const shield = opponent.shield[0];\r\n                const effectResult = effects.apply(effects.burst, opponent, shield, card);\r\n                if(effectResult.refreshHandOpponent)\r\n                    this.refreshHandPosition(opponent);\r\n                \r\n                if (!effectResult || !effectResult.cancel)\r\n                    global.spawnCard(opponent, shield, global.locationShield);\r\n            }\r\n        }\r\n\r\n        if (!breach && global.isCardUnit(target) && card.breach && target.hp < 1) {\r\n            result =this.attack(player, card, opponent.base ?? { text: 'shield' }, card.breach);\r\n        }\r\n\r\n        card.active = false;\r\n\r\n        return result;\r\n    }\r\n\r\n    static attackCard(player, opponent, card, target, breach) {\r\n        let attack = 0;\r\n\r\n        if (!breach) {\r\n            attack = breach ?? target.ap;\r\n            attack = card.immuneAp && card.immuneAp > attack ? 0 : attack;\r\n            card.hp -= attack;\r\n        }\r\n\r\n        attack = card.ap;\r\n        attack = target.immuneAp && target.immuneAp > attack ? 0 : attack;\r\n        target.hp -= attack;\r\n\r\n        if (card.hp < 1) {\r\n            player.field = global.removeObj(player.field, card);\r\n            if (card.pair)\r\n                player.field = global.removeObj(player.field, card.pair);\r\n\r\n            global.sendToGrave(player, card);\r\n        }\r\n\r\n        if (target.hp < 1) {\r\n            opponent.field = global.removeObj(opponent.field, target);\r\n            if (target.pair)\r\n                opponent.field = global.removeObj(opponent.field, target.pair);\r\n\r\n            global.sendToGrave(opponent, target);\r\n        }\r\n    }\r\n\r\n    static endFight() {\r\n        const message = global.isPlayer1Turn ? \"Victory\" : \"Defeat\";\r\n        global.showPopup(null, message, []);\r\n    }\r\n\r\n    // ------------------ Utilities\r\n    static refreshGameSize(width, height) {\r\n        global.size = gridAndSize.calculateGameSize(width, height);\r\n        return global.world;\r\n    }\r\n\r\n    static playCardCost(player, card) {\r\n        const remainingCost = card.cost - player.resourcesEx;\r\n        if (remainingCost <= 0) {\r\n            player.resourcesEx -= card.cost;\r\n        }\r\n        else {\r\n            player.resourcesEx = 0;\r\n            player.resources -= remainingCost;\r\n        }\r\n        player.resourcesAvailable = player.resources + player.resourcesEx;\r\n        player.resAString = global.getRes(player);\r\n    }\r\n\r\n    static getHandPosition(player, index = -1) {\r\n        const posIndex = index > -1 ? index : player.hand.length;\r\n        return this.getCardPosition(player, posIndex, player.position.hand, player.hand.length, false, global.size.handWidth);\r\n    }\r\n    static getFieldPosition(player, card, index = -1) {\r\n        const posIndex = index > -1 ? index : player.field.length;\r\n        const result = this.getCardPosition(player, posIndex, player.position.field, player.field.length, true, global.size.fieldWidth);\r\n        result.rotation = card.position?.rotation;\r\n        return result;\r\n    }\r\n    static getCardPosition(player, index, position, cardsLength, useRotateWidth, widthAvailable) {\r\n        const rotateWidth = !useRotateWidth ? 0 : (global.size.cardSize.height - global.size.cardSize.width) / 2;\r\n        let cardWidth = global.size.cardSize.width + 5 + rotateWidth;\r\n        const result = this.getCenteredX(index, cardWidth, cardsLength, widthAvailable);\r\n        return { x: position.x + result, y: position.y }; //(rotateWidth * direction) + position.x + (index * direction * cardWidth)\r\n    }\r\n    static getCenteredX(index, elementWidth, totalElements, zoneWidth) {\r\n        if (totalElements == 1) return (zoneWidth - elementWidth) / 2;\r\n        const marginCount = totalElements + 1;\r\n        const zoneWidthAvailable = zoneWidth - (totalElements * elementWidth);\r\n        const marginWidth = zoneWidthAvailable / marginCount;\r\n        const result = (index + 1) * marginWidth + index * elementWidth;\r\n        return result;\r\n    }\r\n\r\n\r\n    static endAnimation() {\r\n        global.world.cards.filter(x => x.show && x.to).forEach(card => {\r\n            card.position = card.to;\r\n            card.to = null;\r\n        });\r\n        global.world.cards = global.world.cards.filter(x => !x.explode);\r\n        return global.world;\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.width + 'px',\n  height: _vm.card.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' :''\n})},[_c('img',{class:{ shine: _vm.shine, w100p: true, h100p: true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition }),attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"click\":function($event){return _vm.$emit('click', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute bg cirlce10px textVerticalCenter\",staticStyle:{\"width\":\"25px\",\"height\":\"20px\",\"top\":\"-5px\",\"right\":\"-5px\",\"font-size\":\"8px\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.width + 'px',\r\n    height: card.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' :''\r\n  }\">\r\n    <img :class=\"{ shine: shine, w100p: true, h100p: true }\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @click=\"$emit('click', card)\" @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n      <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute bg cirlce10px textVerticalCenter\" style=\"width:25px; height:20px; top:-5px; right:-5px; font-size:8px\">\r\n        {{card.ap}} - {{card.hp}}\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gameCard.vue?vue&type=template&id=45eb747b&scoped=true&\"\nimport script from \"./gameCard.vue?vue&type=script&lang=js&\"\nexport * from \"./gameCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"45eb747b\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"flex\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%\">\r\n                <div class=\"relative\">\r\n                    <gameCard v-if=\"showCardId.id\" :card=\"showCardId\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"gameWorld?.logs\"></div>\r\n            </div>\r\n\r\n            <div v-if=\"gameWorld\" :key=\"refreshG\" class=\"relative bgWhite\" :style=\"{\r\n                width: gameWorld?.size.gameWidth + 'px',\r\n                height: gameWorld?.size.gameHeight + 'px',\r\n                'font-size': '12px',\r\n                'text-align': 'center'\r\n            }\">\r\n\r\n                \r\n                <div class=\"absolute bgYellow cirlce5px\" :style=\"{\r\n                    top: gameWorld?.isPlayer1Turn ? gameWorld?.player1.position.field.y + 'px' : gameWorld?.size.infoLineY04 + 5 + gameWorld?.size.boxHeight + 'px',\r\n                    left: gameWorld?.isPlayer1Turn ? gameWorld?.player1.position.res.x + 'px' : gameWorld?.player2.position.res.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px'\r\n                }\">\r\n                    <v-btn target=\"_blank\" text class=\"bg shine w100p\" @click=\"nextTurn\">\r\n                        End Turn\r\n                    </v-btn>\r\n                </div>\r\n\r\n                <!-- Player 1 -->\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.deck.y + 'px',\r\n                    left: gameWorld?.player1.position.deck.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.deck.length }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.hand.y + 'px',\r\n                    left: gameWorld?.player1.position.hand.x + 'px',\r\n                    width: gameWorld?.size.handWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.grave.y + 'px',\r\n                    left: gameWorld?.player1.position.grave.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.grave.length }}\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.res.y + 'px',\r\n                    left: gameWorld?.player1.position.res.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight * 2 + 5 + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.resAString }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.base.y + 'px',\r\n                    left: gameWorld?.player1.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div v-if=\"gameWorld?.popup?.attackShield\" class=\"absolute\" @click=\"selectChoice({})\" :style=\"{\r\n                    top: gameWorld?.player1.position.base.y + 'px',\r\n                    left: gameWorld?.player1.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px',\r\n                    'background-color': '#FFFF00'\r\n                }\"> Shield\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.shield.y + 'px',\r\n                    left: gameWorld?.player1.position.shield.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.miniboxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.shield.length }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.field.y + 'px',\r\n                    left: gameWorld?.player1.position.field.x + 'px',\r\n                    width: gameWorld?.size.fieldWidth + 'px',\r\n                    height: gameWorld?.size.fieldHeight + 'px'\r\n                }\">\r\n                </div>\r\n\r\n                <!-- Player 2 -->\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.deck.y + 'px',\r\n                    left: gameWorld?.player2.position.deck.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.deck.length }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.hand.y + 'px',\r\n                    left: gameWorld?.player2.position.hand.x + 'px',\r\n                    width: gameWorld?.size.handWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.grave.y + 'px',\r\n                    left: gameWorld?.player2.position.grave.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.grave.length }}\r\n                </div>\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.res.y + 'px',\r\n                    left: gameWorld?.player2.position.res.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight * 2 + 5 + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.resAString }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.base.y + 'px',\r\n                    left: gameWorld?.player2.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div v-if=\"gameWorld?.popup?.attackShield\" class=\"absolute\" @click=\"selectChoice({})\" :style=\"{\r\n                    top: gameWorld?.player2.position.base.y + 'px',\r\n                    left: gameWorld?.player2.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px',\r\n                    'background-color': '#FFFF00'\r\n                }\"> Shield\r\n                </div>\r\n\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.shield.y + 'px',\r\n                    left: gameWorld?.player2.position.shield.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.miniboxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.shield.length }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.field.y + 'px',\r\n                    left: gameWorld?.player2.position.field.x + 'px',\r\n                    width: gameWorld?.size.fieldWidth + 'px',\r\n                    height: gameWorld?.size.fieldHeight + 'px'\r\n                }\">\r\n                </div>\r\n\r\n                <div class=\"absolute bgWhite\" :style=\"{\r\n                    display: 'none',\r\n                    top: gameWorld.size.centerY + 'px',\r\n                    left: gameWorld.size.centerX + 'px',\r\n                    width: gameWorld?.size.cardWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                    Center card\r\n                    {{ cards.length }}\r\n                </div>\r\n\r\n                <div v-for=\"card in cards\" :key=\"'B' + card.index\">\r\n                    <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                        @mouseover=\"showCard\" @click=\"selectCard\">\r\n                    </gameCard>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"gameWorld?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:6; width:100%; height: 64px; position:fixed; top:0px; left:120px;\">\r\n\r\n            <div class=\"flex-wrap\" style=\"background-color: #FFFF00E0; width:80%; height:100%;\">\r\n                <h3 class=\"text-center m10px\">{{ gameWorld.popup.text }}</h3>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in gameWorld.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                        <gameCard v-else-if=\"gameWorld.popup.showCards && choice.id\" :card=\"choice\"\r\n                            folder=\"Gundam/cards/\" :shine=\"true\" @mouseover=\"showCard\" @click=\"selectCard\">\r\n                        </gameCard>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <br><br><br>{{ gameWorld?.player2.shield[0].name }}\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport helperAnimation from '../../helpers/helperAnimation';\r\nimport gameGundamManager from './manager';\r\nimport gameCard from './gameCard';\r\n\r\nexport default {\r\n    name: 'game-gundam',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        freeze: false,\r\n        cards: [],\r\n        showCardId: { id: '', position: { x: 0, y: 0 }, width: 300 },\r\n        gameWorld: null\r\n    }),\r\n    mounted() {\r\n        window.addEventListener(\"resize\", () => {\r\n            //this.gameWorld = this.gameGundamManager.refreshGameSize(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        showText(text) { alert(text); },\r\n        showCard(card) {\r\n            this.showCardId.id = card.id;\r\n        },\r\n        start() {\r\n            this.gameWorld = gameGundamManager.createGame(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame(animate = true) {\r\n            this.cards = this.gameWorld.cards.filter(x => x.show);\r\n            this.refreshG++;\r\n            if (animate)\r\n                setTimeout(() => { this.beginAnimation(); }, 1);\r\n        },\r\n        beginAnimation() {\r\n            const cardsToAnimate = this.gameWorld.cards.filter(x => x.show && x.to);\r\n            if (cardsToAnimate.length < 1) return;\r\n\r\n            this.freeze = true;\r\n            const animationTime = 500;\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n        },\r\n        endAnimation() {\r\n            this.gameWorld = gameGundamManager.endAnimation();\r\n            this.freeze = false;\r\n            this.refreshGame(false);\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze) return;\r\n            this.gameWorld = gameGundamManager.nextTurn();\r\n            this.refreshGame();\r\n        },\r\n        selectCard(card) {\r\n            if (this.freeze) return;\r\n            this.gameWorld = gameGundamManager.selectCard(card);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.gameWorld = gameGundamManager.selectChoiceType(choice);\r\n            this.refreshGame();\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gameGundam.vue?vue&type=template&id=52fc30b4&\"\nimport script from \"./gameGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./gameGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game-gundam></game-gundam>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport gameGundam from '../../games/gundamold/gameGundam';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, gameGundam},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=6f062a44&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = 500) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = 500) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","refreshG","style","top","gameWorld","player1","position","deck","height","boxHeight","handHeight","cardHeight","attackShield","base","$event","_e","miniboxHeight","y","fieldHeight","player2","display","size","cards","card","selectable","choice","text","GameGundamCardUnit","static","player","choiceType","choiceCard","hand","filter","x","index","field","push","location","global","locationField","cardSize","active","playCost","refreshHand","refreshField","cardCommandPilot","locationHand","unitsOnField","isCardUnit","unitsOnFieldWithoutPilot","pair","PilotTargetAvailable","map","CommandtargetAvailable","targetUnit","length","showPopupSelectPilotOrCommand","GameGundamEffect","trigger","card1","card2","multiTriggers","onpair","onlink","effects","effect","includes","concat","result","forEach","stop","applyEffect","target","showPopupSelectCard","shield","splice","spawnCard","deckCards","showPopupSelectHiddenCard","bottomCard","find","log","cancel","level","value","effectClone","clone","effect2","removeEndTurn","ap","hp","removeObj","refreshHandOpponent","resourcesEx","resourcesAvailable","resAString","getRes","resourcesMax","breach","targets","attribute","apply","onplay","attackActiveEnnemy","immuneAp","lost","fx","join","_defineProperty","GameGundamCardCommand","CommandTargetAvailable","getCardsByIndex","effectResult","command","to","center","explode","GameGundamCardPilot","pairCards","GameGundamCardBase","sendToGrave","isPlayer1Turn","world","degree","rotation","cardUnit","cardPilot","cardHeight25Percent","zindex","isLink","showPopup","targetAvailable","prepareResetSelectable","awaitingCardChoice","selectableOld","popup","showCards","hasBase","awaitingAttackTarget","choices","cardNumber","i","locationShield","show","res","boxSize","grave","locationBase","isTrash","bgposition","type","isCardPilot","isCardCommand","cardCommand","isCardCommandPilot","isCardBase","cardBase","ids","logs","obj","Object","assign","array","property","sort","Math","random","gridAndSize","w","h","desiredHeight","desiredWidth","gameWidth","gameHeight","cardWidth","boxWidth","handWidth","centerX","centerY","infoLineX1","infoLineX2","infoLineX3","infoLineY01","infoLineY02","infoLineY03","infoLineY04","infoLineY05","infoLineY07","infoLineY06","infoLineY08","infoLineY04bis","infoLineY06bis","fieldWidth","isPlayer1","setup","calculateGameSize","createPlayer","getPlayerPosition","floor","nonPlayerTurn","getPlayerTurn","addToShield","draw","createDeck","sortRandom","number","resourcesRemaining","resBString","createDefaultBase","id","locationDeck","manager","createGame","nextTurn","opponent","getPlayerTurnOpponent","refreshHandPosition","removeOneTurnEffect","setActive","resources","baseText","setSelectableOff","getHandPosition","isSelectable","getFieldPosition","max","isCostAvailable","cost","getCardHandler","selectChoiceCard","selectAttackTarget","playParams","play","attack","refreshFieldPosition","playCardCost","lastChoiceType","selectCard","resetSelectable","showPopupSelectAttackTarget","battle","attackCard","endFight","burst","message","remainingCost","posIndex","getCardPosition","cardsLength","useRotateWidth","widthAvailable","rotateWidth","getCenteredX","elementWidth","totalElements","zoneWidth","marginCount","zoneWidthAvailable","marginWidth","left","transform","cursor","shine","class","w100p","h100p","folder","$emit","preventDefault","hidestat","gameCard","freeze","showCardId","window","addEventListener","start","showText","alert","showCard","gameGundamManager","breakpoint","refreshGame","animate","setTimeout","beginAnimation","cardsToAnimate","animationTime","animations","from","isIncrement","helperAnimation","endAnimation","selectChoice","selectChoiceType","menuBarGundam","gameGundam","element","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","t","min","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","document","getElementById","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve"],"sourceRoot":""}