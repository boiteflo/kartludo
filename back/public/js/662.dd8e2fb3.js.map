{"version":3,"file":"js/662.dd8e2fb3.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgTest.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgTest.vue","webpack://front/./src/pages/gundam/GundamTcgTest.vue?b0d7","webpack://front/./src/pages/gundam/GundamTcgTest.vue?6fc7","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\n        bgYellow2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg:true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize12: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 1;\r\n    static taskShowTitle = 2;\r\n    static taskDrawToCenter = 3;\r\n    static taskDrawToHand = 4;\r\n    static taskEndAnimation = 5;\r\n    static taskCardToCenter = 6;\r\n    static taskCardToTrash = 7;\r\n    static taskDeleteCard=8;\r\n\r\n    static addTasks(list, tasks){\r\n        tasks.forEach(task => {\r\n           if(!this.alreadyInclude(list, task)) \r\n                list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task){\r\n        return list.find(x=> this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2){\r\n        const result = task1.id === task2.id \r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import gameTask from './gameTask';\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 0;\r\n    static locationDeck = 1;\r\n    static locationShield = 2;\r\n    static locationHand = 3;\r\n    static locationField = 4;\r\n    static locationBase = 5;\r\n    static locationTrash = 6;\r\n    static locationResource = 7;\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawn(player, card, locationFrom, locationTo) {\r\n        const cardSpawn = this.spawnNotShown(player,card, locationFrom, locationTo);\r\n        global.game.cards = global.addIn(global.game.cards, cardSpawn);\r\n        gameTask.addTasks(global.game.tasks, [{id:gameTask.taskRefreshField, isPlayer1:player.isPlayer1}]);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnNotShown(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card.index);\r\n\r\n        card.position = player.positions[from];\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        return card;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        player[from] = global.removeByIndex(player[from], card);\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1}]);\r\n\r\n        return card;\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.canAttack=active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to) card.to = card.position;\r\n        card.to.rotation= degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1){\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1){\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array){\r\n        return array.splice(0,1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Utils\r\n    static log(text) { this.world.logs = text + '<br>' + this.world.logs; }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x0, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width -  grid.box.width - (2*grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize = false) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            card.to = this.getCardPosition(index, cards.length, position, cardSize, card);\r\n            card.location = position.location;\r\n        });\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getCardPosition(index, total, position, cardSize, card) {\r\n        const degree = card.active ? 0 : 90;\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: [] };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawn(global.game.player1, null, global.locationDeck, global.locationHand);\r\n            global.spawn(global.game.player2, null, global.locationDeck, global.locationHand);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskShowTitle, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: 500 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: 500 }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = {...card.position, x:card.positionDrag.x, y:card.positionDrag.y};\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        return game.manager.playCard(game, card1, card2, zone);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks.splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n            const opponent = task.isPlayer1 ? game.player2 : game.player1;\r\n\r\n            if (task.id === gameTask.taskRefreshField){\r\n                // this.endAnimation(game);\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToCenter) {\r\n                const card = global.spawn(player, null, global.locationDeck, global.locationHand);\r\n                card.to = global.grid.center;\r\n                global.game.lastCard = card;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToHand) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskShowTitle)\r\n                game.showTitle = task.value;\r\n\r\n            else if(task.id === gameTask.taskEndAnimation)\r\n                this.endAnimation(game);\r\n\r\n            else if(task.id === gameTask.taskDeleteCard){\r\n                global.game.cards = global.removeByIndex(global.game.cards, task.card);\r\n                if(task.removeBase){\r\n                    global.getPlayer(task.card.isPlayer1).base=[];\r\n                }\r\n            }\r\n\r\n            else if(task.id === gameTask.taskCardToCenter){\r\n                task.card.to = global.grid.center;\r\n                task.card.zindex=11;\r\n            }\r\n\r\n            else if(task.id === gameTask.taskCardToTrash){\r\n                game.manager.refreshFieldAndHand(player);\r\n                game.manager.refreshFieldAndHand(opponent);\r\n                task.card.to = global.clone(global.getPlayer(task.card.isPlayer1).positions.trash);\r\n                task.card.hidestat=true;\r\n                task.card.to.height=0;\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n\r\n            card.selectable = isCostAvailable;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone) {\r\n        if (card1.isPlayer1 !== player.isPlayer1 || !card1.selectable)\r\n            this.sendCardBackToSquareOne(card1);\r\n\r\n        if (card1.location === global.locationHand)\r\n            this.playFromHand(player, card1, card2, zone);\r\n        else if (card1.location === global.locationField)\r\n            this.attack(player, card1, card2, zone);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        card.to = global.clone(card.position);\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardUnit(card1))\r\n            card1.canAttack = true;\r\n\r\n        player.resourcesAvailable -= card1.cost;\r\n        global.move(player, card1, card1.location, player.positions.field.location);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            this.attackCard(player, opponent, card1, target);\r\n        } else {\r\n            const card = global.getAndRemoveFirst(opponent.shield);\r\n            global.spawn(opponent, card, global.locationShield, global.locationTrash);\r\n            this.moveCardToCenterThenDeleteIt(card);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n        global.setActive(card1, false);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target) {\r\n        let damage = attacker.ap;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        attacker.hp -= damage;\r\n\r\n        if (attacker.hp < 1) {\r\n            global.move(player, attacker, attacker.location, player.positions.trash.location);\r\n            this.moveCardToCenterThenDeleteIt(attacker);\r\n        }\r\n        if (target.hp < 1) {\r\n            global.move(opponent, target, opponent.location, opponent.positions.trash.location);\r\n            this.moveCardToCenterThenDeleteIt(target);\r\n        }\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card },\r\n            { id: gameTask.taskCardToTrash, delay, card },\r\n            { id: gameTask.taskDeleteCard, card, removeBase:true }\r\n        ]);\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 5, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 5, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.spawnNotShown(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.spawnNotShown(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        playerOpponent.resourcesEx+=1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawn(player, card, global.locationBase, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        player.resourcesMax+=1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand);\r\n        positioner.refresh(player.field, player.positions.field);\r\n        positioner.refresh(player.base, player.positions.base, true);      \r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone){     \r\n        const player = global.getPlayerTurn(); \r\n        cardHandler.play(player, card1, card2, zone);\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\",staticStyle:{\"width\":\"25px\",\"height\":\"15px\",\"top\":\"-0px\",\"font-size\":\"10px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\"\r\n      style=\"width:25px; height:15px; top:-0px; font-size:10px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=c6f410b0&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c6f410b0\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\" :hidestat=\"card.hidestat\"\r\n                @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\" @dragover=\"onDragOver\"\r\n                @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text :class=\"{ bg:true, w100p: true, h100p: true, shine: !freeze, fontSize12: true }\"\r\n                    @click=\"nextTurn\" style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px;\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: false,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCardOnZone(card, drop) {\r\n            this.game = gameManager.playCard(this.game, card, null, drop);\r\n            this.refreshGame();\r\n        },\r\n        playCardOnCard(card, cardDrop) {\r\n            this.game = gameManager.playCard(this.game, card, cardDrop, null);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = 500;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = cardsToAnimate.length < 1 ? 10 : 500;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, 500);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card.moving) return;\r\n\r\n            // Gestion du touch ou de la souris\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event, drop) {\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            card.moving = false;\r\n\r\n            if (drop.index === card.index)\r\n                drop = this.getTouchZoneOrCard(x, y, card.index);\r\n\r\n            if (drop.zone)\r\n                this.playCardOnZone(card, drop);\r\n            else\r\n                this.playCardOnCard(card, drop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n            let zoneOrCard = this.getTouchZoneOrCard(touch.clientX, touch.clientY, card.index);\r\n            if (!zoneOrCard || card.index == zoneOrCard.index)\r\n                return;\r\n\r\n            if (zoneOrCard.zone)\r\n                this.playCardOnZone(card, zoneOrCard);\r\n            else\r\n                this.playCardOnCard(card, zoneOrCard);\r\n        },\r\n        getTouchZoneOrCard(x, y, ignoreIndex) {\r\n            const card = this.cards.find(card => card.index !== ignoreIndex && this.isInside(x, y, card.position));\r\n            const zone = card ? null : this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            return card || zone;\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=3dfe1e13&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=3dfe1e13&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3dfe1e13\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgTest.vue?vue&type=template&id=2d8eb5c4&\"\nimport script from \"./GundamTcgTest.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = 500) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = 500) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","class","absolute","box","fontSize12","textVerticalCenter","bgYellow2","style","getFieldStyle","card","selectable","$event","showCard","onDragOver","left","game","x0","w100p","shine","gameTask","static","list","tasks","forEach","task","alreadyInclude","push","find","x","isEqual","task1","task2","result","id","isPlayer1","value","_defineProperty","global","location","locationEmpty","locationDeck","locationShield","locationHand","locationField","locationBase","locationResource","player","locationFrom","locationTo","cardSpawn","spawnNotShown","cards","addIn","addTasks","taskRefreshField","from","getLocationArrayProperty","to","removeByIndex","index","splice","position","positions","active","clone","getNextIndex","canAttack","degree","rotation","player1","player2","array","filter","includes","concat","sort","Math","random","text","world","logs","obj","Object","assign","positioner","grid","border","border2","divide","widthB","heightB","center","getCardSize","boxbig","hand","field","base","createZone","x15","y8","y7","shield","y9","y6","deck","y10","y5","trash","y11","y4","locationTrash","resource","y12","y3","y13","x1","y0","x14","x2","y1","y2","zone","y","p1","p2","useZoneSize","zoneHeight","cardSize","length","getCardPosition","count","desiredWidth","desiredHeight","total","getXCenter","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","ap","hp","totalWidth","elementWidth","halfWidth","half","indexCenter","sizeWidth","gameManager","manager","popup","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","spawn","createCard","sortRandom","empty","setup","createGame","nextTurn","playerId","taskShowTitle","delay","taskDrawToCenter","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","card1","card2","playCard","opponent","refreshFieldAndHand","lastCard","taskDrawToHand","taskEndAnimation","taskDeleteCard","removeBase","getPlayer","taskCardToCenter","zindex","taskCardToTrash","hidestat","cardHandler","resourcesMax","max","resourcesAvailable","isCostAvailable","level","cost","sendCardBackToSquareOne","playFromHand","attack","isSamePlayer","isCardUnit","move","getPlayerTurnOpponent","end","target","attackCard","getAndRemoveFirst","moveCardToCenterThenDeleteIt","setActive","attacker","damage","message","alert","type","isCardPilot","isCardCommand","resAString","resourcesEx","createDefaultBase","playerOpponent","isPlayer1Turn","getPlayerTurn","setSelectable","play","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","_e","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","playCardOnZone","drop","playCardOnCard","cardDrop","setTimeout","setDrag","beginAnimation","animationTime","cardsToAnimate","animations","map","isIncrement","helperAnimation","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","moving","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","zIndex","onDrop","pageX","pageY","getData","getCard","getTouchZoneOrCard","touch","changedTouches","zoneOrCard","ignoreIndex","isInside","minX","minY","maxX","maxY","showText","getGridPlace","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","t","min","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","log","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve"],"sourceRoot":""}