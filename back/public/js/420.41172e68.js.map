{"version":3,"file":"js/420.41172e68.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\n        bgYellow2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize20\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize12: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"6\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l(([]),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game?.popup)?_c('div',[_vm._v(\" \"+_vm._s(_vm.game.popup)+\" \")]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"2\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 'RefreshField';\r\n    static taskShowTitle = 'ShowTitle';\r\n    static taskDrawToCenter = 'DrawToCenter';\r\n    static taskDrawToHand = 'DrawToHand';\r\n    static taskEndAnimation = 'EndAnimation';\r\n    static taskCardToMiniCenter = 'CardToMiniCenter';\r\n    static taskCardToMiniCenter2 = 'CardToMiniCenter2';\r\n    static taskTextToMiniCenter2 = 'TextToMiniCenter2';\r\n    static taskTextToTrash = 'TextToTrash';\r\n    static taskDeleteText = 'DeleteText';\r\n    static taskCardToCenter = 'CardToCenter';\r\n    static taskCardToTrash = 'CardToTrash';\r\n    static taskDeleteCard = 'DeleteCard';\r\n    static taskAttack = 'Attack';\r\n    static taskSelectCards = 'SelectCards';\r\n    static taskPlayCard = 'PlayCard';\r\n    static taskPlayCardWithEffect = 'PlayCardWithEffect';\r\n    static taskApplyEffect = 'ApplyEffect';\r\n    static taskCardToHand = 'CardToHand';\r\n\r\n    static addTasks(list, tasks) {\r\n        tasks.forEach(task => {\r\n            //if (!this.alreadyInclude(list, task))\r\n            list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid){\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if(task)\r\n            delete(task.delay);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","/* eslint-disable */\r\nimport gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        card1.effectsRemaining = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop) return;\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n            toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effect ? [] : card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        return effects.filter(effect => effect.trigger == trigger);\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1)\r\n                return;\r\n            const card = player.shield[0];\r\n            const delay = this.animDuration;\r\n            const text = 'Get one shield to hand';\r\n            gameTask.addTasks(global.game.tasks,\r\n                [/*{ id: gameTask.taskCardToMiniCenter, card1:card1, isPlayer1: card.isPlayer1 },\r\n                { id: gameTask.taskTextToMiniCenter2, delay, text },*/\r\n                { id: gameTask.taskCardToHand, delay, card1:card, isPlayer1: card.isPlayer1 },\r\n                { id: gameTask.taskTextToTrash },\r\n                { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n                { id: gameTask.taskDeleteText },\r\n                ]);\r\n            global.logEffect(effect, text);\r\n            return {};\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            /*const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            gameTask.addTasks(global.game.tasks, [{\r\n                id: gameTask.taskSelectCards,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }]);*/\r\n            return {}\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1BottomSelect') {\r\n            global.logEffect(effect, `With ${card1.name}, move top 2 deck cards Above or bellow`);\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const cancel = shield.level < effect.value;\r\n            if (cancel)\r\n                global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { cancel };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            global.spawnCard(player, card1, card1.location, global.locationHand);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            global.move(player, card1, global.locationShield, global.locationField);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToBase') {\r\n            card1.location = global.locationShield;\r\n            card1.position = player.positions.shield;\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard, card1: player.shield[0], zone: player.positions.base }]);\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = global.getRes(player);\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.canAttack = false;\r\n            global.move(player, card, card.location, global.locationField);\r\n            global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n            this.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemyLvXOrLower') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneApXIfBreach') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static animDuration=500;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 0;\r\n    static locationDeck = 1;\r\n    static locationShield = 2;\r\n    static locationHand = 3;\r\n    static locationField = 4;\r\n    static locationBase = 5;\r\n    static locationTrash = 6;\r\n    static locationResource = 7;\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawn(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.spawnNotShown(player, card, locationFrom, locationTo);\r\n        cardSpawn.zindex = 11;\r\n        global.game.cards = global.addIn(global.game.cards, cardSpawn);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnNotShown(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card.index);\r\n\r\n        card.position = player.positions[from];\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        return card;\r\n    }\r\n    \r\n    static spawnOrMove(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const needSpawn = global.cards.includes(x=> x.index === card.index);\r\n        if(needSpawn) \r\n            this.spawn(player, card, locationFrom, locationTo, ignoreRefresh);\r\n        else\r\n            this.move(player, card, locationFrom, locationTo, ignoreRefresh);\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        player[from] = global.removeByIndex(player[from], card);\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, cardUnit, cardPilot) {\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n        effects.apply(effects.onpair, player, cardUnit, cardPilot);\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n            effects.apply(effects.onlink, player, cardUnit, cardPilot);\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Tasks \r\n    static startAttackAnimation(player, opponent, attacker, target) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1: attacker, isPlayer1: attacker.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay, card1: target, isPlayer1: target.isPlayer1 },\r\n            { id: gameTask.taskAttack, player, opponent, attacker, target, delay }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterThenBackToSquareOne(card1, card2) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay * 2, card1: card2, isPlayer1: card2.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card2.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenBackToSquareOne(card1, text) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenDeleteIt(card1, text) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskCardToTrash, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card1, removeBase = false) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskCardToTrash, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, removeBase, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenBackToSquareOne(card1) {\r\n        const delay = this.animDuration;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card1.isPlayer1 },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToTrashThenDeleteIt(card1, removeBase = false) {\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToTrash, delay: this.animDuration, card1, isPlayer1: card1.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card1, removeBase, isPlayer1: card1.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) { \r\n        this.log(text);\r\n        effect.texts = (effect.texts ? effect.texts : []).concat([text]);\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = {\r\n            x: grid.x2, y: grid.y2,\r\n            width: grid['x' + (divide - 2)] - grid.x2, height: grid['y' + (divide - 2)] - grid.y2, location: 0, zone: 'centerMini1'\r\n        };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize = false) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            card.to = this.getCardPosition(index, cards.length, position, cardSize, card);\r\n            card.location = position.location;\r\n            card.zindex= card.pair ? 2 : 1;\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getCardPosition(index, total, position, cardSize, card) {\r\n        const degree = card.active ? 0 : 90;\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawn(global.game.player1, null, global.locationDeck, global.locationHand, true);\r\n            global.spawn(global.game.player2, null, global.locationDeck, global.locationHand, true);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        global.animDuration = manager.getAnimDuration();\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskRefreshField, isPlayer1: true },\r\n            { id: gameTask.taskRefreshField, isPlayer1: false },\r\n            { id: gameTask.taskShowTitle, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: global.animDuration }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        game.manager.playCard(global.getPlayerTurn(), card1, card2, zone);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return game.manager.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks[0];// .splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n            // const opponent = task.isPlayer1 ? game.player2 : game.player1;\r\n\r\n            if (task.id === gameTask.taskRefreshField) {\r\n                // this.endAnimation(game);\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToCenter) {\r\n                const card = global.spawn(player, null, global.locationDeck, global.locationHand);\r\n                card.to = global.grid.center;\r\n                global.game.lastCard = card;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToHand) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskShowTitle) {\r\n                game.showTitle = task.value;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskEndAnimation) {\r\n                this.endAnimation(game);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteCard) {\r\n                global.game.cards = global.removeByIndex(global.game.cards, task.card1);\r\n                if (task.removeBase) {\r\n                    global.getPlayer(task.card1.isPlayer1).base = [];\r\n                }\r\n                if (task.card1.pair) {\r\n                    global.game.cards = global.removeByIndex(global.game.cards, task.card1.pair);\r\n                    delete (task.card1.pair);\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter) {\r\n                task.card1.to = global.grid.centerMini.card1;\r\n                task.card1.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter2) {\r\n                if (task.card1) {\r\n                    task.card1.to = global.grid.centerMini.card2;\r\n                    task.card1.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToCenter) {\r\n                task.card1.to = global.grid.center;\r\n                task.card1.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToTrash) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                game.manager.refreshFieldAndHand(cardPlayer);\r\n                if (task.card1.location !== global.locationTrash)\r\n                    global.move(cardPlayer, task.card1, task.card1.location, global.locationTrash, true);\r\n                task.card1.to = global.clone(cardPlayer.positions.trash);\r\n                if (task.card1.pair) {\r\n                    task.card1.pair.to = task.card1.to;\r\n                    global.move(cardPlayer, task.card1.pair, task.card1.pair.location, global.locationTrash, true);\r\n                }\r\n                task.card1.hidestat = true;\r\n                task.card1.to.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskAttack) {\r\n                game.manager.attack(task.player, task.opponent, task.attacker, task.target);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToMiniCenter2) {\r\n                game.textEffect = {\r\n                    text: task.text,\r\n                    position: global.clone(global.grid.centerMini.card2)\r\n                };\r\n                game.textEffect.to = global.clone(game.textEffect.position);\r\n                game.textEffect.position.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToTrash) {\r\n                game.textEffect.position.height = global.grid.centerMini.card2.height;\r\n                game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n                game.refreshOnlyTextEffect=true;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteText) {\r\n                game.refreshOnlyTextEffect=false;\r\n                delete (game.textEffect);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskSelectCards) {\r\n                game.popup = task;\r\n                return game;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToHand) {\r\n                global.spawn(player, task.card1, task.card1.location, global.locationHand);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskPlayCard) {\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            else if(task.id === gameTask.taskPlayCardWithEffect){\r\n                const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n                const result = game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, true);\r\n                if (result && result.stop)\r\n                    return game;\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n\r\n            card.selectable = isCostAvailable;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, isShowingEffect) {\r\n        const noDropZone = !card2 && !zone;\r\n        if (noDropZone) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (card1.location === global.locationHand)\r\n            return this.playFromHand(player, card1, card2, zone, isShowingEffect);\r\n        else if (card1.location === global.locationField)\r\n            return this.attack(player, card1, card2, zone);\r\n        else\r\n            return this.playCard(player, card1, card2, zone, isShowingEffect, false);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone, isShowingEffect) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer || zone.location == global.locationHand) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        return this.playCard(player, card1, card2, zone, isShowingEffect, true);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect, playCost) {\r\n        if(!global.cards.includes(x=> x.index === card1.index)){\r\n            global.cards = global.cards.concat([card1]);\r\n        }\r\n\r\n        const effectsRemainings = effects.getEffectsRemaining(effects.onplay, card1, card2);\r\n        const text = effectsRemainings.map(x => `${x.effect} ${x.value}`).join('<br>');\r\n        const delay = global.animDuration;\r\n        if (effectsRemainings && effectsRemainings.length > 0) {\r\n            if (!isShowingEffect) {\r\n                gameTask.addTasks(global.game.tasks, [\r\n                    { id: gameTask.taskCardToMiniCenter, card1: card1, isPlayer1: card1.isPlayer1 },\r\n                    { id: gameTask.taskTextToMiniCenter2, delay, text },\r\n                    { id: gameTask.taskPlayCardWithEffect, isPlayer1: card1.isPlayer1, card1, card2, zone }\r\n                ]);\r\n                return;\r\n            } else\r\n                gameTask.addTasks(global.game.tasks, [\r\n                    { id: gameTask.taskTextToTrash, delay },\r\n                    { id: gameTask.taskDeleteText },\r\n                ]);\r\n        }\r\n\r\n        const effectResult = effects.apply(effects.onplay, player, card1);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        if (this.isCardUnit(card1)) {\r\n            card1.canAttack = true;\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            global.spawnOrMove(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskCardToTrash, card1: player.base[0] }]);\r\n\r\n            global.spawnOrMove(player, card1, card1.location, global.locationBase);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardPilot(card1) && card2 && this.isCardUnit(card2)) {\r\n            if (card2.pair) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n            global.pair(player, card2, card1);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardCommand(card1)) {\r\n            const effectResult = effects.apply(effects.command, player, card1);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                player.resourcesAvailable -= card1.cost;\r\n\r\n            global.spawnOrMove(player, card1, card1.location, global.locationTrash);\r\n            global.moveCardToMiniCenterWithTextThenDeleteIt(card1, 'giant effect');\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            if (card2.active) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            global.startAttackAnimation(player, opponent, card1, card2);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            global.startAttackAnimation(player, opponent, card1, target);\r\n            return;\r\n        } else {\r\n            global.setActive(card1, false);\r\n\r\n            let card = opponent.shield[0];\r\n            const effectResult = effects.apply(effects.burst, opponent, card, card1);\r\n            if (effectResult.stop) {\r\n                return;\r\n            }\r\n\r\n            global.spawn(opponent, card, global.locationShield, global.locationTrash);\r\n            global.moveCardToCenterThenDeleteIt(card);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target) {\r\n\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return;\r\n        }\r\n\r\n        const delay = global.animDuration;\r\n        let damage = attacker.ap;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        attacker.hp -= damage;\r\n\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            global.move(player, attacker, attacker.location, player.positions.trash.location, true);\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : global.animDuration;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay: delayForTarget, card1: attacker, isPlayer1: attacker.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            global.move(opponent, target, target.location, opponent.positions.trash.location, true);\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay, card1: target, isPlayer1: target.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        if (attacker.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card1: attacker, isPlayer1: attacker.isPlayer1 });\r\n        if (target.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card1: target, isPlayer1: target.isPlayer1 });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n        /*\r\n                if (!breach && global.isCardUnit(target) && card.breach && target.hp < 1) {\r\n                    result =this.attack(player, card, opponent.base ?? { text: 'shield' }, card.breach);\r\n                }\r\n        if (!breach) {\r\n            attack = breach ?? target.ap;\r\n            attack = card.immuneAp && card.immuneAp > attack ? 0 : attack;\r\n            card.hp -= attack;\r\n        }\r\n                    */\r\n    }\r\n\r\n    static selectChoiceCard() { // game, card\r\n        alert('Changer tout le système pour inclure plus de task, du genre appliquer l effet de cette CaretPosition, etc ...');\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 500; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        // this.createDefaultBase(game.player1);\r\n        // this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.spawnNotShown(game.player1, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n            global.spawnNotShown(game.player2, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        game.player1.deck = [global.createCard(\"ST02-015\")].concat(game.player1.deck);\r\n        game.player2.deck = [global.createCard(\"ST02-015\")].concat(game.player2.deck);\r\n\r\n        const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        playerOpponent.resourcesEx+=1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawn(player, card, global.locationBase, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        player.resourcesMax+=1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n        \r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand);\r\n        positioner.refresh(player.field, player.positions.field);\r\n        positioner.refresh(player.base, player.positions.base, true);      \r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, isShowingEffect){\r\n        return cardHandler.play(player, card1, card2, zone, isShowingEffect);\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2){\r\n        cardHandler.attackCard(player, opponent, card1, card2);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\",staticStyle:{\"width\":\"35px\",\"height\":\"15px\",\"top\":\"-0px\",\"font-size\":\"12px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\"\r\n      style=\"width:35px; height:15px; top:-0px; font-size:12px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=4b139f02&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b139f02\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize20\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize12: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:6; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in []\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\">\r\n            {{ game.popup }}\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:2\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: false,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if(this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect(){\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card.moving) return;\r\n\r\n            // Gestion du touch ou de la souris\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=b22ca14c&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=b22ca14c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b22ca14c\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.animDuration) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if(duration === -1) \r\n            duration = global.animDuration;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-107.webp\": 66642,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize12","textVerticalCenter","bgYellow2","style","getFieldStyle","grid","game","textEffect","position","domProps","_e","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","text","gameTask","static","list","tasks","forEach","task","push","find","x","isEqual","task1","task2","result","id","isPlayer1","value","index","taskid","reverse","t","delay","_defineProperty","GameGundamEffect","trigger","player","card1","card2","multiTriggers","onpair","onlink","effects","effect","includes","concat","effectsRemaining","length","nothing","toBeRemoved","stop","applyEffect","target","global","logEffect","JSON","stringify","shield","animDuration","addTasks","taskCardToHand","taskTextToTrash","taskRefreshField","taskDeleteText","base","cancel","level","effectClone","clone","effect2","removeEndTurn","ap","hp","spawnCard","location","locationHand","refreshHandOpponent","move","locationShield","locationField","positions","taskPlayCard","zone","resourcesEx","resourcesAvailable","resAString","resourcesMax","getRes","breach","targets","hand","attribute","canAttack","apply","onplay","attackActiveEnnemy","immuneAp","cards","lost","fx","log","join","locationEmpty","locationDeck","locationBase","locationResource","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnNotShown","zindex","addIn","from","getLocationArrayProperty","to","removeByIndex","splice","active","needSpawn","spawn","cardUnit","cardPilot","pair","isPaired","isLink","getNextIndex","degree","rotation","player1","player2","array","sort","Math","random","opponent","attacker","taskCardToMiniCenter","taskCardToMiniCenter2","taskAttack","taskTextToMiniCenter2","taskCardToTrash","taskDeleteCard","removeBase","taskCardToCenter","logs","texts","obj","Object","assign","positioner","border","border2","divide","widthB","heightB","boxbig","field","getCardSize","card6","center","centerMini","x2","y","y2","createZone","x15","y8","y7","y9","y6","deck","y10","y5","trash","y11","y4","locationTrash","resource","y12","y3","y13","x1","y0","x14","y1","show","p1","p2","useZoneSize","zoneHeight","cardSize","getCardPosition","getPairPosition","count","desiredWidth","desiredHeight","total","getXCenter","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","sizeWidth","gameManager","manager","popup","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","playerId","taskShowTitle","taskDrawToCenter","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","playCard","getPlayerTurn","selectChoiceCard","refreshFieldAndHand","lastCard","taskDrawToHand","taskEndAnimation","getPlayer","cardPlayer","hidestat","attack","refreshOnlyTextEffect","taskSelectCards","taskPlayCardWithEffect","cardHandler","max","isCostAvailable","cost","isShowingEffect","noDropZone","playFromHand","sendCardBackToSquareOne","isSamePlayer","playCost","effectsRemainings","getEffectsRemaining","map","effectResult","isCardUnit","spawnOrMove","isCardBase","isCardPilot","isCardCommand","command","moveCardToMiniCenterWithTextThenDeleteIt","getPlayerTurnOpponent","startAttackAnimation","end","setActive","burst","moveCardToCenterThenDeleteIt","battle","damage","dead","delayForTarget","alert","message","type","playerOpponent","isPlayer1Turn","removeOneTurnEffect","baseText","number","setSelectable","play","attackCard","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","moving","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","min","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}