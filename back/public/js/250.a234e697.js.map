{"version":3,"file":"js/250.a234e697.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\n        bgRed2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 3\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize20\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_vm._v(\" \"+_vm._s(_vm.game.textEffect?.text)+\" \")]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize12: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"6\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\"},[_vm._v(_vm._s(_vm.game?.popup.text))]),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l(([]),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game?.popup)?_c('div',[_vm._v(\" \"+_vm._s(_vm.game.popup)+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"2\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class gameTask {\r\n\r\n    static taskRefreshField = 1;\r\n    static taskShowTitle = 2;\r\n    static taskDrawToCenter = 3;\r\n    static taskDrawToHand = 4;\r\n    static taskEndAnimation = 5;\r\n    static taskCardToMiniCenter = 6;\r\n    static taskCardToMiniCenter2 = 7;\r\n    static taskTextToMiniCenter2 = 8;\r\n    static taskTextToTrash = 9;\r\n    static taskDeleteText = 10;\r\n    static taskCardToCenter = 11;\r\n    static taskCardToTrash = 12;\r\n    static taskDeleteCard = 13;\r\n    static taskAttack = 14;\r\n    static taskSelectCards = 15;\r\n\r\n    static addTasks(list, tasks) {\r\n        tasks.forEach(task => {\r\n            //if (!this.alreadyInclude(list, task))\r\n            list.push(task);\r\n        });\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid){\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if(task)\r\n            delete(task.delay);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","/* eslint-disable */\r\nimport gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n\r\n    // target\r\n    static self = 'self';\r\n    static unit = 'unit';\r\n    static pairUnit = 'pairUnit';\r\n\r\n    // type\r\n    static gainThisTurn = 'gainThisTurn';\r\n    static gain = 'gain';\r\n    static hand = 'hand';\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = card1.effect;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effect);\r\n\r\n        effects = effects.filter(effect => effect.trigger == trigger);\r\n        let result = {};\r\n\r\n        if (effects.length < 1)\r\n            return { nothing: true };\r\n\r\n        effects.forEach(effect => {\r\n            if (result.stop) return;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        if (effect.target && !card2) {\r\n            if (effect.target === 'unit') {\r\n                // global.showPopupSelectCard(card1, card1.CommandtargetAvailable);\r\n                global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        if (effect.effect === 'get1ShieldToHand') {\r\n            if (player.shield.length < 1) return;\r\n            global.spawn(player, null, global.locationShield, global.locationHand);\r\n            global.moveCardToMiniCenterWithTextThenBackToSquareOne(card1, 'Get one shield to hand');\r\n            global.logEffect(effect, 'Get one shield to hand');\r\n            return { stop: true, cards: [card1] }\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1Bottom') {\r\n            /*const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            gameTask.addTasks(global.game.tasks, [{\r\n                id: gameTask.taskSelectCards,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }];\r\n            return { stop: true }*/\r\n            return {};\r\n        }\r\n\r\n        else if (effect.effect === 'top2DeckCard1Top1BottomSelect') {\r\n            global.logEffect(effect, `With ${card1.name}, move top 2 deck cards Above or bellow`);\r\n        }\r\n\r\n        else if (effect.effect === 'protectionShieldLvXOrLower') {\r\n            if (player.base || card2.index) return;\r\n            const shield = player.shield[0];\r\n            const cancel = shield.level < effect.value;\r\n            if (cancel)\r\n                global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n            return { cancel };\r\n        }\r\n\r\n        else if (effect.effect === 'gainThisTurn') {\r\n            const effectClone = global.clone(effect);\r\n            delete effectClone.target;\r\n            effectClone.effect = effectClone.effect2;\r\n            global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n            this.applyEffect(player, card2, null, effectClone);\r\n            card2.removeEndTurn = [effectClone];\r\n            return { stop: true };\r\n        }\r\n\r\n        else if (effect.effect === 'incruise') {\r\n            card1.ap += effect.ap;\r\n            card1.hp += effect.hp;\r\n            global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n        }\r\n\r\n        else if (effect.effect === 'sendToHand') {\r\n            global.spawnCard(player, card1, card1.location, global.locationHand);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToField') {\r\n            global.move(player, card1, global.locationShield, global.locationField);\r\n            global.logEffect(effect, `${card1.name} is send to hand`);\r\n            return { stop: true, cancel: true, refreshHandOpponent: true };\r\n        }\r\n\r\n        else if (effect.effect === 'sendToBase') {\r\n            player.base = [];\r\n            const card = global.spawn(player, null, global.locationShield, global.locationBase, true);\r\n            const result = this.apply(GameGundamEffect.onplay, player, card, null);\r\n            if (result.nothing)\r\n                global.moveCardToCenterThenBackToSquareOne(card1);\r\n            global.logEffect(effect, `${card.name} is send to hand`);\r\n            return { stop: true, ...result };\r\n        }\r\n\r\n        else if (effect.effect === 'placeExResource') {\r\n            player.resourcesEx += effect.value;\r\n            player.resourcesAvailable += effect.value;\r\n            player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'placeRestedResource') {\r\n            player.resourcesMax += effect.value;\r\n            player.resAString = global.getRes(player);\r\n            global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n        }\r\n\r\n        else if (effect.effect === 'breach') {\r\n            if (!card1.breach || card1.breach < effect.value) {\r\n                card1.breach = effect.value;\r\n                global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'deploy') {\r\n            const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n            if (targets.length < 1) return;\r\n            const card = targets[0];\r\n            card.selectable = false;\r\n            card.canAttack = false;\r\n            global.move(player, card, card.location, global.locationField);\r\n            global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n            this.apply(GameGundamEffect.onplay, player, card, null);\r\n        }\r\n\r\n        else if (effect.effect === 'attackActiveEnnemyLvXOrLower') {\r\n            if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n                card1.attackActiveEnnemy = effect.value;\r\n                global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n            }\r\n        }\r\n\r\n        else if (effect.effect === 'immuneApXIfBreach') {\r\n            if (card1.breach) {\r\n                if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                    card1.immuneAp = effect.value;\r\n                    global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.effect];\r\n                lost.push(fx.effect);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 0;\r\n    static locationDeck = 1;\r\n    static locationShield = 2;\r\n    static locationHand = 3;\r\n    static locationField = 4;\r\n    static locationBase = 5;\r\n    static locationTrash = 6;\r\n    static locationResource = 7;\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        return 'trash';\r\n    }\r\n\r\n    static spawn(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const cardSpawn = this.spawnNotShown(player, card, locationFrom, locationTo);\r\n        cardSpawn.zindex = 11;\r\n        global.game.cards = global.addIn(global.game.cards, cardSpawn);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnNotShown(player, card, locationFrom, locationTo) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else\r\n            player[from] = global.removeByIndex(player[from], card.index);\r\n\r\n        card.position = player.positions[from];\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        return card;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo, ignoreRefresh) {\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        player[from] = global.removeByIndex(player[from], card);\r\n        player[to] = global.addIn(player[to], card);\r\n\r\n        if (!ignoreRefresh)\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, cardUnit, cardPilot) {\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n        effects.apply(effects.onpair, player, cardUnit, cardPilot);\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField, isPlayer1: player.isPlayer1 }]);\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n            effects.apply(effects.onlink, player, cardUnit, cardPilot);\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    // Tasks \r\n    static startAttackAnimation(player, opponent, attacker, target) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card: attacker, isPlayer1: attacker.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay, card: target, isPlayer1: target.isPlayer1 },\r\n            { id: gameTask.taskAttack, player, opponent, attacker, target, delay }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterThenBackToSquareOne(card, card2) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskCardToMiniCenter2, delay: delay * 2, card: card2, isPlayer1: card2.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card2.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenBackToSquareOne(card, text) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToMiniCenterWithTextThenDeleteIt(card, text) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToMiniCenter, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskTextToMiniCenter2, delay: delay * 2, text },\r\n            { id: gameTask.taskTextToTrash },\r\n            { id: gameTask.taskCardToTrash, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteText },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenDeleteIt(card, removeBase = false) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskCardToTrash, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, removeBase, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    static moveCardToCenterThenBackToSquareOne(card) {\r\n        const delay = 500;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToCenter, delay, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskRefreshField, isPlayer1: card.isPlayer1 },\r\n            ]);\r\n    }\r\n\r\n    static moveCardToTrashThenDeleteIt(card, removeBase = false) {\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardToTrash, delay: 500, card, isPlayer1: card.isPlayer1 },\r\n            { id: gameTask.taskDeleteCard, card, removeBase, isPlayer1: card.isPlayer1 }\r\n            ]);\r\n    }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) { \r\n        this.log(text);\r\n        effect.texts = (effect.texts ? effect.texts : []).concat([text]);\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = {\r\n            x: grid.x2, y: grid.y2,\r\n            width: grid['x' + (divide - 2)] - grid.x2, height: grid['y' + (divide - 2)] - grid.y2, location: 0, zone: 'centerMini1'\r\n        };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize = false) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length);\r\n        cards.forEach((card, index) => {\r\n            card.to = this.getCardPosition(index, cards.length, position, cardSize, card);\r\n            card.location = position.location;\r\n            card.zindex= card.pair ? 2 : 1;\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getCardPosition(index, total, position, cardSize, card) {\r\n        const degree = card.active ? 0 : 90;\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(global.cards, deckLength, true);\r\n        global.game.player2 = this.createPlayer(global.cards, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        global.isPlayer1 = Math.floor(Math.random() * 2) == 1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawn(global.game.player1, null, global.locationDeck, global.locationHand);\r\n            global.spawn(global.game.player2, null, global.locationDeck, global.locationHand);\r\n        }\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(cards, length, isPlayer1) {\r\n        let result = [];\r\n        cards.forEach(card => {\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n            result.push(global.createCard(card.id));\r\n        });\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n        result = global.sortRandom(result);\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base:[], empty:[]};\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height) {\r\n        setup.createGame(manager, width, height);\r\n        global.game.manager = manager;\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskShowTitle, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskDrawToCenter, isPlayer1: global.isPlayer1, delay: 500 }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return this.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        return game.manager.playCard(game, card1, card2, zone);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return game.manager.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        let task = game.tasks.splice(0, 1)[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const player = task.isPlayer1 ? game.player1 : game.player2;\r\n            // const opponent = task.isPlayer1 ? game.player2 : game.player1;\r\n\r\n            if (task.id === gameTask.taskRefreshField) {\r\n                // this.endAnimation(game);\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToCenter) {\r\n                const card = global.spawn(player, null, global.locationDeck, global.locationHand);\r\n                card.to = global.grid.center;\r\n                global.game.lastCard = card;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDrawToHand) {\r\n                game.manager.refreshFieldAndHand(player);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskShowTitle) {\r\n                game.showTitle = task.value;\r\n            }\r\n            \r\n            else if (task.id === gameTask.taskEndAnimation) {\r\n                this.endAnimation(game);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteCard) {\r\n                global.game.cards = global.removeByIndex(global.game.cards, task.card);\r\n                if (task.removeBase) {\r\n                    global.getPlayer(task.card.isPlayer1).base = [];\r\n                }\r\n                if(task.card.pair){\r\n                    global.game.cards = global.removeByIndex(global.game.cards, task.card.pair);\r\n                    delete(task.card.pair);\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter) {\r\n                task.card.to = global.grid.centerMini.card1;\r\n                task.card.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToMiniCenter2) {\r\n                if (task.card) {\r\n                    task.card.to = global.grid.centerMini.card2;\r\n                    task.card.zindex = 11;\r\n                }\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToCenter) {\r\n                task.card.to = global.grid.center;\r\n                task.card.zindex = 11;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskCardToTrash) {  \r\n                const cardPlayer = global.getPlayer(task.card.isPlayer1);              \r\n                game.manager.refreshFieldAndHand(cardPlayer);\r\n                task.card.to = global.clone(cardPlayer.positions.trash);\r\n                if(task.card.pair){\r\n                    task.card.pair.to = task.card.to;\r\n                    global.move(cardPlayer, task.card.pair, task.card.pair.location, global.locationTrash, true);\r\n                }\r\n                task.card.hidestat = true;\r\n                task.card.to.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskAttack) {\r\n                game.manager.attack(task.player, task.opponent, task.attacker, task.target);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToMiniCenter2) {\r\n                game.textEffect = {\r\n                    text: task.text,\r\n                    position: global.clone(global.grid.centerMini.card2)\r\n                };\r\n                game.textEffect.to = global.clone(game.textEffect.position);\r\n                game.textEffect.position.height = 0;\r\n            }\r\n\r\n            else if (task.id === gameTask.taskTextToTrash) {\r\n                game.textEffect.position.height = global.grid.centerMini.card2.height;\r\n                game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n            }\r\n\r\n            else if (task.id === gameTask.taskDeleteText) {\r\n                delete (game.textEffect);\r\n            }\r\n\r\n            else if (task.id === gameTask.taskSelectCards){\r\n                game.popup = task;\r\n                return game;\r\n            }\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            i++;\r\n        }\r\n\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n\r\n            card.selectable = isCostAvailable;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone) {\r\n        const noDropZone = !card2 && !zone;\r\n        if (noDropZone || card1.isPlayer1 !== player.isPlayer1 || !card1.selectable) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        if (card1.location === global.locationHand)\r\n            this.playFromHand(player, card1, card2, zone);\r\n        else if (card1.location === global.locationField)\r\n            this.attack(player, card1, card2, zone);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playFromHand(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (!isSamePlayer || zone.location == global.locationHand) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n        \r\n        const effectResult =effects.apply(effects.onplay, player, card1);\r\n        if(effectResult.stop){\r\n            return;\r\n        }\r\n\r\n        if (this.isCardUnit(card1)) {\r\n            card1.canAttack = true;\r\n            player.resourcesAvailable -= card1.cost;\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardPilot(card1) && card2 && this.isCardUnit(card2)) {\r\n            if (card2.pair) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            player.resourcesAvailable -= card1.cost;\r\n            global.pair(player, card2, card1);\r\n            return;\r\n        }\r\n\r\n        if (this.isCardCommand(card1)) {\r\n            const effectResult =effects.apply(effects.command, player, card1);\r\n            if(effectResult.stop){\r\n                return;\r\n            }\r\n\r\n            global.move(player, card1, card1.location, global.locationTrash);\r\n            global.moveCardToMiniCenterWithTextThenDeleteIt(card1, 'giant effect');\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attack(player, card1, card2, zone) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer) {\r\n            this.sendCardBackToSquareOne(card1);\r\n            return;\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            if (card2.active) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            global.startAttackAnimation(player, opponent, card1, card2);\r\n            return;\r\n        }\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return this.end(opponent);\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            global.startAttackAnimation(player, opponent, card1, target);\r\n            return;\r\n        } else {\r\n            global.setActive(card1, false);\r\n            \r\n            let card = opponent.shield[0];\r\n            const effectResult =effects.apply(effects.burst, opponent, card, card1);\r\n            if(effectResult.stop){\r\n                return;\r\n            }\r\n            \r\n            global.spawn(opponent, card, global.locationShield, global.locationTrash);\r\n            global.moveCardToCenterThenDeleteIt(card);\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target) {\r\n\r\n        const effectResult =effects.apply(effects.battle, player, attacker);\r\n        if(effectResult.stop){\r\n            return;\r\n        }\r\n\r\n        const delay = 500;\r\n        let damage = attacker.ap;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        attacker.hp -= damage;\r\n\r\n        global.setActive(attacker, false);\r\n        const tasks = [];\r\n\r\n        if (attacker.hp < 1) {\r\n            global.move(player, attacker, attacker.location, player.positions.trash.location, true);\r\n            attacker.dead = true;\r\n            const delayForTarget = target.hp < 1 ? null : 500;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay: delayForTarget, card: attacker, isPlayer1: attacker.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: attacker.isPlayer1 });\r\n\r\n        if (target.hp < 1) {\r\n            global.move(opponent, target, target.location, opponent.positions.trash.location, true);\r\n            target.dead = true;\r\n            tasks.push({ id: gameTask.taskCardToTrash, delay, card: target, isPlayer1: target.isPlayer1 });\r\n        } else\r\n            tasks.push({ id: gameTask.taskRefreshField, isPlayer1: target.isPlayer1 });\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        if (attacker.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card: attacker, isPlayer1: attacker.isPlayer1 });\r\n        if (target.hp < 1) tasks.push({ id: gameTask.taskDeleteCard, delay, card: target, isPlayer1: target.isPlayer1 });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n        /*\r\n                if (!breach && global.isCardUnit(target) && card.breach && target.hp < 1) {\r\n                    result =this.attack(player, card, opponent.base ?? { text: 'shield' }, card.breach);\r\n                }\r\n        if (!breach) {\r\n            attack = breach ?? target.ap;\r\n            attack = card.immuneAp && card.immuneAp > attack ? 0 : attack;\r\n            card.hp -= attack;\r\n        }\r\n                    */\r\n    }\r\n\r\n    static selectChoiceCard(){ // game, card\r\n        alert('Changer tout le système pour inclure plus de task, du genre appliquer l effet de cette CaretPosition, etc ...');\r\n    }\r\n\r\n    static end(opponent) {\r\n        const message = opponent.isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [],\r\n            resAString: \"0\", resourcesMax: 6, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        //this.createDefaultBase(game.player1);\r\n        //this.createDefaultBase(game.player2);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            global.spawnNotShown(game.player1, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n            global.spawnNotShown(game.player2, global.createCard(\"ST02-015\"), global.locationDeck, global.locationShield);\r\n        }\r\n\r\n        const playerOpponent = global.game.isPlayer1Turn ? game.player2 : game.player1;\r\n        playerOpponent.resourcesEx+=1;\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXBP-001\");\r\n        global.spawn(player, card, global.locationBase, global.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        player.resourcesMax+=1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n        \r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand);\r\n        positioner.refresh(player.field, player.positions.field);\r\n        positioner.refresh(player.base, player.positions.base, true);      \r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone){     \r\n        const player = global.getPlayerTurn(); \r\n        cardHandler.play(player, card1, card2, zone);\r\n        return game;\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2){\r\n        cardHandler.attackCard(player, opponent, card1, card2);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\",staticStyle:{\"width\":\"35px\",\"height\":\"15px\",\"top\":\"-0px\",\"font-size\":\"12px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack\"\r\n      style=\"width:35px; height:15px; top:-0px; font-size:12px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=4b139f02&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b139f02\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize12: true, textVerticalCenter: true, 'text-center': true,\r\n            bgRed2: box.isPlayer1 == game.isPlayer1 && box.location === 3\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize20\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            {{ game.textEffect?.text }}\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize12: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:6; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\">{{ game?.popup.text }}</h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                         :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in []\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\">\r\n            {{ game.popup }}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:2\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport gameCard from './card';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: false,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card){\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = 490;\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : 500;\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to)\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCard(card) {\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: this.game.grid.center.x,\r\n                        y: this.game.grid.center.y,\r\n                        width: this.game.grid.center.width,\r\n                        height: this.game.grid.center.height\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, 500);\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card.moving) return;\r\n\r\n            // Gestion du touch ou de la souris\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size){\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=49bd9d50&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=49bd9d50&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"49bd9d50\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = 500) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = 500) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(element.style.left), \r\n                y: this.pxStringToInt(element.style.top), \r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-107.webp\": 66642,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize12","textVerticalCenter","bgRed2","isPlayer1","style","getFieldStyle","grid","game","textEffect","position","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","text","gameTask","static","list","tasks","forEach","task","push","find","x","isEqual","task1","task2","result","id","value","index","taskid","reverse","t","delay","_defineProperty","GameGundamEffect","trigger","player","card1","card2","multiTriggers","onpair","onlink","effects","effect","includes","concat","length","nothing","stop","applyEffect","target","global","logEffect","JSON","stringify","shield","spawn","locationShield","locationHand","moveCardToMiniCenterWithTextThenBackToSquareOne","cards","base","cancel","level","effectClone","clone","effect2","removeEndTurn","ap","hp","spawnCard","location","refreshHandOpponent","move","locationField","locationBase","apply","onplay","moveCardToCenterThenBackToSquareOne","resourcesEx","resourcesAvailable","resAString","resourcesMax","getRes","breach","targets","hand","attribute","canAttack","attackActiveEnnemy","immuneAp","lost","fx","log","join","locationEmpty","locationDeck","locationResource","locationFrom","locationTo","ignoreRefresh","cardSpawn","spawnNotShown","zindex","addIn","addTasks","taskRefreshField","from","getLocationArrayProperty","to","removeByIndex","splice","positions","active","cardUnit","cardPilot","pair","isPaired","isLink","getNextIndex","degree","rotation","player1","player2","array","sort","Math","random","opponent","attacker","taskCardToMiniCenter","taskCardToMiniCenter2","taskAttack","taskTextToMiniCenter2","taskTextToTrash","taskDeleteText","taskCardToTrash","taskDeleteCard","removeBase","taskCardToCenter","logs","texts","obj","Object","assign","positioner","border","border2","divide","widthB","heightB","boxbig","field","getCardSize","card6","center","centerMini","x2","y","y2","zone","createZone","x15","y8","y7","y9","y6","deck","y10","y5","trash","y11","y4","locationTrash","resource","y12","y3","y13","x1","y0","x14","y1","show","p1","p2","useZoneSize","zoneHeight","cardSize","getCardPosition","getPairPosition","count","desiredWidth","desiredHeight","total","getXCenter","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","sizeWidth","gameManager","manager","popup","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","createCard","sortRandom","empty","setup","createGame","nextTurn","playerId","taskShowTitle","taskDrawToCenter","handleTasks","endAnimation","positionDrag","positionOld","wait","showTitle","refresh","playCard","selectChoiceCard","refreshFieldAndHand","lastCard","taskDrawToHand","taskEndAnimation","getPlayer","cardPlayer","hidestat","attack","taskSelectCards","cardHandler","max","isCostAvailable","cost","noDropZone","playFromHand","sendCardBackToSquareOne","isSamePlayer","effectResult","isCardUnit","isCardPilot","isCardCommand","command","moveCardToMiniCenterWithTextThenDeleteIt","getPlayerTurnOpponent","startAttackAnimation","end","setActive","burst","moveCardToCenterThenDeleteIt","battle","damage","dead","delayForTarget","alert","message","type","playerOpponent","isPlayer1Turn","getPlayerTurn","removeOneTurnEffect","baseText","number","setSelectable","play","attackCard","top","transform","cursor","$emit","h100p","bgposition","folder","preventDefault","_e","gameCard","refreshG","aside","freeze","cardCenter","title","document","body","overflow","window","addEventListener","start","gundamManager","breakpoint","refreshGame","continue","drop","setTimeout","setDrag","beginAnimation","animationTime","needToAnimateTextEffect","cardsToAnimate","animations","map","isIncrement","helperAnimation","showCardMouseOver","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","moving","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","size","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","min","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","parseInt","replace","animateMultiple","animationsArray","console","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}