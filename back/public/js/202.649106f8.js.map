{"version":3,"file":"js/202.649106f8.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/components/game/gameGundam.vue","webpack://front/./src/components/game/gameGundamCardUnit.js","webpack://front/./src/components/game/gameGundamCardCommandPilot.js","webpack://front/./src/components/game/gameGundamCardCommand.js","webpack://front/./src/components/game/gameGundamCardPilot.js","webpack://front/./src/components/game/gameGundamCardBase.js","webpack://front/./src/components/game/GameGundamGlobal.js","webpack://front/./src/components/game/gameGundamGridAndSize.js","webpack://front/./src/components/game/gameGundamManager.js","webpack://front/./src/components/game/gameCard.vue","webpack://front/src/components/game/gameCard.vue","webpack://front/./src/components/game/gameCard.vue?e013","webpack://front/./src/components/game/gameCard.vue?e97c","webpack://front/src/components/game/gameGundam.vue","webpack://front/./src/components/game/gameGundam.vue?41ef","webpack://front/./src/components/game/gameGundam.vue?bc21","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"300px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"5px\",\"left\":\"125px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/gundam2.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(_vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(_vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar app dark color=\"black\">\r\n      <div style=\"width:300px; position:absolute; bottom:0px; top:5px; left:125px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/gundam2.png')\" />\r\n      </div>\r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"$vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"$vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=52149d68&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam'),_c('game-gundam')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"flex\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\"}},[_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"relative\"},[(_vm.showCardId.id)?_c('gameCard',{attrs:{\"card\":_vm.showCardId,\"folder\":\"Gundam/cards/\"}}):_vm._e()],1)],1),(_vm.gameWorld)?_c('div',{key:_vm.refreshG,staticClass:\"relative bgWhite\",style:({\n            width: _vm.gameWorld?.size.gameWidth + 'px',\n            height: _vm.gameWorld?.size.gameHeight + 'px',\n            'font-size': '12px',\n            'text-align': 'center'\n        })},[_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.deck.y + 'px',\n                left: _vm.gameWorld?.player1.position.deck.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.deck.length)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.hand.y + 'px',\n                left: _vm.gameWorld?.player1.position.hand.x + 'px',\n                width: _vm.gameWorld?.size.handWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.grave.y + 'px',\n                left: _vm.gameWorld?.player1.position.grave.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.grave.length)+\" \")]),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.res.y + 'px',\n                left: _vm.gameWorld?.player1.position.res.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight * 2 + 5 + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.resAString)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.base.y + 'px',\n                left: _vm.gameWorld?.player1.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg2 textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player1.position.shield.y + 'px',\n                left: _vm.gameWorld?.player1.position.shield.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.miniboxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.shield.length)+\" \")]),_c('div',{staticClass:\"absolute bg2\",style:({\n                top: _vm.gameWorld?.player1.position.field.y + 'px',\n                left: _vm.gameWorld?.player1.position.field.x + 'px',\n                width: _vm.gameWorld?.size.fieldWidth + 'px',\n                height: _vm.gameWorld?.size.fieldHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.deck.y + 'px',\n                left: _vm.gameWorld?.player2.position.deck.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.deck.length)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.hand.y + 'px',\n                left: _vm.gameWorld?.player2.position.hand.x + 'px',\n                width: _vm.gameWorld?.size.handWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.grave.y + 'px',\n                left: _vm.gameWorld?.player2.position.grave.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.grave.length)+\" \")]),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.res.y + 'px',\n                left: _vm.gameWorld?.player2.position.res.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.boxHeight * 2 + 5 + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.resAString)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.base.y + 'px',\n                left: _vm.gameWorld?.player2.position.base.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.cardHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bg textVerticalCenter\",style:({\n                top: _vm.gameWorld?.player2.position.shield.y + 'px',\n                left: _vm.gameWorld?.player2.position.shield.x + 'px',\n                width: _vm.gameWorld?.size.boxWidth + 'px',\n                height: _vm.gameWorld?.size.miniboxHeight + 'px'\n            })},[_vm._v(\" \"+_vm._s(_vm.gameWorld?.player2.shield.length)+\" \")]),_c('div',{staticClass:\"absolute bg\",style:({\n                top: _vm.gameWorld?.player2.position.field.y + 'px',\n                left: _vm.gameWorld?.player2.position.field.x + 'px',\n                width: _vm.gameWorld?.size.fieldWidth + 'px',\n                height: _vm.gameWorld?.size.fieldHeight + 'px'\n            })}),_c('div',{staticClass:\"absolute bgWhite\",style:({\n                display: 'none',\n                top: _vm.gameWorld.size.centerY + 'px',\n                left: _vm.gameWorld.size.centerX + 'px',\n                width: _vm.gameWorld?.size.cardWidth + 'px',\n                height: _vm.gameWorld?.size.handHeight + 'px'\n            })},[_vm._v(\" Center card \"+_vm._s(_vm.cards.length)+\" \")]),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable},on:{\"mouseover\":_vm.showCard,\"click\":_vm.selectCard}})],1)})],2):_vm._e()]),(_vm.gameWorld?.popup)?_c('div',{staticClass:\"flex-center\",staticStyle:{\"z-index\":\"3\",\"width\":\"100%\",\"height\":\"450px\",\"position\":\"fixed\",\"top\":\"150px\"}},[_c('div',{staticStyle:{\"background-color\":\"#000000E0\",\"width\":\"90%\",\"height\":\"100%\"}},[_c('h2',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.gameWorld.popup.text))]),_c('div',{staticClass:\"flex-center\"},_vm._l((_vm.gameWorld.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"mp5px\",style:({ width: _vm.gameWorld?.size.cardWidth + 'px', height: _vm.gameWorld?.size.cardHeight + 'px' }),on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e(),(choice.id)?_c('gameCard',{attrs:{\"card\":choice,\"folder\":\"Gundam/cards/\",\"shine\":true},on:{\"mouseover\":_vm.showCard,\"click\":function($event){return _vm.selectChoiceCard(choice)}}}):_vm._e()],1)}),0)])]):_vm._e(),_c('br'),_c('br'),_vm._v(\" \"+_vm._s(_vm.gameWorld?.player1.hand.length)+\" \")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nimport GameGundamGlobal from './GameGundamGlobal';\r\n\r\nclass GameGundamCardUnit {\r\n\r\n    static isSelectable(world, player, card){        \r\n        return true;\r\n    }\r\n    \r\n    static play(world, player, card, choiceType, choiceCard) {\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        player.field.push(card);\r\n        card.location = GameGundamGlobal.locationField;\r\n        card.height = GameGundamGlobal.size.cardSize.height;\r\n        card.selectable = false;\r\n        return true;\r\n    }\r\n\r\n    static activate(world, player, card) {\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardUnit;","/* eslint-disable */\r\nimport GameGundamGlobal from './GameGundamGlobal';\r\n\r\nclass GameGundamCardCommandPilot {\r\n    static isCardUnit(card) { return card.type.includes(0); }\r\n    static locationHand = 2;\r\n\r\n    static isSelectable(world, player, card){        \r\n\r\n        if (card.location !== this.locationHand) return false;\r\n\r\n        const unitsOnField = player.field.filter(x => this.isCardUnit(x));\r\n        const unitsOnFieldWithoutPilot = unitsOnField.filter(x => !x.pair);\r\n        card.PilotTargetAvailable = unitsOnFieldWithoutPilot.map(x => x.index);\r\n        card.CommandtargetAvailable = unitsOnField.map(x => x.index);\r\n\r\n        return !card.targetUnit ? true : card.PilotTargetAvailable.length > 0 || card.CommandtargetAvailable.length > 0;\r\n    }\r\n    static play(world, player, card) {\r\n        GameGundamGlobal.showPopupSelectPilotOrCommand(card);\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static activate(world, player, card) {\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardCommandPilot;","/* eslint-disable */\r\nimport GameGundamGlobal from './GameGundamGlobal';\r\n\r\nclass GameGundamCardCommand {\r\n    static isCardUnit(card) { return card.type.includes(0); }\r\n    static locationHand = 2;\r\n\r\n    static isSelectable(world, player, card) {\r\n\r\n        if (card.location !== this.locationHand) return false;\r\n\r\n        const unitsOnField = player.field.filter(x => this.isCardUnit(x));\r\n        card.CommandtargetAvailable = unitsOnField.map(x => x.index);\r\n\r\n        return !card.targetUnit ? true : card.CommandtargetAvailable.length > 0;\r\n    }\r\n\r\n    static play(world, player, card, choiceCard) {\r\n        if (card.CommandTargetAvailable.length > 1 && !choiceCard) {\r\n            GameGundamGlobal.showPopupSelectCard(card, card.CommandTargetAvailable);\r\n            return GameGundamGlobal.world;\r\n        } else\r\n            choiceCard = GameGundamGlobal.getCardsByIndex(card.CommandTargetAvailable)[0];\r\n\r\n        card.height = GameGundamGlobal.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        card.to = GameGundamGlobal.size.center;\r\n        card.explode = true;\r\n    }\r\n\r\n    static activate(world, player, card) {\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardCommand;","/* eslint-disable */\r\nimport GameGundamGlobal from './GameGundamGlobal';\r\n\r\nclass GameGundamCardPilot {\r\n\r\n    static isSelectable(world, player, card) {\r\n        if (card.location !== GameGundamGlobal.locationHand)\r\n            return false;\r\n\r\n        const unitsOnField = player.field.filter(x => GameGundamGlobal.isCardUnit(x));\r\n        const unitsOnFieldWithoutPilot = unitsOnField.filter(x => !x.pair);\r\n        card.PilotTargetAvailable = unitsOnFieldWithoutPilot.map(x => x.index);\r\n\r\n        return card.PilotTargetAvailable.length > 0;\r\n    }\r\n\r\n    static play(world, player, card, choiceCard) {\r\n        if (card.PilotTargetAvailable.length > 1 && !choiceCard) {\r\n            GameGundamGlobal.showPopupSelectCard(card, card.PilotTargetAvailable);\r\n            return GameGundamGlobal.world;\r\n        } else\r\n            choiceCard = GameGundamGlobal.getCardsByIndex(card.PilotTargetAvailable)[0];\r\n\r\n        card.height = GameGundamGlobal.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        GameGundamGlobal.pairCards(choiceCard, card);\r\n    }\r\n\r\n    static activate(world, player, card) {\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardPilot;","/* eslint-disable */\r\nimport GameGundamGlobal from './GameGundamGlobal';\r\n\r\nclass GameGundamCardBase {\r\n\r\n    static isSelectable(world, player, card) {\r\n        return true;\r\n    }\r\n    static play(world, player, card) {\r\n        card.height = GameGundamGlobal.size.cardSize.height;\r\n        player.hand = player.hand.filter(x => x.index !== card.index);\r\n        card.to = player.position.base;\r\n        if (player.base)\r\n            GameGundamGlobal.sendToGrave(player, player.base);\r\n        player.base = card;\r\n    }\r\n\r\n    static activate(world, player, card) {\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamCardBase;","import cards from '../../data/gundamCards.json';\r\nimport gameGundamCardUnit from './gameGundamCardUnit';\r\nimport gameGundamCardCommandPilot from './gameGundamCardCommandPilot';\r\nimport gameGundamCardCommand from './gameGundamCardCommand';\r\nimport gameGundamCardPilot from './gameGundamCardPilot';\r\nimport gameGundamCardBase from './gameGundamCardBase';\r\n\r\nclass GameGundamGlobal {\r\n    static world = null;\r\n    static cards = cards.cards;\r\n    static lastChoiceType;\r\n    static size;\r\n    static index = 1;\r\n    static isPlayer1Turn;\r\n\r\n    static locationDeck = 0;\r\n    static locationShield = 1;\r\n    static locationHand = 2;\r\n    static locationField = 3;\r\n    static locationBase = 4;\r\n    static locationGrave = 5;\r\n\r\n    static getPlayerTurn() {\r\n        return this.isPlayer1Turn ? this.world.player1 : this.world.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return this.isPlayer1Turn ? this.world.player2 : this.world.player1;\r\n    }\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to) card.to = card.position;\r\n        card.to = { x: card.to.x, y: card.to.y, rotation: degree };\r\n    }\r\n\r\n    static pairCards(cardUnit, cardPilot) {\r\n        const cardHeight25Percent = GameGundamGlobal.size.cardSize.height * 0.25;\r\n        cardPilot.to = GameGundamGlobal.clone({ x: cardUnit.position.x, y: cardUnit.position.y + cardHeight25Percent });\r\n        cardPilot.zindex = 1;\r\n        cardPilot.active = false;\r\n        cardPilot.selectable = false;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.pair = cardPilot;\r\n        cardUnit.hp += cardPilot.hp;\r\n        cardUnit.hp += cardPilot.hp;\r\n        \r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        return cardUnit.link.includes(cardPilot.name);\r\n    }\r\n\r\n\r\n\r\n    static showPopupSelectPilotOrCommand(card) {\r\n        this.showPopup(card, \"Comand or Pilot ?\", [{ text: 'Command' }, { text: 'Pilot' }]);\r\n    }\r\n    static showPopupSelectCard(card, targetAvailable) {\r\n        const cards = this.getCardsByIndex(targetAvailable);\r\n        this.showPopup(card, \"Choice a card\", cards);\r\n    }\r\n    static showPopup(card, text, choices) {\r\n        this.world.popup = {\r\n            card,\r\n            text,\r\n            choices\r\n        };\r\n    }\r\n\r\n    static sendToGrave(player, card){        \r\n        card.to= player.position.grave;\r\n        card.explode = true;\r\n        if (!card.isTrash)\r\n            player.grave.push(card);\r\n    }\r\n\r\n    static isCardUnit(card) { return card.type.includes(0); }\r\n    static isCardPilot(card) { return card.type.includes(1); }\r\n    static isCardCommand(card) { return card.type.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type.includes(3); }\r\n    static getCardHandler(card, choiceType){\r\n        if(choiceType)\r\n            return choiceType.text == 'Pilot' ? gameGundamCardPilot : gameGundamCardCommand;\r\n\r\n        if(this.isCardUnit(card)) return gameGundamCardUnit;\r\n        if(this.isCardCommandPilot(card)) return gameGundamCardCommandPilot;\r\n        if(this.isCardCommand(card)) return gameGundamCardCommand;\r\n        if(this.isCardPilot(card)) return gameGundamCardPilot;\r\n        if(this.isCardBase(card)) return gameGundamCardBase;\r\n    }\r\n\r\n    static getCardsByIndex(ids) { return this.world.cards.filter(x => ids.includes(x.index)); }\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n    \r\n}\r\n\r\n\r\nexport default GameGundamGlobal;","class GameGundamGridAndSize {\r\n\r\n    static size;\r\n\r\n    static calculateGameSize(w, h) {\r\n        const size = {};\r\n        const width = w - 300;\r\n        const height = h - 64;\r\n        const desiredHeight = width * 9 / 16;\r\n        const desiredWidth = (height * 16 / 9);\r\n        size.gameWidth = desiredHeight < height ? width : desiredWidth;\r\n        size.gameHeight = size.gameWidth * 9 / 16;\r\n\r\n        size.fieldHeight = (size.gameHeight - 4 * 7) / 3;\r\n        size.handHeight = size.fieldHeight / 2;\r\n        size.boxHeight = (size.handHeight - 5) / 2;\r\n        size.cardHeight = size.fieldHeight * 0.75;\r\n        size.cardWidth = size.cardHeight * 107 / 150;\r\n        size.boxWidth = size.cardWidth;\r\n        size.handWidth = size.gameWidth - 10 - 10 - size.boxWidth;\r\n        size.miniboxHeight = size.fieldHeight - size.cardHeight;\r\n        \r\n        size.boxSize = { width: size.boxWidth, height: size.boxHeight };\r\n        size.cardSize = { width: size.cardWidth, height: size.cardHeight };\r\n\r\n        size.centerX = (size.gameWidth - size.boxWidth) / 2;\r\n        size.centerY = (size.gameHeight - size.cardHeight) / 2;\r\n        size.center = { x: size.centerX, y: size.centerY };\r\n        size.infoLineX1 = 5;\r\n        size.infoLineX2 = 5 + size.boxWidth + 5;\r\n        size.infoLineX3 = size.gameWidth - 10 - size.boxWidth;\r\n\r\n        size.infoLineY01 = 7;\r\n        size.infoLineY02 = size.infoLineY01 + 5 + size.boxHeight;\r\n        size.infoLineY03 = size.infoLineY02 + 5 + size.boxHeight;\r\n        size.infoLineY04 = size.infoLineY03 + 5 + size.boxHeight;\r\n        size.infoLineY05 = size.infoLineY03 + 5 + size.fieldHeight;\r\n        size.infoLineY07 = size.infoLineY05 + 5 + size.fieldHeight;\r\n        size.infoLineY06 = size.infoLineY07 - 5 - size.boxHeight;\r\n        size.infoLineY08 = size.infoLineY07 + 5 + size.boxHeight;\r\n        size.infoLineY04bis = size.infoLineY05 - 5 - size.cardHeight;\r\n        size.infoLineY06bis = size.infoLineY05 + size.cardHeight;\r\n\r\n        size.fieldWidth = size.infoLineX3 - size.infoLineX2 - 10;\r\n        this.size = size;\r\n        return size;\r\n    }\r\n\r\n    static getPlayerPosition(isPlayer1) {\r\n        return {\r\n            deck: { \r\n                x: isPlayer1 ? this.size.infoLineX3 : this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY06 - this.size.boxHeight -5 : this.size.infoLineY04, rotation: 0 },\r\n            grave: { \r\n                x: isPlayer1 ?  this.size.infoLineX3 : this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY06 : this.size.infoLineY03, rotation: 0 },\r\n            hand: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX2, \r\n                y: isPlayer1 ? this.size.infoLineY07 : this.size.infoLineY01, rotation: 0 },\r\n            base: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX3, \r\n                y: isPlayer1 ? this.size.infoLineY05 : this.size.infoLineY04bis, rotation: 0 },\r\n            shield: { \r\n                x: isPlayer1 ? this.size.infoLineX1 : this.size.infoLineX3, \r\n                y: isPlayer1 ? this.size.infoLineY06bis : this.size.infoLineY03, rotation: 0 },\r\n            field: { \r\n                x: isPlayer1 ? this.size.infoLineX2 : this.size.infoLineX2, \r\n                y: isPlayer1 ? this.size.infoLineY05 : this.size.infoLineY03, rotation: 0 },\r\n            res: { \r\n                x: isPlayer1 ? this.size.infoLineX3: this.size.infoLineX1, \r\n                y: isPlayer1 ? this.size.infoLineY07 : this.size.infoLineY01, rotation: 0 },\r\n        };\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamGridAndSize;","import GameGundamGlobal from './GameGundamGlobal';\r\nimport GameGundamGridAndSize from './gameGundamGridAndSize';\r\n\r\nclass GameGundamManager {\r\n\r\n    // ------------------ Setup\r\n    static createGame(width, height) {\r\n        GameGundamGlobal.size = GameGundamGridAndSize.calculateGameSize(width, height);\r\n\r\n        GameGundamGlobal.world = {\r\n            size: GameGundamGlobal.size,\r\n            cards: [],\r\n            popup: null\r\n        };\r\n        GameGundamGlobal.world.player1 = this.createPlayer(GameGundamGridAndSize.getPlayerPosition(true), true);\r\n        GameGundamGlobal.world.player2 = this.createPlayer(GameGundamGridAndSize.getPlayerPosition(false), false);\r\n\r\n        this.draw(GameGundamGlobal.world.player1, 5);\r\n        this.draw(GameGundamGlobal.world.player2, 5);\r\n\r\n        GameGundamGlobal.isPlayer1Turn = false; //Math.floor(Math.random() * 2) == 1;\r\n        const nonPlayerTurn = GameGundamGlobal.getPlayerTurn(); //non player turn is the player turn of this turn0. (before nextTurn)\r\n        nonPlayerTurn.resourcesEx = 1;\r\n\r\n        GameGundamGlobal.world.player1.shield = this.addToShield(GameGundamGlobal.world.player1, 6);\r\n        GameGundamGlobal.world.player2.shield = this.addToShield(GameGundamGlobal.world.player2, 6);\r\n\r\n        this.nextTurn();\r\n        this.refreshHandPosition(GameGundamGlobal.getPlayerTurnOpponent());\r\n\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static createPlayer(position, isPlayer1) {\r\n        let deck = this.createDeck(isPlayer1);\r\n        deck = this.sortRandom(deck);\r\n        const result = {\r\n            deck,\r\n            position,\r\n            isPlayer1,\r\n            hand: [],\r\n            field: [],\r\n            shield: [],\r\n            grave: [],\r\n            resAString: \"0\",\r\n            resourcesMax: 8,\r\n            resourcesRemaining: 0,\r\n            resourcesEx: 0,\r\n            resBString: \"0\",\r\n\r\n        };\r\n        result.base = this.createDefaultBase(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    static createDefaultBase(player) {\r\n        const card = GameGundamGlobal.clone(GameGundamGlobal.cards.find(x => x.id === \"EXBP-001\"));\r\n        card.index = GameGundamGlobal.index;\r\n        GameGundamGlobal.index++;\r\n        this.spawnCard(player, card, GameGundamGlobal.locationBase);\r\n        return card;\r\n    }\r\n\r\n    static createDeck(isPlayer1) {\r\n        let result = [];\r\n\r\n        // To delete after test\r\n        const gundam = GameGundamGlobal.cards.find(x => x.id === 'GD01-034');\r\n        const trowa = GameGundamGlobal.cards.find(x => x.id === 'ST02-012');\r\n        for (let i = 0; i < 21; i++)result = result.concat([GameGundamGlobal.clone(gundam), GameGundamGlobal.clone(trowa)]);\r\n\r\n        GameGundamGlobal.cards.forEach(card => {\r\n            result.push(GameGundamGlobal.clone(card));\r\n            result.push(GameGundamGlobal.clone(card));\r\n            result.push(GameGundamGlobal.clone(card));\r\n            result.push(GameGundamGlobal.clone(card));\r\n        });\r\n\r\n        result = result.splice(0, 50);\r\n        result.forEach(x => {\r\n            x.index = GameGundamGlobal.index;\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = GameGundamGlobal.locationDeck;\r\n            GameGundamGlobal.index++;\r\n        })\r\n        return result;\r\n    }\r\n\r\n    // ------------------ During game\r\n    static nextTurn() {\r\n        GameGundamGlobal.isPlayer1Turn = !GameGundamGlobal.isPlayer1Turn;\r\n        const player = GameGundamGlobal.getPlayerTurn();\r\n\r\n        GameGundamGlobal.world.cards.forEach(card => card.selectable = false);\r\n        player.field.forEach(card => GameGundamGlobal.setActive(card, true));\r\n        player.resourcesMax += 1;\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        player.resources = player.resourcesMax;\r\n        player.resAString = player.resourcesAvailable + \" (\" + player.resources + \"+\" + player.resourcesEx + \") / \" + player.resourcesMax;\r\n\r\n        this.draw(player, 1);\r\n\r\n        this.refreshHandPosition(player, false);\r\n        player.field.forEach(card => {\r\n            card.active = true;\r\n            card.selectable = true;\r\n        });\r\n\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static refreshHandPosition(player, setSelectableOff=true){\r\n        player.hand.forEach((card, index) => {\r\n            card.to = this.getHandPosition(player, index);\r\n            card.selectable = setSelectableOff ? false :  this.isSelectable(player, card);\r\n        });\r\n    }\r\n\r\n    static refreshFieldPosition(player){\r\n        player.field.forEach((card, index) => {\r\n            card.to = card.to ?? this.getFieldPosition(player, card, index);\r\n            if(card.pair && !card.pair.to)\r\n                card.pair.to = {x:card.to.x, y:card.pair.position.y};\r\n        });\r\n    }\r\n\r\n    static draw(player, cardNumber) {\r\n        for (let i = 0; i < cardNumber; i++)\r\n            this.spawnCard(player, player.deck.splice(0, 1)[0], GameGundamGlobal.locationHand);\r\n    }\r\n\r\n    static isSelectable(player, card) {\r\n        if (card.location === GameGundamGlobal.locationHand) {\r\n            const isCostAvailable = card.level <= player.resourcesMax && card.cost <= player.resourcesAvailable;\r\n            if (!isCostAvailable)\r\n                return false;\r\n        }\r\n\r\n        return GameGundamGlobal.getCardHandler(card).isSelectable(GameGundamGlobal.world, player, card);\r\n    }\r\n\r\n    static selectCard(card, choiceType, choiceCard) {\r\n        const player = GameGundamGlobal.getPlayerTurn();\r\n        if (card.isPlayer1 != player.isPlayer1 || !card.selectable) \r\n            return GameGundamGlobal.world;\r\n\r\n        \r\n        GameGundamGlobal.world.popup = null;\r\n        if (card.location === GameGundamGlobal.locationHand) {\r\n            const playCost = GameGundamGlobal.getCardHandler(card, choiceType).play(GameGundamGlobal.world, player, card, choiceCard);\r\n            if(playCost)\r\n                this.playCardCost(player, card);\r\n        }\r\n        else if (card.location === GameGundamGlobal.locationField) {\r\n            if (GameGundamGlobal.isCardUnit(card) && card.active) {\r\n                GameGundamGlobal.setActive(card, false);\r\n                this.attack(player, card);\r\n            }\r\n        }\r\n\r\n        this.refreshHandPosition(player, false);\r\n        this.refreshFieldPosition(player, false);\r\n\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static selectChoiceType(choice) {\r\n        GameGundamGlobal.lastChoiceType = choice;\r\n        this.selectCard(GameGundamGlobal.world.popup.card, choice, null);\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static selectChoiceCard(choiceCard) {\r\n        this.selectCard(GameGundamGlobal.world.popup.card, GameGundamGlobal.lastChoiceType, choiceCard);\r\n        return GameGundamGlobal.world;\r\n    }\r\n\r\n    static attack(player, card) {\r\n        const opponent = GameGundamGlobal.getPlayerTurnOpponent();\r\n        card.selectable = false;\r\n\r\n        if (opponent.base) {\r\n            this.attackCard(card, opponent.base, opponent);\r\n            opponent.base = null;\r\n        } else if (opponent.shield.length < 1) {\r\n            this.endFight();\r\n        } else {\r\n            const shield = opponent.shield[0];\r\n            this.spawnCard(opponent, shield, GameGundamGlobal.locationShield);\r\n        }\r\n    }\r\n\r\n    static attackCard(attacker, target, targetPlayer) {\r\n        target.hp -= attacker.ap;\r\n        if (target.hp < 1)\r\n            GameGundamGlobal.sendToGrave(targetPlayer, target);\r\n    }\r\n\r\n    static spawnCard(player, card, location) {\r\n        if (location == GameGundamGlobal.locationHand) {\r\n            card.position = player.position.res;\r\n            player.hand.push(card);\r\n            card.height = GameGundamGlobal.size.boxSize.height * 2 + 5;\r\n        }\r\n        if (location == GameGundamGlobal.locationShield) {\r\n            card.position = player.position.shield;\r\n            card.to = player.position.grave;\r\n            player.shield = player.shield.filter(x => x.index !== card.index);\r\n            player.grave.push(card);\r\n            card.height = GameGundamGlobal.size.cardSize.height;\r\n            card.explode = true;\r\n        }\r\n        if (location == GameGundamGlobal.locationBase) {\r\n            card.position = player.position.base;\r\n            card.width = GameGundamGlobal.size.boxSize.width;\r\n            card.show = true;\r\n            card.isTrash = true;\r\n        }\r\n        card.location = location;\r\n        card.show = true;\r\n        card.width = GameGundamGlobal.size.cardSize.width;\r\n        card.bgposition = 'top center';\r\n        GameGundamGlobal.world.cards.push(card);\r\n        return card;\r\n    }\r\n\r\n    static endFight() {\r\n        const message = GameGundamGlobal.isPlayer1Turn ? \"Victory\" : \"Defeat\";\r\n        alert(message);\r\n    }\r\n\r\n    // ------------------ Utilities\r\n\r\n    static refreshGameSize(width, height){\r\n        GameGundamGlobal.size = GameGundamGridAndSize.calculateGameSize(width, height);\r\n    }\r\n\r\n    static playCardCost(player, card) {\r\n        const remainingCost = card.cost - player.resourcesEx;\r\n        if (remainingCost <= 0) {\r\n            player.resourcesEx -= card.cost;\r\n        }\r\n        else {\r\n            player.resourcesEx = 0;\r\n            player.resources -= remainingCost;\r\n        }\r\n        player.resourcesAvailable = player.resources + player.resourcesEx;\r\n        player.resAString = player.resourcesAvailable + \" (\" + player.resources + \"+\" + player.resourcesEx + \")\";\r\n        player.resBString = player.resourcesMax - player.resources;\r\n    }\r\n\r\n    static addToShield(player, cardNumber) {\r\n        const result = [];\r\n        for (let i = 0; i < cardNumber; i++) {\r\n            const card = player.deck.splice(0, 1)[0];\r\n            card.width = GameGundamGlobal.size.cardSize.width;\r\n            card.location = GameGundamGlobal.locationShield;\r\n            card.show = false;\r\n            result.push(card);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static getHandPosition(player, index = -1) {\r\n        const posIndex = index > -1 ? index : player.hand.length;\r\n        return this.getCardPosition(player, posIndex, player.position.hand, player.hand.length, false, GameGundamGlobal.size.handWidth);\r\n    }\r\n    static getFieldPosition(player, card, index = -1) {\r\n        const posIndex = index > -1 ? index : player.field.length;\r\n        const result = this.getCardPosition(player, posIndex, player.position.field, player.field.length, true, GameGundamGlobal.size.fieldWidth);\r\n        result.rotation = card.position.rotation;\r\n        return result;\r\n    }\r\n    static getCardPosition(player, index, position, cardsLength, useRotateWidth, widthAvailable) {\r\n        const rotateWidth = !useRotateWidth ? 0 : (GameGundamGlobal.size.cardSize.height - GameGundamGlobal.size.cardSize.width) / 2;\r\n        let cardWidth = GameGundamGlobal.size.cardSize.width + 5 + rotateWidth;\r\n        const result = this.getCenteredX(index, cardWidth, cardsLength, widthAvailable);\r\n        return { x: position.x + result, y: position.y }; //(rotateWidth * direction) + position.x + (index * direction * cardWidth)\r\n    }\r\n    static getCenteredX(index, elementWidth, totalElements, zoneWidth) {\r\n        if (totalElements == 1) return (zoneWidth - elementWidth) / 2;\r\n        const marginCount = totalElements + 1;\r\n        const zoneWidthAvailable = zoneWidth - (totalElements * elementWidth);\r\n        const marginWidth = zoneWidthAvailable / marginCount;\r\n        const result = (index + 1) * marginWidth + index * elementWidth;\r\n        return result;\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static endAnimation() {\r\n        GameGundamGlobal.world.cards.filter(x => x.show && x.to).forEach(card => {\r\n            card.position = card.to;\r\n            card.to = null;\r\n        });\r\n        GameGundamGlobal.world.cards = GameGundamGlobal.world.cards.filter(x => !x.explode);\r\n        return GameGundamGlobal.world;\r\n    }\r\n}\r\n\r\n\r\nexport default GameGundamManager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('img',{class:{ absolute: true, shine: _vm.shine },style:({\n  left: _vm.card.position.x + 'px', top: _vm.card.position.y + 'px',\n  width: _vm.card.width + 'px', height: _vm.card.height + 'px', transform : 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'z-index':_vm.card.zindex\n}),attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"click\":function($event){return _vm.$emit('click', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <img :class=\"{ absolute: true, shine: shine }\" :style=\"{\r\n    left: card.position.x + 'px', top: card.position.y + 'px',\r\n    width: card.width + 'px', height: card.height + 'px', transform : 'rotate(' + card.position.rotation + 'deg)',\r\n    'object-fit': 'cover', 'object-position': card.bgposition, 'z-index':card.zindex\r\n  }\" :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n    @click=\"$emit('click', card)\" @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n</template>\r\n\r\n<style scoped>\r\n .shine {\r\n   -webkit-mask-image: linear-gradient(-75deg, #000 20%, rgba(0, 0, 0, .5) 40%, #000 60%);\r\n   -webkit-mask-size: 200%;\r\n   animation: shinefx 1s infinite;\r\n   /**/\r\n }\r\n\r\n @keyframes shinefx {\r\n   from {\r\n     -webkit-mask-position: -200%;\r\n   }\r\n\r\n   to {\r\n     -webkit-mask-position: 0%;\r\n   }\r\n }\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine']\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gameCard.vue?vue&type=template&id=61d1d5f4&scoped=true&\"\nimport script from \"./gameCard.vue?vue&type=script&lang=js&\"\nexport * from \"./gameCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./gameCard.vue?vue&type=style&index=0&id=61d1d5f4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61d1d5f4\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"flex\">\r\n            <div class=\"bg\" style=\"width:300px;\">\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n\r\n                <div class=\"relative\">\r\n                    <gameCard v-if=\"showCardId.id\" :card=\"showCardId\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"gameWorld\" :key=\"refreshG\" class=\"relative bgWhite\" :style=\"{\r\n                width: gameWorld?.size.gameWidth + 'px',\r\n                height: gameWorld?.size.gameHeight + 'px',\r\n                'font-size': '12px',\r\n                'text-align': 'center'\r\n            }\">\r\n\r\n                <!-- Player 1 -->\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.deck.y + 'px',\r\n                    left: gameWorld?.player1.position.deck.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.deck.length }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.hand.y + 'px',\r\n                    left: gameWorld?.player1.position.hand.x + 'px',\r\n                    width: gameWorld?.size.handWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.grave.y + 'px',\r\n                    left: gameWorld?.player1.position.grave.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.grave.length }}\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.res.y + 'px',\r\n                    left: gameWorld?.player1.position.res.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight * 2 + 5 + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.resAString }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.base.y + 'px',\r\n                    left: gameWorld?.player1.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg2 textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player1.position.shield.y + 'px',\r\n                    left: gameWorld?.player1.position.shield.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.miniboxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player1.shield.length }}\r\n                </div>\r\n                <div class=\"absolute bg2\" :style=\"{\r\n                    top: gameWorld?.player1.position.field.y + 'px',\r\n                    left: gameWorld?.player1.position.field.x + 'px',\r\n                    width: gameWorld?.size.fieldWidth + 'px',\r\n                    height: gameWorld?.size.fieldHeight + 'px'\r\n                }\">\r\n                </div>\r\n\r\n                <!-- Player 2 -->\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.deck.y + 'px',\r\n                    left: gameWorld?.player2.position.deck.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.deck.length }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.hand.y + 'px',\r\n                    left: gameWorld?.player2.position.hand.x + 'px',\r\n                    width: gameWorld?.size.handWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.grave.y + 'px',\r\n                    left: gameWorld?.player2.position.grave.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.grave.length }}\r\n                </div>\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.res.y + 'px',\r\n                    left: gameWorld?.player2.position.res.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.boxHeight * 2 + 5 + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.resAString }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.base.y + 'px',\r\n                    left: gameWorld?.player2.position.base.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.cardHeight + 'px'\r\n                }\">\r\n                </div>\r\n                <div class=\"absolute bg textVerticalCenter\" :style=\"{\r\n                    top: gameWorld?.player2.position.shield.y + 'px',\r\n                    left: gameWorld?.player2.position.shield.x + 'px',\r\n                    width: gameWorld?.size.boxWidth + 'px',\r\n                    height: gameWorld?.size.miniboxHeight + 'px'\r\n                }\">\r\n                    {{ gameWorld?.player2.shield.length }}\r\n                </div>\r\n                <div class=\"absolute bg\" :style=\"{\r\n                    top: gameWorld?.player2.position.field.y + 'px',\r\n                    left: gameWorld?.player2.position.field.x + 'px',\r\n                    width: gameWorld?.size.fieldWidth + 'px',\r\n                    height: gameWorld?.size.fieldHeight + 'px'\r\n                }\">\r\n                </div>\r\n\r\n                <div class=\"absolute bgWhite\" :style=\"{\r\n                    display: 'none',\r\n                    top: gameWorld.size.centerY + 'px',\r\n                    left: gameWorld.size.centerX + 'px',\r\n                    width: gameWorld?.size.cardWidth + 'px',\r\n                    height: gameWorld?.size.handHeight + 'px'\r\n                }\">\r\n                    Center card\r\n                    {{ cards.length }}\r\n                </div>\r\n\r\n                <div v-for=\"card in cards\" :key=\"'B' + card.index\">\r\n                    <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable\"\r\n                        @mouseover=\"showCard\" @click=\"selectCard\">\r\n                    </gameCard>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"gameWorld?.popup\" class=\"flex-center\"\r\n            style=\"z-index:3; width:100%; height: 450px; position:fixed; top:150px;\">\r\n            <div style=\"background-color: #000000E0; width:90%; height:100%;\">\r\n                <h2 class=\"text-center\">{{ gameWorld.popup.text }}</h2>\r\n                <div class=\"flex-center\">\r\n                    <span v-for=\"(choice, index) in gameWorld.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"mp5px\"\r\n                            :style=\"{ width: gameWorld?.size.cardWidth + 'px', height: gameWorld?.size.cardHeight + 'px' }\"\r\n                            @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                        <gameCard v-if=\"choice.id\" :card=\"choice\" folder=\"Gundam/cards/\" :shine=\"true\"\r\n                            @mouseover=\"showCard\" @click=\"selectChoiceCard(choice)\">\r\n                        </gameCard>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br><br> {{ gameWorld?.player1.hand.length }}\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport helperAnimation from '../../helpers/helperAnimation';\r\nimport gameGundamManager from './gameGundamManager';\r\nimport gameCard from './gameCard';\r\n\r\nexport default {\r\n    name: 'game-gundam',\r\n    props: [],\r\n    components: { gameCard },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        freeze: false,\r\n        cards: [],\r\n        showCardId: { id: '', position: { x: 0, y: 0 }, width: 300 },\r\n        gameWorld: null\r\n    }),\r\n    mounted() {\r\n        window.addEventListener(\"resize\", () => {\r\n            this.gameGundamManager.refreshGameSize(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshG++;\r\n        });\r\n        this.start();\r\n    },\r\n    methods: {\r\n        showText(text) { alert(text); },\r\n        showCard(card) {\r\n            this.showCardId.id = card.id;\r\n        },\r\n        start() {\r\n            this.gameWorld = gameGundamManager.createGame(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame(animate = true) {\r\n            this.cards = this.gameWorld.cards.filter(x => x.show);\r\n            this.refreshG++;\r\n            if (animate)\r\n                setTimeout(() => { this.beginAnimation(); }, 1);\r\n        },\r\n        beginAnimation() {\r\n            const cardsToAnimate = this.gameWorld.cards.filter(x => x.show && x.to);\r\n            if (cardsToAnimate.length < 1) return;\r\n\r\n            this.freeze = true;\r\n            const animationTime = 500;\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n        },\r\n        endAnimation() {\r\n            this.gameWorld = gameGundamManager.endAnimation();\r\n            this.freeze = false;\r\n            this.refreshGame(false);\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze) return;\r\n            this.gameWorld = gameGundamManager.nextTurn();\r\n            this.refreshGame();\r\n        },\r\n        selectCard(card) {\r\n            if (this.freeze) return;\r\n            this.gameWorld = gameGundamManager.selectCard(card);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.gameWorld = gameGundamManager.selectChoiceType(choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(choice) {\r\n            this.gameWorld = gameGundamManager.selectChoiceCard(choice);\r\n            this.refreshGame();\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./gameGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gameGundam.vue?vue&type=template&id=5e33018e&\"\nimport script from \"./gameGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./gameGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam>\r\n        </menu-bar-gundam>\r\n        <game-gundam></game-gundam>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport gameGundam from '../../components/game/gameGundam';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, gameGundam},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=a7658d1a&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = 500) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = 500) {\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? { \r\n                x: this.pxStringToInt(anim.element.style.left), \r\n                y: this.pxStringToInt(anim.element.style.top), \r\n                rotation: anim.element.style.rotation \r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) :anim.to;\r\n            animationsArray.push({element, from, to});\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["staticStyle","_c","attrs","_vm","_s","key","$vuetify","width","link","Text","Icon","on","unselect","model","callback","showDrawer","require","staticClass","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","refreshG","style","top","gameWorld","height","boxHeight","player1","position","handHeight","cardHeight","miniboxHeight","y","fieldHeight","player2","display","size","cards","card","selectable","_e","choice","text","$event","GameGundamCardUnit","static","world","player","choiceType","choiceCard","hand","filter","x","index","field","push","location","GameGundamGlobal","locationField","cardSize","GameGundamCardCommandPilot","type","includes","locationHand","unitsOnField","isCardUnit","unitsOnFieldWithoutPilot","pair","PilotTargetAvailable","map","CommandtargetAvailable","targetUnit","length","showPopupSelectPilotOrCommand","_defineProperty","GameGundamCardCommand","CommandTargetAvailable","showPopupSelectCard","getCardsByIndex","to","center","explode","GameGundamCardPilot","pairCards","GameGundamCardBase","base","sendToGrave","isPlayer1Turn","active","degree","rotation","cardUnit","cardPilot","cardHeight25Percent","clone","zindex","hp","isLink","showPopup","targetAvailable","choices","popup","grave","isTrash","isCardPilot","isCardCommand","gameGundamCardPilot","gameGundamCardCommand","gameGundamCardUnit","isCardCommandPilot","gameGundamCardCommandPilot","isCardBase","gameGundamCardBase","ids","obj","Object","assign","GameGundamGridAndSize","w","h","desiredHeight","desiredWidth","gameWidth","gameHeight","cardWidth","boxWidth","handWidth","boxSize","centerX","centerY","infoLineX1","infoLineX2","infoLineX3","infoLineY01","infoLineY02","infoLineY03","infoLineY04","infoLineY05","infoLineY07","infoLineY06","infoLineY08","infoLineY04bis","infoLineY06bis","fieldWidth","isPlayer1","deck","shield","res","GameGundamManager","calculateGameSize","createPlayer","getPlayerPosition","draw","nonPlayerTurn","getPlayerTurn","resourcesEx","addToShield","nextTurn","refreshHandPosition","getPlayerTurnOpponent","createDeck","sortRandom","result","resAString","resourcesMax","resourcesRemaining","resBString","createDefaultBase","find","id","spawnCard","locationBase","gundam","trowa","i","concat","forEach","splice","locationDeck","setActive","resourcesAvailable","resources","setSelectableOff","getHandPosition","isSelectable","getFieldPosition","cardNumber","isCostAvailable","level","cost","getCardHandler","playCost","play","playCardCost","attack","refreshFieldPosition","lastChoiceType","selectCard","opponent","attackCard","endFight","locationShield","attacker","target","targetPlayer","ap","show","bgposition","message","alert","remainingCost","posIndex","getCardPosition","cardsLength","useRotateWidth","widthAvailable","rotateWidth","getCenteredX","elementWidth","totalElements","zoneWidth","marginCount","zoneWidthAvailable","marginWidth","sort","Math","random","class","absolute","shine","left","transform","folder","$emit","preventDefault","gameCard","freeze","showCardId","window","addEventListener","gameGundamManager","refreshGameSize","breakpoint","start","showText","showCard","createGame","refreshGame","animate","setTimeout","beginAnimation","cardsToAnimate","animationTime","animations","from","isIncrement","helperAnimation","endAnimation","selectChoice","selectChoiceType","selectChoiceCard","menuBarGundam","gameGundam","element","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","t","min","easedProgress","pow","currentX","currentY","currentRotation","requestAnimationFrame","val1","val2","value","parseInt","replace","animateMultiple","animationsArray","document","getElementById","console","log","pxStringToInt","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}