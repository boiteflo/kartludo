{"version":3,"file":"js/702.4e7d3564.js","mappings":"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","sources":["webpack://front/./src/components/menuBarGundam.vue","webpack://front/src/components/menuBarGundam.vue","webpack://front/./src/components/menuBarGundam.vue?63a1","webpack://front/./src/components/menuBarGundam.vue?fdbc","webpack://front/./src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/games/game.vue","webpack://front/./src/games/gundam/effects.js","webpack://front/./src/games/global.js","webpack://front/./src/games/gameTask.js","webpack://front/./src/games/positioner.js","webpack://front/./src/games/setup.js","webpack://front/./src/games/gameManager.js","webpack://front/./src/games/gundam/cardPlay.js","webpack://front/./src/games/gundam/cardAttack.js","webpack://front/./src/games/gundam/cardHandler.js","webpack://front/./src/games/gundam/manager.js","webpack://front/./src/games/card.vue","webpack://front/src/games/card.vue","webpack://front/./src/games/card.vue?5ce6","webpack://front/./src/games/card.vue?5060","webpack://front/./src/games/deck.vue","webpack://front/src/games/deck.vue","webpack://front/./src/games/deck.vue?7d6b","webpack://front/./src/games/deck.vue?2d1a","webpack://front/./src/games/deckList.vue","webpack://front/./src/games/deckListCard.vue","webpack://front/src/games/deckListCard.vue","webpack://front/./src/games/deckListCard.vue?d81c","webpack://front/./src/games/deckListCard.vue?43bb","webpack://front/src/games/deckList.vue","webpack://front/./src/games/deckList.vue?5bfd","webpack://front/./src/games/deckList.vue?5ba8","webpack://front/src/games/game.vue","webpack://front/./src/games/game.vue?bd72","webpack://front/./src/games/game.vue?3190","webpack://front/src/pages/gundam/GundamTcgFight.vue","webpack://front/./src/pages/gundam/GundamTcgFight.vue?0c41","webpack://front/./src/pages/gundam/GundamTcgFight.vue?457c","webpack://front/./src/helpers/helperAnimation.js","webpack://front/./src/assets/Gundam/cards/ sync ^\\.\\/.*\\.webp$","webpack://front/./src/assets/ sync ^\\.\\/.*\\.webp$","webpack://front/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://front/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.hide)?_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\",\"color\":\"black\"}},[_c('div',{staticStyle:{\"width\":\"320px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"160px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require('../assets/Gundam/wingzero2.gif')}})]),_c('div',{staticStyle:{\"width\":\"100px\",\"position\":\"absolute\",\"bottom\":\"0px\",\"top\":\"0px\",\"left\":\"120px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100px\",\"height\":\"100%\"},attrs:{\"src\":require('../assets/gradientBlack.png')}})]),_c('v-app-bar-nav-icon',{attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}}),_c('router-link',{attrs:{\"to\":\"/gundam\"}},[_c('v-btn',{staticStyle:{\"position\":\"relative\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":function($event){return _vm.unselect()}}},[_c('h3',{staticStyle:{\"position\":\"absolute\",\"left\":\"0px\",\"top\":\"-15px\",\"letter-spacing\":\"5px\"}},[_vm._v(\"GUNDAM\")]),_c('span',{staticStyle:{\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"0px\",\"font-size\":\"10px\"}},[_vm._v(_vm._s(_vm.version))])])],1),_c('v-spacer'),_vm._l((_vm.links),function(link){return _c('link-button',{key:'menuBarr' + link.Text,attrs:{\"url\":link.Url,\"external\":link.external,\"text\":_vm.$vuetify.breakpoint.width >= 1050 ? link.Text : '',\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2):_c('div',{staticClass:\"absolute\"},[_c('v-app-bar-nav-icon',{staticStyle:{\"z-index\":\"10\"},attrs:{\"variant\":\"text\"},on:{\"click\":function($event){_vm.showDrawer = true}}})],1),_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"temporary\":\"\",\"color\":\"black\"},model:{value:(_vm.showDrawer),callback:function ($$v) {_vm.showDrawer=$$v},expression:\"showDrawer\"}},[_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"400px\",\"object-position\":\"-50px 00px\",\"object-fit\":\"cover\",\"position\":\"absolute\"},attrs:{\"src\":require('../assets/Gundam/GundamLogo2.png')}}),_c('br'),_c('div',[_c('router-link',{attrs:{\"to\":\"/daggerheart\"}},[_c('v-btn',{attrs:{\"target\":\"_blank\",\"text\":\"\"}},[_c('h3',{staticClass:\"colorWhite\"},[_vm._v(\"Gundam\")])])],1),_vm._l((_vm.links),function(link){return _c('link-button',{key:'navigationDrawer' + link.Text,staticClass:\"m5px w100p\",attrs:{\"url\":link.Url,\"external\":link.external,\"text\":link.Text,\"icon\":link.Icon},on:{\"click\":function($event){return _vm.unselect()}}})})],2)]),(!_vm.hide && _vm.$vuetify.breakpoint.width >= 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"60px\"}}):_vm._e(),(!_vm.hide && _vm.$vuetify.breakpoint.width < 800)?_c('div',{staticClass:\"bg\",staticStyle:{\"height\":\"20px\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-app-bar v-if=\"!hide\" app dark color=\"black\">\r\n      <div style=\"width:320px; position:absolute; bottom:0px; top:0px; left:160px; overflow: hidden;\">\r\n        <img style=\"width:100px; \" :src=\"require('../assets/Gundam/wingzero2.gif')\" />\r\n      </div>\r\n      <div class=\"\" style=\"width:100px; position:absolute; bottom:0px; top:0px; left:120px; overflow: hidden;\">\r\n        <img style=\"width:100px; height:100%\" :src=\"require('../assets/gradientBlack.png')\" />\r\n      </div>\r\n      \r\n      <v-app-bar-nav-icon variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n      <router-link to=\"/gundam\">\r\n        <v-btn target=\"_blank\" style=\"position:relative\" text @click=\"unselect()\">\r\n          <h3 style=\"position:absolute; left:0px; top:-15px; letter-spacing:5px\">GUNDAM</h3>\r\n          <span style=\"position:absolute; top:5px; left:0px; font-size:10px\">{{ version }}</span>\r\n        </v-btn>\r\n      </router-link>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <link-button v-for=\"link in links\" :key=\"'menuBarr' + link.Text\" :url=\"link.Url\" :external=\"link.external\"\r\n        :text=\"$vuetify.breakpoint.width >= 1050 ? link.Text : ''\" :icon=\"link.Icon\" @click=\"unselect()\">\r\n      </link-button>\r\n\r\n    </v-app-bar>\r\n    <div v-else class=\"absolute\">\r\n      <v-app-bar-nav-icon style=\"z-index:10\" variant=\"text\" @click=\"showDrawer = true\"></v-app-bar-nav-icon>\r\n    </div>\r\n\r\n    <v-navigation-drawer v-model=\"showDrawer\" absolute temporary color=\"black\">\r\n\r\n      <img style=\"width:300px; height:400px; object-position: -50px 00px; object-fit:cover; position:absolute;\"\r\n        :src=\"require('../assets/Gundam/GundamLogo2.png')\" />\r\n      <br>\r\n      <div>\r\n        <router-link to=\"/daggerheart\">\r\n          <v-btn target=\"_blank\" text>\r\n            <h3 class=\"colorWhite\">Gundam</h3>\r\n          </v-btn>\r\n        </router-link>\r\n        <link-button v-for=\"link in links\" :key=\"'navigationDrawer' + link.Text\" :url=\"link.Url\"\r\n          :external=\"link.external\" :text=\"link.Text\" :icon=\"link.Icon\" class=\"m5px w100p\" @click=\"unselect()\">\r\n        </link-button>\r\n      </div>\r\n    </v-navigation-drawer>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width >= 800\" class=\"bg\" style=\"height:60px;\"></div>\r\n    <div v-if=\"!hide && $vuetify.breakpoint.width < 800\" class=\"bg\" style=\"height:20px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { store } from '../data/store.js'\r\n\r\nimport linkButton from './linkButton';\r\n\r\nexport default {\r\n  name: 'menuBarGundam',\r\n  components: { linkButton },\r\n  props: ['filteractive', 'hide'],\r\n  data: () => ({\r\n    store: store,\r\n    version : '',\r\n    searchString: '',\r\n    showDrawer: false,\r\n    links: [\r\n      { Text: 'Encyclopédie', Icon: 'mdi-book', external:true, Url: 'https://docs.google.com/presentation/d/13EMZDLqcDxfhsLHIzuKSSBsFIvNwjc2QLpWlew3B8Bk/edit?usp=drive_link' },\r\n      { Text: 'Cartes', Icon: 'mdi-cards', Url: '/gundamTcgFight' },\r\n    ]\r\n  }),\r\n  mounted(){\r\n    this.version = this.$version;\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script><span class=\"material-symbols-outlined\">\r\n\r\n</span>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menuBarGundam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menuBarGundam.vue?vue&type=template&id=3273ba29&\"\nimport script from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\nexport * from \"./menuBarGundam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./menuBarGundam.vue?vue&type=custom&index=0&blockType=span&class=material-symbols-outlined\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg2 h100p\"},[_c('menu-bar-gundam',{attrs:{\"hide\":true}}),_c('game')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{key:_vm.refreshG,staticClass:\"relative w100p h100p mask\"},[(_vm.decklistShow)?_c('deck-list',{staticStyle:{\"top\":\"50px\"},attrs:{\"decklist\":_vm.decklistShow,\"cardlist\":_vm.cardList,\"folder\":\"Gundam/cards/\"},on:{\"cardclick\":_vm.showCardDeckList,\"cancel\":function($event){return _vm.showDeckList(null)},\"validate\":_vm.selectDeckList}}):_vm._e(),(!_vm.game)?_c('div',[_c('h2',[_vm._v(\"Select deck for the \"+_vm._s(_vm.decklistPlayer1 ? 'opponent' : 'player'))]),_c('div',{staticClass:\"flex flex-wrap flex-space-around fontSize32\"},_vm._l((_vm.deckList),function(deck,index){return _c('deck',{key:'Deck' + index,attrs:{\"deck\":deck,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showDeckList(deck)}}})}),1)]):_vm._e(),_c('div',{staticClass:\"hide\"},[_vm._l((16),function(i){return _c('div',{key:'x' + i,staticClass:\"bgYellow absolute w100p\",style:({ height: _vm.game?.grid.box.height + 'px', top: _vm.getGridY(i - 1) + 'px' })})}),_vm._l((16),function(i){return _c('div',{key:'y' + i,staticClass:\"bgRed absolute h100p\",style:({ width: _vm.game?.grid.box.width + 'px', left: _vm.getGridX(i - 1) + 'px' })})})],2),_vm._l((_vm.game?.fields.filter(x => x.show)),function(box){return _c('div',{key:box.zone,class:{\n        absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\n        bgYellow2: box.isPlayer1 == _vm.game.isPlayer1 && box.location === 'locationHand'\n    },style:(_vm.getFieldStyle(box.x, box.y, box.width, box.height)),attrs:{\"id\":box.zone},on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, box)}}},[_vm._v(\" \"+_vm._s(box.text)+\" \")])}),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card1.x, _vm.game.grid.centerMini.card1.y,\n        _vm.game.grid.centerMini.card1.width, _vm.game.grid.centerMini.card1.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgRed absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.card2.x, _vm.game.grid.centerMini.card2.y,\n        _vm.game.grid.centerMini.card2.width, _vm.game.grid.centerMini.card2.height))}):_vm._e(),(_vm.game)?_c('div',{staticClass:\"bgYellow absolute hide\",style:(_vm.getFieldStyle(_vm.game.grid.centerMini.text.x, _vm.game.grid.centerMini.text.y,\n        _vm.game.grid.centerMini.text.width, _vm.game.grid.centerMini.text.height))}):_vm._e(),(_vm.game && _vm.game.textEffect)?_c('div',{staticClass:\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\",style:({\n            ..._vm.getFieldStyle(_vm.game.textEffect?.position.x, _vm.game.textEffect?.position.y,\n                _vm.game.textEffect?.position.width, _vm.game.textEffect?.position.height), 'z-index': 11\n        }),attrs:{\"id\":\"textEffect\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.game.textEffect.text)}})]):_vm._e(),(_vm.aside)?_c('div',{staticClass:\"flex absolute\"},[_c('div',{staticClass:\"bg\",staticStyle:{\"width\":\"300px\",\"height\":\"100%\"}},[_c('div',{staticClass:\"relative\"},[_c('gameCard',{attrs:{\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"}})],1),_c('div',{staticStyle:{\"height\":\"420px\"}}),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.start}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" Start \")],1),_c('v-btn',{staticClass:\"bg m5px\",attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_c('v-icon',[_vm._v(\"mdi-arrow-right-thin\")]),_vm._v(\" End Turn \")],1),_c('div',{staticClass:\"mp5px\",domProps:{\"innerHTML\":_vm._s(_vm.game?.logs)}})],1)]):_vm._e(),_vm._l((_vm.cards),function(card){return _c('div',{key:'B' + card.index,on:{\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}},[_c('gameCard',{attrs:{\"id\":'C' + card.index,\"card\":card,\"folder\":\"Gundam/cards/\",\"shine\":card.selectable && !_vm.freeze,\"hidestat\":card.hidestat,\"draggable\":\"true\"},on:{\"mouseover\":function($event){return _vm.showCardMouseOver(card)},\"click\":function($event){return _vm.showCard(card)},\"dragover\":_vm.onDragOver,\"drop\":function($event){return _vm.onDrop($event, card)}}})],1)}),(_vm.game)?_c('div',[_c('div',{staticClass:\"bgYellow absolute cirlce10px\",style:({ left: _vm.game.grid.x0 + 'px', top: '30px', height: _vm.game.grid.hand.height - 25 + 'px', width: _vm.game.fields[0].width + 'px' })},[_c('v-btn',{class:{ bg: true, w100p: true, h100p: true, shine: !_vm.freeze, fontSize1em: true },staticStyle:{\"min-width\":\"0px\"},attrs:{\"target\":\"_blank\",\"text\":\"\"},on:{\"click\":_vm.nextTurn}},[_vm._v(\" End \"),_c('br'),_vm._v(\"Turn \")])],1)]):_vm._e(),(_vm.game?.popup)?_c('div',{staticClass:\"textVerticalCenter\",staticStyle:{\"z-index\":\"12\",\"width\":\"100%\",\"height\":\"64px\",\"position\":\"fixed\",\"top\":\"0px\",\"left\":\"0px\"}},[_c('div',{staticStyle:{\"background-color\":\"#FFFF00F0\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('h3',{staticClass:\"text-center colorBlack textVerticalCenter w100p\",domProps:{\"innerHTML\":_vm._s(_vm.game?.popup.text)}}),_c('div',{staticClass:\"flex-wrap w100p\"},_vm._l((_vm.game?.popup.cards),function(card,index){return _c('div',{key:'PopUpCard' + index,staticClass:\"mp5px cursorHand\"},[_c('img',{style:(_vm.getFieldStyleObj(_vm.game?.grid.card6)),attrs:{\"src\":require('@/assets/Gundam/cards/' + card.id + '.webp')},on:{\"click\":function($event){return _vm.selectChoiceCard(card)}}})])}),0),_c('span',{staticClass:\"relative\"},_vm._l((_vm.game?.popup.choices),function(choice,index){return _c('span',{key:'Choice' + index},[(choice.text)?_c('v-btn',{staticClass:\"m10px\",on:{\"click\":function($event){return _vm.selectChoice(choice)}}},[_vm._v(\" \"+_vm._s(choice.text)+\" \")]):_vm._e()],1)}),0)])]):_vm._e(),(_vm.game && _vm.game.tasks)?_c('div',{staticClass:\"absolute hide\",staticStyle:{\"z-index\":\"12\"}},[_vm._v(\" \"+_vm._s(_vm.game.tasks.map(x => x.id))+\" \")]):_vm._e(),_c('div',{staticClass:\"absolute bgWhite mask\",staticStyle:{\"top\":\"80px\",\"width\":\"100%\",\"height\":\"0px\",\"z-index\":\"13\"},attrs:{\"id\":\"divTitleParent\"}},[_c('div',{staticClass:\"relative\"},[_c('div',{staticClass:\"text-center absolute w100p title\",staticStyle:{\"left\":\"-000px\",\"top\":\"30px\"}},[_vm._v(_vm._s(_vm.title)+\" \")])])]),_c('gameCard',{staticStyle:{\"z-index\":\"12\"},attrs:{\"id\":\"cardCenter\",\"card\":_vm.cardCenter,\"folder\":\"Gundam/cards/\"},on:{\"click\":function($event){return _vm.showCard(null)}}}),_c('div',{staticClass:\"absolute hide\"},[_vm._v(\" hello world \")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gameTask from '../gameTask';\r\nimport global from '../global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass GameGundamEffect {\r\n    // trigger\r\n    static onplay = 'onplay';\r\n    static onpair = 'onpair';\r\n    static onlink = 'onlink';\r\n    static battle = 'battle';\r\n    static burst = 'burst';\r\n    static command = 'command';\r\n    static ondestroyed = 'ondestroyed';\r\n    static end = 'end';\r\n\r\n    static removeOneTurnEffect(cards) {\r\n        cards.filter(x => x.removeEndTurn).forEach(card => {\r\n            const lost = [];\r\n            card.removeEndTurn.forEach(fx => {\r\n                delete card[fx.id];\r\n                lost.push(fx.id);\r\n            })\r\n            global.log(`${card.name} lost ${lost.join(', ')}`);\r\n        });\r\n    }\r\n\r\n    static handleEffects(player, card1, card2, trigger) {\r\n        const effectsRemainings = this.getEffectsRemaining(trigger, card1, card2);\r\n        if (!effectsRemainings || effectsRemainings.length < 1)\r\n            return {};\r\n\r\n        const text = effectsRemainings.map(x => this.getEffectText(x)).join('<br>');\r\n        const delay = global.delay;\r\n        const isShowingEffect = global.cardHighlight.find(x => x.index === card1.index);\r\n\r\n        if (!isShowingEffect) {\r\n            global.game.tasks = [{ id: gameTask.taskCardsToMiniCenter.name, delay, card1, card2, text }]\r\n                .concat(global.game.tasks);\r\n            return { stop: true };\r\n        } else\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskRefreshField.name, isPlayer1: card1.isPlayer1 }]);\r\n\r\n        return this.apply(trigger, player, card1, card2);\r\n    }\r\n\r\n    static getEffectText(effect) {\r\n        let result = [effect.id?.toString(), effect.value?.toString(), effect.target?.toString(), effect.effect2?.toString()];\r\n        if (effect.ap)\r\n            result.push('ap ' + effect.ap);\r\n\r\n        if (effect.hp)\r\n            result.push('hp ' + effect.ap);\r\n\r\n        if(effect.effects)\r\n            result = result.concat(effect.effects.map(x=> this.getEffectText(x)).join(', '));\r\n\r\n        return result.filter(x => x && x.length > 0).join(' ');\r\n    }\r\n\r\n    static apply(trigger, player, card1, card2) {\r\n        card1.effectsRemaining = this.getEffectsRemaining(trigger, card1, card2);\r\n        let result = {};\r\n        global.effects = [];\r\n\r\n        if (card1.effectsRemaining.length < 1)\r\n            return { nothing: true };\r\n\r\n        const toBeRemoved = [];\r\n        card1.effectsRemaining.forEach((effect, index) => {\r\n            if (result.stop)\r\n                return;\r\n\r\n            effect.index = index;\r\n            result = { ...result, ...this.applyEffect(player, card1, card2, effect) };\r\n\r\n            if (effect.oneTurn)\r\n                card1.removeEndTurn = card1.removeEndTurn ? card1.removeEndTurn.concat([effect]) : [effect];\r\n\r\n            if (!result.stop)\r\n                toBeRemoved.push(effect.index);\r\n        });\r\n\r\n        card1.effectsRemaining = card1.effectsRemaining.filter(x => !toBeRemoved.includes(x.index));\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEffectsRemaining(trigger, card1, card2) {\r\n        const multiTriggers = [this.onpair, this.onlink];\r\n        let effects = !card1.effects ? [] : card1.effects;\r\n        if (multiTriggers.includes(trigger))\r\n            effects = effects.concat(card2.effects);\r\n\r\n        let result = effects.filter(effect => effect.trigger == trigger);\r\n        if (trigger === this.onlink)\r\n            result = result.concat(this.getEffectsRemaining(this.onpair, card1, card2));\r\n        return result;\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, effect) {\r\n        const opponent = global.getPlayer(!player.isPlayer1);\r\n        const needNewCard2 = ['opponentUnitHpUnderValue'];\r\n        let card2Obj = effect.target && needNewCard2.includes(effect.target) ? null : card2;\r\n\r\n        if (effect.target && !card2Obj) {\r\n            if(effect.card2){\r\n                card2Obj = effect.card2;\r\n            }\r\n            else if (global.game.cardChoice) {\r\n                card2Obj = global.game.cardChoice;\r\n                effect.card2 = card2Obj;\r\n                global.deletePopup();\r\n            }\r\n            else {\r\n                let cards = [];\r\n                if (effect.target === 'opponentUnitHpUnderValue') {\r\n                    cards = opponent.field.filter(x => global.isCardUnit(x) && x.hp < effect.value);\r\n                }\r\n                else if (effect.target === 'unit') {\r\n                    alert('cant do that');\r\n                    global.logEffect(effect, 'Can t handle this effect (because of target=unit) : ' + JSON.stringify(effect));\r\n                    return { stop: true }\r\n                }\r\n\r\n                if (cards.length < 1) {\r\n                    console.log(`Can't play the effect of ${card1.name} (${effect.id}) because there is no target available`);\r\n                    return {};\r\n                }\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select available target',\r\n                    cards\r\n                }].concat(global.game.tasks);\r\n                return { stop: true }\r\n            }\r\n        }\r\n\r\n        return this[effect.id](player, card1, card2Obj, effect);\r\n    }\r\n\r\n    /*\r\n    -------------------------------- Effects ------------------------------------\r\n    */\r\n\r\n    static discard(player, card1, card2, effect){\r\n        const card = global.game.cardChoice;\r\n        if(!card){\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select a card to discard',\r\n                cards: player.hand\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        \r\n        global.deletePopup();\r\n        global.move(player, card, null, global.locationTrash);\r\n    }\r\n\r\n    static pilotToHand(player, card1, card2, effect){\r\n        if(!card1.pair)\r\n            return;\r\n\r\n        const card = card1.pair;\r\n        delete(card1.pair);\r\n        card.isPaired=false;\r\n        global.move(player, card, null, global.locationHand);\r\n    }\r\n\r\n    static gainEffects(player, card1, card2, effect) {\r\n        card1.effects = card1.effects.concat(effect.effects);\r\n    }\r\n\r\n    static rest(player, card1, card2, effect) {\r\n        global.setActive(card2, false);\r\n    }\r\n\r\n    static repair(player, card1, card2, effect) {\r\n        card1.hp = Math.min(card1.hp + effect.value, card1.hpMax);\r\n    }\r\n\r\n    static get1ShieldToHand(player, card1, card2, effect) {\r\n        if (player.shield.length < 1)\r\n            return;\r\n\r\n        const card = player.shield.splice(0, 1)[0];\r\n        const text = 'Get one shield to hand';\r\n        card.location = player.positions.shield.location;\r\n        gameTask.addTasks(global.game.tasks, [{\r\n            id: gameTask.taskMove.name,\r\n            card1: card,\r\n            to: global.locationHand,\r\n            isPlayer1: player.isPlayer1\r\n        }]);\r\n        global.logEffect(effect, text);\r\n    }\r\n\r\n    static top2DeckCard1Top1Bottom(player, card1, card2, effect) {\r\n        if (!global.game.cardChoice) {\r\n            const cards = [global.getAndRemoveFirst(player.deck), global.getAndRemoveFirst(player.deck)];\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Select the card that will go to the top deck, the other one will go bottom deck',\r\n                cards,\r\n                select: 'top2DeckCard1Top1BottomSelect'\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        }\r\n        else {\r\n            const bottomCard = global.game.popup.cards.filter(card => card.index !== global.game.cardChoice.index);\r\n            player.deck = [global.game.cardChoice].concat(player.deck).concat(bottomCard);\r\n            global.deletePopup();\r\n        }\r\n    }\r\n\r\n    static protectionShieldLvXOrLower(player, card1, card2, effect) {\r\n        if (player.base || card2.index)\r\n            return;\r\n\r\n        const shield = player.shield[0];\r\n        const stop = shield.level < effect.value;\r\n        if (stop)\r\n            global.logEffect(effect, `attack cancel because ${card1.name} has level < ${effect.value}`);\r\n        return { stop };\r\n    }\r\n\r\n    static gainThisTurn(player, card1, card2, effect) {\r\n        const effectClone = global.clone(effect);\r\n        delete effectClone.target;\r\n        effectClone.id = effectClone.effect2;\r\n        global.logEffect(effect, `${card1.name} give ${effect.effect2} to ${card2.name}`);\r\n        this.applyEffect(player, card2, null, effectClone);\r\n        card2.removeEndTurn = [effectClone];\r\n    }\r\n\r\n    static incruise(player, card1, card2, effect) {\r\n        card1.ap += effect.ap;\r\n        card1.hp += effect.hp;\r\n        card1.hpMax += effect.hp;\r\n        global.logEffect(effect, `${card1.name} have been incruised by AP ${effect.ap} and HP ${effect.hp}`);\r\n    }\r\n\r\n    static sendToHand(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationHand);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToField(player, card1, card2, effect) {\r\n        global.move(player, card1, null, global.locationField);\r\n        global.logEffect(effect, `${card1.name} is send to hand`);\r\n        return {};\r\n    }\r\n\r\n    static sendToBase(player, card1, card2, effect) {\r\n        //global.move(player, card1, null, global.locationHand);\r\n        //global.logEffect(effect, `${card1.name} is send to hand`);\r\n        card1.location = global.locationShield;\r\n        gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPlayCard.name, card1: card1, zone: player.positions.field }]);\r\n        return {};\r\n    }\r\n\r\n    static placeExResource(player, card1, card2, effect) {\r\n        player.resourcesEx += effect.value;\r\n        player.resourcesAvailable += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} ex resource`);\r\n    }\r\n\r\n    static placeRestedResource(player, card1, card2, effect) {\r\n        player.resourcesMax += effect.value;\r\n        player.resAString = player.resourcesAvailable + '/' + player.resourcesMax;\r\n        global.logEffect(effect, `${card1.name} deploy ${effect.value} rested resource`);\r\n    }\r\n\r\n    static breach(player, card1, card2, effect) {\r\n        if (!card1.breach || card1.breach < effect.value) {\r\n            card1.breach = effect.value;\r\n            global.logEffect(effect, `${card1.name} has breach ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static deploy(player, card1, card2, effect) {\r\n        const targets = player.hand.filter(x => x.name.includes(effect.target) || x.attribute.includes(effect.target));\r\n        if (targets.length < 1) return;\r\n        const card = targets[0];\r\n        card.selectable = false;\r\n        card.canAttack = false;\r\n        global.move(player, card, card.location, global.locationField);\r\n        global.logEffect(effect, `${card1.name} deploy ${card.name}`);\r\n        this.apply(GameGundamEffect.onplay, player, card, null);\r\n    }\r\n\r\n    static attackActiveEnnemy(player, card1, card2, effect) {\r\n        if (!card1.attackActiveEnnemy || card1.attackActiveEnnemy < effect.value) {\r\n            card1.attackActiveEnnemy = effect.value;\r\n            global.logEffect(effect, `${card1.name} can attack unit with AP < ${effect.value}`);\r\n        }\r\n    }\r\n\r\n    static immuneAp(player, card1, card2, effect) {\r\n        if (card1.breach) {\r\n            if (!card1.immuneAp || card1.immuneAp < effect.value) {\r\n                card1.immuneAp = effect.value;\r\n                global.logEffect(effect, `${card1.name} is now immune to AP < ${effect.value}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameGundamEffect;","// import gameTask from './gameTask';\r\nimport effects from './gundam/effects'\r\n\r\nclass global {\r\n    static game = null;\r\n    static grid;\r\n    static index = 1;\r\n    static isPlayer1;\r\n    static delay;\r\n    static effects;\r\n    static cardHighlight = [];\r\n    static needTaskEndRefresh = false;\r\n\r\n    static phase = 0;\r\n    static phaseStart = 0;\r\n    static phaseDraw = 1;\r\n    static phaseResource = 2;\r\n    static phaseMain = 3;\r\n    static phaseAttack = 4;\r\n    static phaseBlock = 5;\r\n    static phaseAction = 6;\r\n    static phaseDamage = 7;\r\n    static phaseEnd = 8;\r\n\r\n    static locationEmpty = 'locationEmpty';\r\n    static locationTrash = 'locationTrash';\r\n    static locationDeck = 'locationDeck';\r\n    static locationShield = 'locationShield';\r\n    static locationHand = 'locationHand';\r\n    static locationField = 'locationField';\r\n    static locationBase = 'locationBase';\r\n    static locationResource = 'locationResource';\r\n    static locationPair = 'locationPair';\r\n\r\n    static getLocationArrayProperty(location) {\r\n        if (location == this.locationEmpty) return 'empty';\r\n        else if (location == this.locationDeck) return 'deck';\r\n        else if (location == this.locationShield) return 'shield';\r\n        else if (location == this.locationHand) return 'hand';\r\n        else if (location == this.locationField) return 'field';\r\n        else if (location == this.locationBase) return 'base';\r\n        else if (location == this.locationResource) return 'resource';\r\n        else if (location == this.locationPair) return null;\r\n        return 'trash';\r\n    }\r\n\r\n    static spawnOrMove(player, card, locationFrom, locationTo) {\r\n        const cardSpawn = this.move(player, card, locationFrom, locationTo);\r\n        this.spawnIfNot(cardSpawn);\r\n        return cardSpawn;\r\n    }\r\n\r\n    static spawnIfNot(card) {\r\n        if (!card)\r\n            return;\r\n\r\n        if (!global.game.cards.find(x => x.index === card.index))\r\n            global.game.cards = global.addIn(global.game.cards, card);\r\n\r\n        const player = card.isPlayer1 ? global.game.player1 : global.game.player2;\r\n        if (!card.position)\r\n            card.position = this.clone(player.positions.deck);\r\n        card.zindex = 11;\r\n    }\r\n\r\n    static move(player, card, locationFrom, locationTo) {\r\n        if (!locationFrom && card && card.location)\r\n            locationFrom = card.location;\r\n\r\n        const from = global.getLocationArrayProperty(locationFrom);\r\n        const to = global.getLocationArrayProperty(locationTo);\r\n\r\n        if (!card)\r\n            card = player[from].splice(0, 1)[0];\r\n        else if(from)\r\n            player[from] = global.removeByIndex(player[from], card);\r\n\r\n        if (!card && locationFrom === this.locationDeck)\r\n            this.end(player.isPlayer1);\r\n\r\n        if (!card)\r\n            return;\r\n\r\n        if (!card.isTemporaryCard || (card.isTemporaryCard && locationTo === this.locationField) )\r\n            player[to] = global.addIn(player[to], card);\r\n\r\n        if (from)\r\n            card.position = card.position ? card.position : this.clone(player.positions[from]);\r\n        if (from)\r\n            card.location = player.positions[from].location;\r\n\r\n        card.isPlayer1 = player.isPlayer1;\r\n        card.active = true;\r\n        card.hidestat = card.location === global.locationTrash;\r\n\r\n        if (card.pair) {\r\n            card.pair.isPaired = false;\r\n            card.pair.link = false;\r\n            this.move(player, card.pair, locationFrom, locationTo);\r\n            delete (card.pair);\r\n            card.link = false;\r\n        }\r\n\r\n        const needToRefreshAllField = [global.locationHand, global.locationField].includes(locationTo);\r\n        if (!needToRefreshAllField) {\r\n            card.to = this.clone(player.positions[to]);\r\n            if (locationTo === this.locationTrash) {\r\n                card.to.height = 0;\r\n                card.hidestat = true;\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        const cardUnit = this.isCardUnit(card1) ? card1 : card2;\r\n        const cardPilot = this.isCardPilot(card1) ? card1 : card2;\r\n        const isLink = this.isLink(cardUnit, cardPilot);\r\n        const trigger = isLink ? effects.onlink : effects.onpair;\r\n        const effectResult = effects.handleEffects(player, cardUnit, cardPilot, trigger);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        const from = global.getLocationArrayProperty(cardPilot.location);\r\n        player[from] = global.removeByIndex(player[from], cardPilot);\r\n        cardUnit.pair = cardPilot;\r\n        cardPilot.selectable = false;\r\n        cardPilot.isPaired = true;\r\n        cardPilot.location = global.locationPair;\r\n        cardPilot.zindex = 1;\r\n        cardUnit.zindex = 2;\r\n        cardUnit.ap += cardPilot.ap;\r\n        cardUnit.hp += cardPilot.hp;\r\n\r\n        if (this.isLink(cardUnit, cardPilot)) {\r\n            cardUnit.link = true;\r\n            cardPilot.link = true;\r\n            cardUnit.active = true;\r\n            cardUnit.selectable = true;\r\n            cardUnit.canAttack = true;\r\n        }\r\n    }\r\n\r\n    static isLink(cardUnit, cardPilot) {\r\n        if(cardUnit.link.includes('['))\r\n            return cardUnit.link.includes(cardPilot.name);\r\n        else{\r\n            const targetStr = cardUnit.link.replace('(','').replace(')','');\r\n            return cardPilot.attribute.includes(targetStr);\r\n        }\r\n    }\r\n\r\n    static end(isPlayer1) {\r\n        this.game.end = true;\r\n        const message = isPlayer1 ? 'Defeat' : 'Victory';\r\n        alert(message);\r\n    }\r\n\r\n    static createCard(id) {\r\n        const card = this.clone(this.cards.find(x => x.id === id));\r\n        card.index = this.getNextIndex();\r\n        card.hpMax = card.hp;\r\n        return card;\r\n    }\r\n\r\n    static getNextIndex() {\r\n        this.index++;\r\n        return this.index;\r\n    }\r\n\r\n    // Card\r\n    static setActive(card, active) {\r\n        card.active = active;\r\n        card.selectable = false;\r\n        card.canAttack = active;\r\n        const degree = card.active ? 0 : 90;\r\n        if (!card.to)\r\n            card.to = this.clone(card.position);\r\n        card.to.rotation = degree;\r\n    }\r\n\r\n    // Player Turn\r\n    static getPlayerTurn() {\r\n        return global.isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getPlayerTurnOpponent() {\r\n        return global.isPlayer1 ? global.game.player2 : global.game.player1;\r\n    }\r\n    static getPlayer(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n    static getOpponent(isPlayer1) {\r\n        return isPlayer1 ? global.game.player1 : global.game.player2;\r\n    }\r\n\r\n    // Array\r\n    static addListInArrayAfterIndex(array, index, list) {\r\n        if (!array)\r\n            return list;\r\n\r\n        if (!list)\r\n            return array;\r\n\r\n        if (index >= array.length)\r\n            return array.concat(list);\r\n\r\n        if (index < 0 || index >= array.length)\r\n            return list.concat(array);\r\n\r\n        return [...array.slice(0, index), ...list, ...array.slice(index)];\r\n    }\r\n\r\n    static getAndRemoveFirst(array) {\r\n        return array.splice(0, 1)[0];\r\n    }\r\n\r\n    static removeByIndex(array, card) {\r\n        return array.filter(x => x.index !== card.index);\r\n    }\r\n\r\n    static addIn(array, card) {\r\n        if (array && !array.includes(x => x.index === card.index))\r\n            return array.concat([card]);\r\n    }\r\n\r\n    static sortRandom(cards) { return cards.sort(() => Math.random() - 0.5); }\r\n\r\n    static deletePopup() {\r\n        delete (this.game.popup);\r\n        delete (this.game.choice);\r\n        delete (this.game.actionPlayer);\r\n        delete (this.game.actionOpponent);\r\n        delete (this.game.cardChoice);\r\n    }\r\n\r\n    // Card Type\r\n    static isCardUnit(card) { return card.type?.includes(0); }\r\n    static isCardPilot(card) { return card.type?.includes(1); }\r\n    static isCardCommand(card) { return card.type?.includes(2); }\r\n    static isCardCommandPilot(card) { return this.isCardPilot(card) && this.isCardCommand(card); }\r\n    static isCardBase(card) { return card.type?.includes(3); }\r\n    static isCardToken(card) { return card.type?.includes(4); }\r\n    static isCardResource(card) { return card.type?.includes(5); }\r\n\r\n    // Utils\r\n    static log(text) { this.game.logs = text + '<br>' + this.game.logs; }\r\n    static logEffect(effect, text) {\r\n        this.log(text);\r\n        this.effects = this.effects ? this.effects.concat([text]) : [text];\r\n    }\r\n\r\n    static clone(obj) { return Object.assign({}, obj); }\r\n}\r\n\r\n\r\nexport default global;\r\n","import global from './global';\r\n\r\n/* eslint-disable no-unused-vars */\r\nclass gameTask {\r\n    static addTasks(list, tasks) {\r\n        global.needTaskEndRefresh = true;\r\n        tasks.forEach(task => list.push(task));\r\n    }\r\n\r\n    static alreadyInclude(list, task) {\r\n        return list.find(x => this.isEqual(x, task));\r\n    }\r\n\r\n    static isEqual(task1, task2) {\r\n        const result = task1.id === task2.id\r\n            && task1.isPlayer1 === task2.isPlayer1\r\n            && task1.value === task2.value;\r\n        if (result === false) return false;\r\n        if (task1.card && !task2.card) return false;\r\n        else if (!task1.card && task2.card) return false;\r\n        else if (task1.card && task2.card && task1.card.index === task2.card.index) return false;\r\n        return result;\r\n    }\r\n\r\n    static removeDelay(list, taskid) {\r\n        const task = [...list].reverse().find(t => t.id === taskid && t.delay);\r\n        if (task)\r\n            delete (task.delay);\r\n    }\r\n\r\n    static handleTasks(game) {\r\n        if (game.end){\r\n            game.tasks = [];\r\n            return game;\r\n        }\r\n\r\n        let task = game.tasks[0];\r\n        game.refresh = task ? true : false;\r\n        let i = 0;\r\n\r\n        while (task && i < 100) {\r\n            const isPlayer1 = task.isPlayer1 ? task.isPlayer1 : task.card1 && task.card1.isPlayer1 ? task.card1.isPlayer1 : task.isPlayer1;\r\n            const player = isPlayer1 ? game.player1 : game.player2;\r\n\r\n            let tasksString = game.tasks.map(x=> x.id).join(', ');\r\n            const result = this[task.id](game, task, player);\r\n            tasksString = game.tasks.map(x=> x.id).join(', ');\r\n            \r\n            if (result && result.stop)\r\n                return game;\r\n\r\n            if (task.delay) {\r\n                game.wait = task.delay;\r\n                task = game.tasks.splice(0, 1)[0];\r\n                return game;\r\n            }\r\n\r\n            task = game.tasks.splice(0, 1)[0];\r\n            task = game.tasks[0];\r\n            i++;\r\n        }\r\n\r\n        if (global.needTaskEndRefresh)\r\n            this.taskEndRefresh(game);\r\n\r\n        return game;\r\n    }\r\n\r\n    static taskEndRefresh(game) {\r\n        global.needTaskEndRefresh = false;\r\n        global.cardHighlight = [];\r\n        game.refreshOnlyTextEffect = false;\r\n        delete (game.textEffect);\r\n        game.manager.refreshFieldAndHand(game.player1);\r\n        game.manager.refreshFieldAndHand(game.player2);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static taskRefreshField(game, task, player) {\r\n        game.manager.refreshFieldAndHand(player);\r\n        this.taskTextHide(game, task, player);\r\n    }\r\n\r\n    static taskTitleShow(game, task, player) {\r\n        game.showTitle = task.value;\r\n    }\r\n\r\n    static taskTextShow(game, task, player) {\r\n        game.textEffect = {\r\n            text: task.text,\r\n            position: global.clone(global.grid.centerMini.text)\r\n        };\r\n        game.textEffect.to = global.clone(game.textEffect.position);\r\n        game.textEffect.position.height = 0;\r\n    }\r\n\r\n    static taskTextHide(game, task, player) {\r\n        game.refreshOnlyTextEffect = false;\r\n        if (!game.textEffect)\r\n            return;\r\n\r\n        game.textEffect.position.height = global.grid.centerMini.text.height;\r\n        game.textEffect.to = { ...global.clone(game.textEffect.position), height: 0 };\r\n        game.refreshOnlyTextEffect = true;\r\n    }\r\n\r\n    static taskMove(game, task, player) {\r\n        global.spawnOrMove(player, task.card1, task.from, task.to);\r\n    }\r\n\r\n    static taskMoveAndShowCenter(game, task, player) {\r\n        const card = global.spawnOrMove(player, task.card1, task.from, task.to);\r\n        const taskCenter = { id: this.taskCardToCenter.name, card1: card, isPlayer1: task.isPlayer1, delay: global.delay };\r\n        global.game.tasks = global.addListInArrayAfterIndex(global.game.tasks, 1, [taskCenter]);\r\n    }\r\n\r\n    static taskCardsToMiniCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        const destination = task.card2 ? global.grid.centerMini.card1 : global.grid.centerMini.card3;\r\n        task.card1.to = global.clone(destination);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n\r\n        if (task.card2) {\r\n            global.spawnIfNot(task.card2);\r\n            global.cardHighlight.push(task.card2);\r\n            task.card2.to = global.clone(global.grid.centerMini.card2);\r\n            task.card2.to.rotation = 0;\r\n            task.card2.zindex = 11;\r\n        }\r\n\r\n        if (task.text) {\r\n            this.taskTextShow(game, task, player);\r\n        }\r\n    }\r\n\r\n    static taskCardToCenter(game, task, player) {\r\n        if (!task.card1)\r\n            return;\r\n\r\n        global.spawnIfNot(task.card1);\r\n        global.cardHighlight.push(task.card1);\r\n        task.card1.to = global.clone(global.grid.center);\r\n        task.card1.to.rotation = 0;\r\n        task.card1.zindex = 11;\r\n    }\r\n\r\n    static taskAttack(game, task, player) {\r\n        game.taskAttack = task;\r\n        return game.manager.attack(task.player, task.opponent, task.attacker, task.target, task.zone, task.breach);\r\n    }\r\n\r\n    static taskPopup(game, task, player) {\r\n        if (!game.cardChoice && !game.choice) {\r\n            game.popup = task;\r\n            return { stop: true };\r\n        }\r\n    }\r\n\r\n    static taskPlayCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.playCard(cardPlayer, task.card1, task.card2, task.zone, task.regularPlay);\r\n    }\r\n\r\n    static taskPairCard(game, task, player) {\r\n        const cardPlayer = global.getPlayer(task.card1.isPlayer1);\r\n        return game.manager.pair(cardPlayer, task.card1, task.card2);\r\n    }\r\n\r\n    static taskApplyEffect(game, task, player) {\r\n        return game.manager.applyEffect(player, task.card1, task.card2, task.trigger);\r\n    }\r\n}\r\n\r\n\r\nexport default gameTask;\r\n","import global from './global';\r\n\r\nclass positioner {\r\n\r\n    static createGrid(width, height) {\r\n        const grid = {};\r\n        grid.width = width;\r\n        grid.height = height - 0;\r\n        grid.border = 5;\r\n        grid.border2 = grid.border * 2;\r\n        const divide = 16;\r\n        grid.widthB = grid.width - (grid.border * (divide + 1));\r\n        grid.heightB = grid.height - grid.border * (divide + 1);\r\n\r\n        grid.box = { height: grid.heightB / divide };\r\n        grid.box.width = grid.widthB / divide;\r\n        grid.boxbig = { height: 2 * grid.box.height + grid.border, width: 2 * grid.box.width + grid.border };\r\n        grid.hand = { width: (grid.box.width + grid.border) * divide - grid.border, height: 3 * (grid.box.height + grid.border) - grid.border };\r\n        grid.field = { width: grid.hand.width - grid.box.width - grid.border, height: grid.hand.height + 2 * (grid.box.height + grid.border) };\r\n\r\n        grid.hand.card = this.getCardSize(grid.hand.width, grid.hand.height, 6);\r\n        // grid.field.cardHeightPercent = 0.54;\r\n        grid.field.card = this.getCardSize(grid.field.width, grid.field.height, 6, grid.field.cardHeightPercent);\r\n\r\n        grid.card6 = this.getCardSize(grid.width, grid.height, 6);\r\n\r\n        for (let i = 0; i < divide; i++) {\r\n            grid['x' + i] = 5 + (i * (grid.box.width + 5));\r\n            grid['y' + i] = 5 + (i * (grid.box.height + 5));\r\n        }\r\n\r\n        grid.center = this.getCardSize(grid.width - grid.border2, grid.height - grid.border2, 1);\r\n        grid.centerMini = { width: width - (2 * grid.x1), height: height - (2 * grid.y1), location: 0, zone: 'centerMini1' };\r\n        grid.centerMini.card1 = this.getCardSize(grid.centerMini.width, grid.centerMini.height, 2);\r\n        grid.centerMini.x = (width - (grid.centerMini.card1.width * 2)) / 2;\r\n        grid.centerMini.y = 5; // (height - (grid.centerMini.card1.height * 1)) / 2;\r\n        grid.centerMini.card1.x = grid.centerMini.x;\r\n        grid.centerMini.card1.y = grid.centerMini.y;\r\n        grid.centerMini.card2 = global.clone(grid.centerMini.card1);\r\n        grid.centerMini.card2.x += grid.centerMini.card1.width;\r\n        grid.centerMini.card3 = { ...grid.centerMini.card1, x: grid.centerMini.card1.x + (grid.centerMini.card1.width / 2) };\r\n        grid.centerMini.text = { x: grid.centerMini.x, y: grid.centerMini.y + grid.centerMini.card1.height, width: grid.centerMini.card1.width * 2 };\r\n        grid.centerMini.text.height = height - grid.centerMini.text.y - grid.border;\r\n        grid.centerMini.text.height = Math.min(grid.centerMini.text.height, 150);\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    static getPositions(grid, isPlayer1) {\r\n        let result = {};\r\n        if (grid.box.width > 50)\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x15, grid.y8, grid.x0, grid.y7, grid.box.width, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x15, grid.y9, grid.x0, grid.y6, grid.box.width, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x15, grid.y10, grid.x0, grid.y5, grid.box.width, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x15, grid.y11, grid.x0, grid.y4, grid.box.width, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x15, grid.y12, grid.x0, grid.y3, grid.box.width, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x1, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x1, grid.y3, grid.field.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n        else\r\n            result = {\r\n                base: this.createZone(isPlayer1, grid.x14, grid.y8, grid.x0, grid.y7, grid.box.width * 2, grid.box.height, 'base', global.locationBase),\r\n                shield: this.createZone(isPlayer1, grid.x14, grid.y9, grid.x0, grid.y6, grid.box.width * 2, grid.box.height, 'shield', global.locationShield),\r\n                deck: this.createZone(isPlayer1, grid.x14, grid.y10, grid.x0, grid.y5, grid.box.width * 2, grid.box.height, 'deck', global.locationDeck),\r\n                trash: this.createZone(isPlayer1, grid.x14, grid.y11, grid.x0, grid.y4, grid.box.width * 2, grid.box.height, 'trash', global.locationTrash),\r\n                resource: this.createZone(isPlayer1, grid.x14, grid.y12, grid.x0, grid.y3, grid.box.width * 2, grid.box.height, 'res', global.locationResource),\r\n                hand: this.createZone(isPlayer1, grid.x0, grid.y13, grid.x2, grid.y0, grid.hand.width, grid.hand.height, 'hand', global.locationHand),\r\n                field: this.createZone(isPlayer1, grid.x0, grid.y8, grid.x2, grid.y3, grid.field.width - 5 - grid.box.width, grid.field.height, 'field', global.locationField)\r\n            };\r\n\r\n        result.field.cardHeightPercent = global.grid.field.cardHeightPercent;\r\n\r\n        if (!isPlayer1)\r\n            result.hand.width = result.hand.width - grid.box.width - (3 * grid.border2);\r\n        return result;\r\n    }\r\n\r\n    static createZone(isPlayer1, x1, y1, x2, y2, width, height, zone, location,) {\r\n        const index = isPlayer1 ? '1' : '2';\r\n        return {\r\n            x: isPlayer1 ? x1 : x2,\r\n            y: isPlayer1 ? y1 : y2,\r\n            zone: zone + index,\r\n            width, height, location, isPlayer1, show: true\r\n        };\r\n    }\r\n\r\n    static createField(p1, p2) {\r\n        let result = [p1.deck, p1.trash, p1.shield, p1.resource, p1.hand, p1.field, p1.base]\r\n            .concat([p2.deck, p2.trash, p2.shield, p2.resource, p2.hand, p2.field, p2.base])\r\n            .concat([global.game.grid.centerMini]);\r\n        return result;\r\n    }\r\n\r\n    static refresh(cards, position, useZoneSize, wrapCut) {\r\n        let zoneHeight = position.height;\r\n        if (position.location == global.locationField)\r\n            zoneHeight *= 0.75;\r\n        const cardSize = useZoneSize ? position : this.getCardSize(position.width, zoneHeight, cards.length, position.cardHeightPercent);\r\n        cards.forEach((card, index) => {\r\n            const degree = card.active ? 0 : 90;\r\n            card.bgposition = '0 0';\r\n            card.to = this.getWrapPosition(position, cardSize, cards.length, index, degree, wrapCut);\r\n            card.location = position.location;\r\n\r\n            if (!global.cardHighlight.find(x => x.index === card.index))\r\n                card.zindex = card.pair ? 2 : 1;\r\n\r\n            if (position.location == global.locationField && card.pair)\r\n                card.pair.to = this.getPairPosition(card.to);\r\n        });\r\n    }\r\n\r\n    static getPairPosition(position) {\r\n        const result = global.clone(position);\r\n        result.y += result.height * 0.25;\r\n        result.rotation = 0;\r\n        return result;\r\n    }\r\n\r\n    static getCardSize(width, height, count, cardHeightPercent) {\r\n        let desiredWidth = width / (count + 0.25);\r\n        let desiredHeight = desiredWidth * 150 / 107;\r\n        if (cardHeightPercent)\r\n            desiredHeight *= cardHeightPercent;\r\n\r\n        if (desiredHeight > height) {\r\n            desiredHeight = height;\r\n            desiredWidth = desiredHeight * 107 / 150;\r\n            if (cardHeightPercent)\r\n                desiredWidth = desiredWidth * (1 + (1 - cardHeightPercent));\r\n        }\r\n\r\n        const x = (width - desiredWidth) / 2;\r\n        const y = (height - desiredHeight) / 2;\r\n        return { x, y, width: desiredWidth, height: desiredHeight };\r\n    }\r\n\r\n    static getPositionHandWithRotation(player, card, index, total) {\r\n        const cardWidth = global.grid.card.width * 0.75;\r\n        const cardWidthHalf = cardWidth / 2;\r\n        const sens = index < total / 2 ? -1 : 1;\r\n        let factorRotation = 0;\r\n        let mid = total / 2;\r\n        let x = 0;\r\n\r\n        if (this.isPair(total)) {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf + (cardWidthHalf * sens);\r\n            mid = index < total / 2 ? Math.floor(total / 2) - 1 : Math.ceil(total / 2);\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        } else {\r\n            const midX = global.grid.hand.width / 2 - cardWidthHalf;\r\n            x = midX + (Math.abs(mid - index) * cardWidth * sens);\r\n        }\r\n\r\n        const playerSens = player.isPlayer1 ? 1 : -1;\r\n        factorRotation = index - mid;\r\n        const rotation = playerSens * Math.round(20 * (factorRotation / mid));\r\n        const heightIncruise = playerSens * (cardWidth / 4) * Math.abs(mid - index);\r\n\r\n        card.ap = index;\r\n        card.hp = mid;\r\n\r\n        const result = {\r\n            x: player.positions.hand.x + x,\r\n            y: player.positions.hand.y + heightIncruise + 20,\r\n            width: global.grid.card.width,\r\n            height: global.grid.card.height,\r\n            rotation\r\n        };\r\n        return result;\r\n    }\r\n\r\n    static isPair(x) { return x % 2 == 0 }\r\n\r\n    static getCenter(totalWidth, elementWidth, total, index) {\r\n        const halfWidth = totalWidth / 2;\r\n        const half = total / 2;\r\n        const indexCenter = half - index;\r\n        return halfWidth - indexCenter * elementWidth;\r\n    }\r\n\r\n    static getWrapPosition(position, cardSize, total, index, degree, wrapCut) {\r\n        if (total < wrapCut || position.height < cardSize.height * 2)\r\n            return this.getCardPositionXY(position, cardSize, total, index, degree);\r\n\r\n        const mid = Math.floor(total / 2);\r\n        const indexLine = index < mid ? index : index - mid;\r\n        const totalLine = total - mid;\r\n        const cardSizeLine = this.getCardSize(position.width, position.height / 2, totalLine, position.cardHeightPercent);\r\n        const positionLine = index < mid ? position : { ...position, y: position.y + cardSizeLine.height };\r\n        return this.getCardPositionXY(positionLine, cardSizeLine, totalLine, indexLine, degree);\r\n    }\r\n\r\n    static getCardPositionXY(position, cardSize, total, index, degree) {\r\n        return {\r\n            x: position.x + this.getXCenter(position.width, cardSize.width, total, index),\r\n            y: position.y,\r\n            width: cardSize.width,\r\n            height: cardSize.height,\r\n            rotation: degree\r\n        };\r\n    }\r\n\r\n    static getXCenter(totalWidth, elementWidth, total, index) {\r\n        const sizeWidth = totalWidth / total;\r\n        return sizeWidth / 2 + sizeWidth * index - elementWidth / 2;\r\n    }\r\n\r\n    static getWrapMaxPositions(width, height, cards, ratio) {\r\n        const margin = 10;\r\n        let maxSize = { width: 0, height: 0 };\r\n        for (let i = 2; i < 10; i++) {\r\n            const size = this.getCardSizeWrap(width, height, cards, margin, ratio, i);\r\n            if (maxSize.width < size.width)\r\n                maxSize = size;\r\n        }\r\n\r\n        const marginHorizontal = (width - (3 * margin) - (maxSize.width * maxSize.wrapCut)) / (maxSize.wrapCut - 1);\r\n        //let originXCenter = originX + ((width - (maxSize.width * maxSize.wrapCut))/2);\r\n        let x = margin;\r\n        let y = margin;\r\n        let lineIndex = 0;\r\n        cards.forEach(card => {\r\n            card.position = { x, y, width: maxSize.width, height: maxSize.height };\r\n            lineIndex++;\r\n            if (lineIndex < maxSize.wrapCut)\r\n                x += marginHorizontal + maxSize.width;\r\n            else {\r\n                lineIndex = 0;\r\n                y += margin + maxSize.height;\r\n                x = margin;\r\n            }\r\n        })\r\n    }\r\n\r\n    static getCardSizeWrap(width, height, cards, margin, ratio, wrapCut) {\r\n        const lineRequired = Math.ceil(cards.length / wrapCut);\r\n        const widthMargin = width - ((wrapCut + 1) * margin);\r\n        const heightMargin = height - ((lineRequired + 1) * margin);\r\n        const ratioInverted = 1 + (1 - ratio);\r\n\r\n        let heightDesired = heightMargin / lineRequired;\r\n        let widthDesired = heightDesired * ratio;\r\n\r\n        if (widthDesired > widthMargin / wrapCut) {\r\n            widthDesired = widthMargin / wrapCut;\r\n            heightDesired = widthDesired * ratioInverted;\r\n        }\r\n\r\n        return { width: widthDesired, height: heightDesired, wrapCut };\r\n    }\r\n}\r\n\r\n\r\nexport default positioner;\r\n","import positioner from './positioner';\r\nimport global from './global';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height, decklistPlayer1, decklistPlayer2) {\r\n        global.game = { cards: [], tasks: [], popup: null };\r\n        global.cards = manager.getCards();\r\n\r\n        global.grid = positioner.createGrid(width, height);\r\n        global.game.grid = global.grid;\r\n\r\n        const deckLength = manager.getDeckLenth();\r\n        global.game.player1 = this.createPlayer(manager, global.cards, decklistPlayer1, deckLength, true);\r\n        global.game.player2 = this.createPlayer(manager, global.cards, decklistPlayer2, deckLength, false);\r\n\r\n        global.game.player1.positions = positioner.getPositions(global.grid, true);\r\n        global.game.player2.positions = positioner.getPositions(global.grid, false);\r\n        global.game.fields = positioner.createField(global.game.player1.positions, global.game.player2.positions);\r\n\r\n        const isPlayer1 = false; // Math.floor(Math.random() * 2) == 1;\r\n        global.isPlayer1 = isPlayer1;\r\n\r\n        for (let i = 0; i < manager.getHandStartLength(); i++) {\r\n            global.spawnOrMove(global.game.player1, null, global.locationDeck, global.locationHand);\r\n            global.spawnOrMove(global.game.player2, null, global.locationDeck, global.locationHand);\r\n        }\r\n\r\n        manager.refreshFieldAndHand(global.game.player1);\r\n        manager.refreshFieldAndHand(global.game.player2);\r\n\r\n        return global.game;\r\n    }\r\n\r\n    static createPlayer(manager, cards, decklist, length, isPlayer1) {\r\n        let result = [];\r\n\r\n        decklist.split(',').forEach(line => {\r\n            const info = line.split('x');\r\n            const quantity = parseInt(info[0]);\r\n            const id = info[1];\r\n\r\n            const card = cards.find(x => x.id == id);\r\n            if(!card)\r\n                throw new Error(\"This card doesn't exist : \" + id); \r\n            for (let i = 0; i < quantity; i++)\r\n                result.push(global.createCard(card.id));\r\n        })\r\n\r\n        result = result.splice(0, length);\r\n        result.forEach(x => {\r\n            x.index = global.getNextIndex();\r\n            x.isPlayer1 = isPlayer1;\r\n            x.location = global.locationDeck;\r\n        });\r\n\r\n        result = global.sortRandom(result);\r\n\r\n        return { deck: result, shield: [], hand: [], field: [], trash: [], isPlayer1, base: [], empty: [] };\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import gameTask from './gameTask';\r\nimport global from './global';\r\nimport setup from './setup';\r\n\r\nclass gameManager {\r\n\r\n    static createGame(manager, width, height, decklistPlayer1, decklistPlayer2) {\r\n        setup.createGame(manager, width, height, decklistPlayer1, decklistPlayer2);\r\n        global.game.manager = manager;\r\n        global.delay = manager.getAnimDuration();\r\n        manager.setup(global.game);\r\n        return this.nextTurn(global.game);\r\n    }\r\n\r\n    static nextTurn(game) {\r\n        game.manager.endTurn();\r\n\r\n        global.isPlayer1 = !global.isPlayer1;\r\n        game.isPlayer1 = global.isPlayer1;\r\n        const playerId = global.isPlayer1 ? '1' : '2';\r\n\r\n        gameTask.addTasks(game.tasks, [\r\n            { id: gameTask.taskTitleShow.name, value: 'New turn for player ' + playerId, isPlayer1: global.isPlayer1, delay: 1200 },\r\n            { id: gameTask.taskMoveAndShowCenter.name, isPlayer1: global.isPlayer1, from: global.locationDeck, to: global.locationHand }\r\n        ]);\r\n\r\n        game.manager.nextTurn();\r\n\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static continue(game) {\r\n        this.endAnimation(game);\r\n        return gameTask.handleTasks(game);\r\n    }\r\n\r\n    static endAnimation(game) {\r\n        game.cards.forEach(card => {\r\n            if (card.positionDrag) card.position = { ...card.position, x: card.positionDrag.x, y: card.positionDrag.y };\r\n            if (card.to) card.position = card.to;\r\n            delete (card.to);\r\n            delete (card.positionOld);\r\n            delete (card.positionDrag);\r\n        });\r\n        delete (game.wait);\r\n        delete (game.showTitle);\r\n        game.refresh = true;\r\n    }\r\n\r\n    static playCard(game, card1, card2, zone) {\r\n        global.needTaskEndRefresh=true;\r\n        gameTask.addTasks(game.tasks, [{id:gameTask.taskPlayCard.name,card1, card2, zone, regularPlay:true}]);\r\n        return game;\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.manager.selectChoiceCard(game, card);\r\n        return game;\r\n    }\r\n\r\n    static selectChoice(game, choice){\r\n        game.manager.selectChoice(game, choice);\r\n        return game;\r\n    }\r\n}\r\n\r\n\r\nexport default gameManager;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardPlay {\r\n    static playFromHand(player, card1, card2, zone, regularPlay) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        const wrongCost = regularPlay && player.resourcesAvailable < card1.cost;\r\n\r\n        if (!isSamePlayer || zone.location == global.locationHand || wrongCost)\r\n            return { sendBack: true };\r\n\r\n        return this.playCard(player, card1, card2, zone, regularPlay);\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, playCost) {\r\n        let isPilot = global.isCardPilot(card1);\r\n        let isCommand = global.isCardCommand(card1);\r\n\r\n        const pilotOrCommand = this.askPilotOrCommand(card1, card2);\r\n        isPilot = pilotOrCommand ? pilotOrCommand.isPilot : isPilot;\r\n        isCommand = pilotOrCommand ? pilotOrCommand.isCommand : isCommand;\r\n        if (pilotOrCommand && pilotOrCommand.stop)\r\n            return pilotOrCommand;\r\n\r\n        global.spawnIfNot(card1);\r\n\r\n        const effectResult = effects.handleEffects(player, card1, card2, effects.onplay);\r\n        if (effectResult.stop)\r\n            return effectResult;\r\n\r\n        if (global.isCardUnit(card1) && player.field.length < 6) {\r\n            card1.canAttack = false;\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            global.move(player, card1, card1.location, player.positions.field.location);\r\n            return;\r\n        }\r\n\r\n        if (global.isCardBase(card1)) {\r\n            if (player.base.length > 0)\r\n                gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskMove.name, card1: player.base[0], to: global.locationTrash, isPlayer1: card1.isPlayer1 }]);\r\n\r\n            global.move(player, card1, card1.location, global.locationBase);\r\n            card1.selectable = false;\r\n            return;\r\n        }\r\n\r\n        if (isPilot && card2 && global.isCardUnit(card2)) {\r\n            if (card1.pair || card2.pair || card1.isPaired || card2.isPaired) {\r\n                this.sendCardBackToSquareOne(card1);\r\n                return;\r\n            }\r\n\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskPairCard.name, card1, card2 }]);\r\n            return;\r\n        }\r\n\r\n        if (isCommand) {\r\n            if (playCost)\r\n                this.playCardCost(player, card1);\r\n            gameTask.addTasks(global.game.tasks, [{ id: gameTask.taskApplyEffect.name, card1, card2, trigger: effects.command }]);\r\n            global.move(player, card1, card1.location, global.locationTrash);\r\n            return;\r\n        }\r\n\r\n        this.sendCardBackToSquareOne(card1);\r\n    }\r\n\r\n    static sendCardBackToSquareOne(card) {\r\n        const rotation = card.active ? 0 : 90;\r\n        card.to = { ...global.clone(card.position), rotation };\r\n        card.position = { ...card.position, ...card.positionDrag };\r\n        global.game.refresh = true;\r\n        return global.game;\r\n    }\r\n\r\n    static playCardCost(player, card) {\r\n        if (player.resourcesEx > 0)\r\n            player.resourcesEx = Math.max(0, player.resourcesEx - card.cost);\r\n        player.resourcesAvailable -= card.cost;\r\n    }\r\n\r\n    static askPilotOrCommand(card1, card2) {\r\n        if (!card2 || !global.isCardPilot(card1) || !global.isCardCommand(card1))\r\n            return;\r\n\r\n        if (!global.game.choice) {\r\n            global.game.tasks = [{\r\n                id: gameTask.taskPopup.name,\r\n                text: 'Do you want to play as pilot or command ?',\r\n                choices: [{ text: 'Pilot' }, { text: 'Command' }]\r\n            }].concat(global.game.tasks);\r\n            return { stop: true }\r\n        } else {\r\n            const isPilot = global.game.choice.text === 'Pilot';\r\n            const isCommand = global.game.choice.text === 'Command';\r\n            global.deletePopup();\r\n            return { isPilot, isCommand };\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default cardPlay;\r\n","import global from '../global';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass cardAttack {\r\n\r\n    static prepareAttack(player, card1, card2, zone, breach) {\r\n        const isSamePlayer = zone.isPlayer1 == player.isPlayer1;\r\n        if (isSamePlayer || !card1.canAttack) {\r\n            return { sendBack: true };\r\n        }\r\n\r\n        const opponent = global.getPlayerTurnOpponent();\r\n        const blockers = opponent.field.filter(x => x.block && x.active);\r\n        let selectedAsBlocker = false;\r\n        if (!global.game.blocker && blockers.length > 0) {\r\n            if (!global.game.cardChoice && !global.game.choice) {\r\n                global.game.tasks = [{\r\n                    id: gameTask.taskPopup.name,\r\n                    text: 'Select a blocker ?',\r\n                    cards: blockers,\r\n                    choices: [{ text: 'none' }]\r\n                }\r\n                ].concat(global.game.tasks);\r\n                return { stop: true };\r\n            }\r\n\r\n            card2 = global.game.cardChoice;\r\n            global.game.blocker = card2;\r\n            selectedAsBlocker = true;\r\n        }\r\n\r\n        /*const actionCardResult = cardAction.askForActionCards(player, opponent);\r\n        if (actionCardResult && actionCardResult.stop)\r\n            return actionCardResult;*/\r\n\r\n        delete (global.game.blocker);\r\n        global.deletePopup();\r\n\r\n        if (card2 && card2.isPlayer1 === opponent.isPlayer1) {\r\n            const isValidTarget = selectedAsBlocker || !card2.active || card1.attackActiveEnnemy > card2.level;\r\n            if (!isValidTarget)\r\n                return { sendBack: true };\r\n\r\n            this.startAttackAnimation(player, opponent, card1, card2, zone, breach);\r\n            return;\r\n        }\r\n\r\n        return this.attack(player, opponent, card1, zone);\r\n    }\r\n\r\n    static attack(player, opponent, card1, zone) {\r\n\r\n        if (opponent.shield < 1 && opponent.base.length < 1)\r\n            return { end: true, isPlayer1: opponent.isPlayer1 };\r\n\r\n        if (opponent.base.length > 0) {\r\n            const target = opponent.base[0];\r\n            this.startAttackAnimation(player, opponent, card1, target, zone);\r\n            return;\r\n        }\r\n\r\n        global.setActive(card1, false);\r\n        let card = opponent.shield.splice(0, 1)[0];\r\n        gameTask.addTasks(global.game.tasks, [\r\n            { id: gameTask.taskApplyEffect.name, card1: card, trigger: effects.burst },\r\n            { id: gameTask.taskMove.name, card1: card, to: global.locationTrash, isPlayer1: card.isPlayer1 }\r\n        ]);\r\n        return { sendBack: true };\r\n    }\r\n\r\n    static startAttackAnimation(player, opponent, attacker, target, zone, breach) {\r\n        const delay = this.delay;\r\n        gameTask.addTasks(global.game.tasks,\r\n            [{ id: gameTask.taskCardsToMiniCenter.name, delay: global.delay, card1: attacker, card2: target },\r\n            { id: gameTask.taskAttack.name, player, opponent, attacker, target, delay, zone, breach }\r\n            ]);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        const effectResult = effects.apply(effects.battle, player, attacker);\r\n        if (effectResult.stop) {\r\n            return effectResult;\r\n        }\r\n\r\n        let damage = breach ? breach : attacker.ap;\r\n        if (target.immuneAp && damage < target.immuneAp)\r\n            damage = 0;\r\n        target.hp -= damage;\r\n\r\n        damage = target.ap;\r\n        if (attacker.immuneAp && attacker < target.immuneAp)\r\n            damage = 0;\r\n        attacker.hp -= damage;\r\n\r\n        const activeBreach = !breach && global.isCardUnit(target) && attacker.breach && target.hp < 1;\r\n        global.setActive(attacker, false);\r\n        let tasks = [];\r\n\r\n        if (attacker.hp < 1)\r\n            tasks = tasks.concat(this.destroyUnit(attacker, target.hp < 1 || activeBreach));\r\n\r\n        if (target.hp < 1)\r\n            tasks = tasks.concat(this.destroyUnit(target, false));\r\n\r\n        global.setActive(attacker, false);\r\n\r\n        if (activeBreach)\r\n            tasks.push({ id: gameTask.taskAttack.name, player, opponent, attacker, zone, breach: attacker.breach });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n    }\r\n\r\n    static destroyUnit(card1, avoidDelay) {\r\n        card1.dead = true;\r\n        const delayForTarget = avoidDelay ? null : global.delay;\r\n        return [\r\n            { id: gameTask.taskApplyEffect.name, card1, trigger: effects.ondestroyed },\r\n            { id: gameTask.taskMove.name, delay: delayForTarget, card1, to: global.locationTrash, isPlayer1: card1.isPlayer1 }\r\n        ];\r\n    }\r\n}\r\n\r\n\r\nexport default cardAttack;\r\n","import global from '../global';\r\nimport cardPlay from './cardPlay';\r\nimport cardAttack from './cardAttack';\r\n\r\nclass cardHandler {\r\n    static nextTurn(player) {\r\n        global.game.cards.forEach(card => card.selectable = false);\r\n\r\n        player.field.forEach(x => {\r\n            x.active = true;\r\n            x.canAttack = true;\r\n        });\r\n    }\r\n\r\n    static setSelectable(player) {\r\n        player.hand.forEach(card => {\r\n            const resourcesMax = Math.max(player.resourcesMax, player.resourcesAvailable);\r\n            const isCostAvailable = card.level <= resourcesMax && card.cost <= player.resourcesAvailable;\r\n            const isTurnPlayer = global.isPlayer1 === card.isPlayer1;\r\n\r\n            card.selectable = isCostAvailable && isTurnPlayer;\r\n            if (global.isCardUnit(card) && player.field.length > 5)\r\n                card.selectable = false;\r\n        });\r\n\r\n        player.field.forEach(card => {\r\n            card.selectable = card.canAttack;\r\n        });\r\n    }\r\n\r\n    static play(player, card1, card2, zone, regularPlay) {\r\n        const noDropZone = !card2 && !zone;\r\n        let result = {};\r\n        if (noDropZone)\r\n            result.sendBack = true;\r\n\r\n        else if (card1.location === global.locationHand)\r\n            result = cardPlay.playFromHand(player, card1, card2, zone, regularPlay);\r\n        else if (card1.location === global.locationField)\r\n            result = this.prepareAttack(player, card1, card2, zone);\r\n        else\r\n            result = cardPlay.playCard(player, card1, card2, zone, false);   \r\n\r\n        if (result && result.sendBack)\r\n            cardPlay.sendCardBackToSquareOne(card1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static prepareAttack(player, card1, card2, zone, breach) {\r\n        return cardAttack.prepareAttack(player, card1, card2, zone, breach);\r\n    }\r\n\r\n    static attack(player, opponent, card1, zone) {\r\n        return cardAttack.attack(player, opponent, card1, zone);\r\n    }\r\n\r\n    static attackCard(player, opponent, attacker, target, zone, breach) {\r\n        return cardAttack.attackCard(player, opponent, attacker, target, zone, breach);\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        game.cardChoice = card;\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        game.choice = choice;\r\n    }\r\n}\r\n\r\n\r\nexport default cardHandler;\r\n","import cards from '../../data/gundamCards.json';\r\nimport global from '../global';\r\nimport positioner from '../positioner';\r\nimport cardHandler from './cardHandler';\r\nimport gameTask from '../gameTask';\r\nimport effects from './effects';\r\n\r\nclass manager {\r\n    static getCards() { return cards.cards; }\r\n    static getDeckLenth() { return 50; }\r\n    static getAnimDuration() { return 500; }\r\n    static getHandStartLength() { return 5; }\r\n\r\n    static setup(game) {\r\n        game.player1 = {\r\n            ...game.player1,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n        game.player2 = {\r\n            ...game.player2,\r\n            base: [], shield: [], pair: [],\r\n            resAString: \"0\", resourcesMax: 0, resourcesAvailable: 0, resourcesEx: 0,\r\n        };\r\n\r\n        /*\r\n        const attacker1 = global.spawnOrMove(game.player1, global.createCard(\"T-001\"), global.locationDeck, global.locationField);\r\n        attacker1.active=false;\r\n        const attacker2 = global.spawnOrMove(game.player2, global.createCard(\"T-006\"), global.locationDeck, global.locationField);\r\n        attacker2.active=false;*/\r\n\r\n        this.createUniqueRare(game.player1);\r\n        this.createUniqueRare(game.player2);\r\n\r\n        this.createDefaultBase(game.player1);\r\n        this.createDefaultBase(game.player2);\r\n\r\n        //const shieldId = 'ST02-015';\r\n        for (let i = 0; i < 6; i++) {\r\n            global.move(game.player1, null, global.locationDeck, global.locationShield);\r\n            global.move(game.player2, null, global.locationDeck, global.locationShield);\r\n        }\r\n        // game.player1.deck = [global.createCard(shieldId)].concat(game.player1.deck);\r\n\r\n        // game.player1.shield = [global.createCard(\"ST02-013\")].concat(game.player1.shield);\r\n        // game.player2.shield = [global.createCard(\"ST02-013\")].concat(game.player2.shield);\r\n\r\n        const playerOpponent = global.isPlayer1 ? game.player1 : game.player2;\r\n        playerOpponent.resourcesEx += 1;\r\n\r\n        /*gameTask.addTasks(game.tasks, [{\r\n            id: gameTask.taskPopup.name,\r\n            text: 'Muligan ?',\r\n            choices: [{ text: 'yes', id: 'muligan' }, { text: 'no', id: 'muliganNo' }]\r\n        }]);*/\r\n    }\r\n\r\n    static createUniqueRare(player) {\r\n        const rareKeyWord = \"_p1\";\r\n        var rareCards = cards.files.split(',').filter(x => x.includes(rareKeyWord)).map(x => x = x.replace(rareKeyWord, \"\"));\r\n        rareCards.forEach(rareCard => {\r\n            const firstCard = player.deck.find(x => x.id === rareCard);\r\n            if (firstCard)\r\n                firstCard.id += rareKeyWord;\r\n        });\r\n    }\r\n\r\n    static createDefaultBase(player) {\r\n        const card = global.createCard(\"EXB-001\");\r\n        global.spawnOrMove(player, card, global.locationBase, global.locationBase);\r\n        card.isTemporaryCard = true;\r\n        return card;\r\n    }\r\n\r\n    static nextTurn() {\r\n        const player = global.getPlayerTurn();\r\n        effects.removeOneTurnEffect(global.game.cards);\r\n        if (player.resourcesMax < 10)\r\n            player.resourcesMax += 1;\r\n\r\n        player.resourcesAvailable = player.resourcesMax + player.resourcesEx;\r\n        cardHandler.nextTurn(player);\r\n\r\n        const baseText = player.base.length > 0 ? player.base[0].hp + 'hp ' : '-';\r\n        global.log(`-- Turn player ${player.number}, ${player.resourcesAvailable}re, ${player.shield.length}sh, ${baseText}ba`);\r\n    }\r\n\r\n    static endTurn() {\r\n        const player = global.getPlayerTurn();\r\n        const cards = player.field.filter(x => x.effects.find(y => y.trigger === effects.end));\r\n        const tasks = [];\r\n        cards.forEach(card => {\r\n            tasks.push({\r\n                id: gameTask.taskApplyEffect.name,\r\n                card1: card,\r\n                trigger: effects.end\r\n            });\r\n        });\r\n\r\n        tasks.push({ id: gameTask.taskRefreshField.name, isPlayer1: player.isPlayer1 });\r\n\r\n        gameTask.addTasks(global.game.tasks, tasks);\r\n\r\n    }\r\n\r\n    static refreshFieldAndHand(player) {\r\n        positioner.refresh(player.hand, player.positions.hand, false, 7);\r\n        positioner.refresh(player.field, player.positions.field, false, 3);\r\n        positioner.refresh(player.base, player.positions.base, true);\r\n        const cardsToRemoveIndex = player.trash.filter(x => !x.to).map(x => x.index);\r\n        global.game.cards = global.game.cards.filter(x => !cardsToRemoveIndex.includes(x.index));\r\n\r\n        cardHandler.setSelectable(player);\r\n\r\n        player.positions.deck.text = player.deck.length;\r\n        player.positions.shield.text = player.shield.length;\r\n        player.positions.trash.text = player.trash.length;\r\n        player.positions.resource.text = player.resourcesAvailable + '/' + player.resourcesMax;\r\n    }\r\n\r\n    static playCard(player, card1, card2, zone, regularPlay) {\r\n        const result = cardHandler.play(player, card1, card2, zone, regularPlay);\r\n\r\n        if (result && result.end)\r\n            global.end(result.isPlayer1);\r\n\r\n        return result;\r\n    }\r\n\r\n    static attack(player, opponent, card1, card2, zone, breach) {\r\n        if (card2)\r\n            cardHandler.attackCard(player, opponent, card1, card2, zone, breach);\r\n        else\r\n            cardHandler.attack(player, opponent, card1, zone)\r\n    }\r\n\r\n    static selectChoiceCard(game, card) {\r\n        return cardHandler.selectChoiceCard(game, card);\r\n    }\r\n\r\n    static selectChoice(game, choice) {\r\n        if (choice.id && choice.id.startsWith('muligan')) {\r\n            global.deletePopup();\r\n\r\n            if (choice.id == 'muligan')\r\n                this.doMuligan(game, game.player1);\r\n        }\r\n\r\n        cardHandler.selectChoice(game, choice);\r\n    }\r\n\r\n    static doMuligan(game, player) {\r\n        player.deck = global.sortRandom(player.deck.concat(player.hand));\r\n        const removeIds = player.hand.map(x => x.index);\r\n        game.cards = game.cards.filter(x => !removeIds.includes(x.index));\r\n        player.hand = [];\r\n\r\n        for (let i = 0; i < this.getHandStartLength(); i++)\r\n            global.spawnOrMove(player, null, global.locationDeck, global.locationHand);\r\n\r\n        this.refreshFieldAndHand(player);\r\n    }\r\n\r\n    static pair(player, card1, card2) {\r\n        return global.pair(player, card1, card2);\r\n    }\r\n\r\n    static applyEffect(player, card1, card2, trigger) {\r\n        return effects.handleEffects(player, card1, card2, trigger);\r\n    }\r\n}\r\n\r\n\r\nexport default manager;\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute bgYellow cirlce15px\",style:({\n  left: _vm.card.position.x + 'px',\n  top: _vm.card.position.y + 'px',\n  width: _vm.card.position.width + 'px',\n  height: _vm.card.position.height + 'px',\n  transform: 'rotate(' + _vm.card.position.rotation + 'deg)',\n  'z-index': _vm.card.zindex,\n  cursor: _vm.shine ? 'pointer' : ''\n}),on:{\"click\":function($event){return _vm.$emit('click', _vm.card)}}},[(!_vm.card)?_c('div',[_vm._v(\"No card\")]):_c('img',{class:{ w100p: true, h100p: true, shine: _vm.shine, absolute:true },style:({ 'object-fit': 'cover', 'object-position': _vm.card.bgposition, 'pointer-events': 'none' }),attrs:{\"draggable\":\"false\",\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"mouseover\":function($event){return _vm.$emit('mouseover', _vm.card)},\"contextmenu\":function($event){$event.preventDefault();return _vm.$emit('clickright', _vm.card)}}}),(!_vm.hidestat && (_vm.card.ap || _vm.card.hp))?_c('div',{staticClass:\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\",staticStyle:{\"width\":\"40px\",\"height\":\"25px\",\"top\":\"0px\",\"background-color\":\"#FFFFFFB0\"}},[_vm._v(\" \"+_vm._s(_vm.card.ap)+\" - \"+_vm._s(_vm.card.hp)+\" \")]):_vm._e(),(_vm.card && _vm.card.dead)?_c('div',{staticClass:\"w100p h100p absolute shine cirlce15px\",staticStyle:{\"background-color\":\"#FF000050\"}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"absolute bgYellow cirlce15px\" @click=\"$emit('click', card)\" :style=\"{\r\n    left: card.position.x + 'px',\r\n    top: card.position.y + 'px',\r\n    width: card.position.width + 'px',\r\n    height: card.position.height + 'px',\r\n    transform: 'rotate(' + card.position.rotation + 'deg)',\r\n    'z-index': card.zindex,\r\n    cursor: shine ? 'pointer' : ''\r\n  }\">\r\n    <div v-if=\"!card\">No card</div>\r\n    <img v-else :class=\"{ w100p: true, h100p: true, shine: shine, absolute:true }\" draggable=\"false\"\r\n      :style=\"{ 'object-fit': 'cover', 'object-position': card.bgposition, 'pointer-events': 'none' }\"\r\n      :src=\"require('@/assets/' + folder + card.id + '.webp')\" @mouseover=\"$emit('mouseover', card)\"\r\n      @contextmenu.prevent=\"$emit('clickright', card)\" />\r\n    <div v-if=\"!hidestat && (card.ap || card.hp)\" class=\"absolute cirlce10px textVerticalCenter centerDiv colorBlack fontSize1em\"\r\n      style=\"width:40px; height:25px; top:0px; background-color: #FFFFFFB0;\">\r\n      {{ card.ap }} - {{ card.hp }}\r\n    </div>\r\n    <div class=\"w100p h100p absolute shine cirlce15px\" v-if=\"card && card.dead\" style=\"background-color: #FF000050;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'game-card',\r\n  props: ['card', 'folder', 'shine', 'hidestat']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./card.vue?vue&type=template&id=9ee1a63e&scoped=true&\"\nimport script from \"./card.vue?vue&type=script&lang=js&\"\nexport * from \"./card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9ee1a63e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"relative cursorHand parentHover\",staticStyle:{\"width\":\"400px\",\"height\":\"340px\"},on:{\"click\":function($event){return _vm.$emit('click', _vm.deck)}}},[_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(-15deg)\",\"left\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardLeft\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card2 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute card\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(15deg)\",\"right\":\"30px\",\"height\":\"82%\",\"top\":\"30px\"},attrs:{\"id\":\"cardRight\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card3 + '.webp')}})]),_c('div',{staticClass:\"bgYellow absolute\",staticStyle:{\"width\":\"50%\",\"transform\":\"rotate(0deg)\",\"left\":\"25%\",\"height\":\"82%\",\"top\":\"30px\"}},[_c('img',{staticClass:\"w100p shineParentHover\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.deck.card1 + '.webp')}})]),_c('div',{staticClass:\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter cirlce15px\",staticStyle:{\"width\":\"40%\",\"top\":\"65%\",\"left\":\"30%\"},attrs:{\"id\":\"title\"}},[_vm._v(\" \"+_vm._s(_vm.deck.name)+\" \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div @click=\"$emit('click', deck)\" class=\"relative cursorHand parentHover\"\r\n        style=\"width:400px; height:340px;\">\r\n        <div id=\"cardLeft\" style=\"width:50%; transform: rotate(-15deg); left:30px; height: 82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card2 + '.webp')\">\r\n        </div>\r\n        <div id=\"cardRight\" style=\"width:50%; transform: rotate(15deg); right:30px; height:82%; top:30px\" class=\"bgYellow absolute card\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card3 + '.webp')\">\r\n        </div>\r\n        <div style=\"width:50%; transform: rotate(0deg); left:25%; height: 82%; top:30px\" class=\"bgYellow absolute\">\r\n            <img class=\"w100p shineParentHover\" style=\"object-fit: cover;\"\r\n                :src=\"require('@/assets/' + folder + deck.card1 + '.webp')\">\r\n        </div>\r\n        <div id=\"title\" class=\"bgWhite bgYellowParentHover absolute text-center textVerticalCenter cirlce15px\"\r\n            style=\"width:40%; top:65%; left:30%;\">\r\n            {{deck.name}}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card{\r\n    transition: left .5s ease, right .5s ease, transform .5s ease;\r\n}\r\n#title {transition: background-color .5s ease;}\r\n\r\n.parentHover:hover #cardLeft {\r\n    transform: rotate(-22deg) !important;\r\n    left:0px !important;\r\n}\r\n.parentHover:hover #cardRight {\r\n    transform: rotate(22deg) !important;\r\n    right:0px !important;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    name: 'game-deck',\r\n    props: ['deck', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deck.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deck.vue?vue&type=template&id=7e7f9f8f&scoped=true&\"\nimport script from \"./deck.vue?vue&type=script&lang=js&\"\nexport * from \"./deck.vue?vue&type=script&lang=js&\"\nimport style0 from \"./deck.vue?vue&type=style&index=0&id=7e7f9f8f&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7e7f9f8f\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w100p bg2 h100p\"},[_c('div',{staticClass:\"relative w100p\",staticStyle:{\"margin-left\":\"300px\"}},_vm._l((_vm.cardData),function(card,index){return _c('decklist-card',{key:'Decklist card ' + index,attrs:{\"card\":card,\"folder\":_vm.folder},on:{\"cardclick\":function($event){return _vm.$emit('cardclick', card)},\"clickdown\":function($event){return _vm.incruise(card,-1)},\"clickup\":function($event){return _vm.incruise(card,1)}}})}),1),_c('div',{staticClass:\"m5px h100p bgWhite fontSize125em\",staticStyle:{\"width\":\"300px\"}},[_c('v-btn',{staticClass:\"w100p bg\",staticStyle:{\"height\":\"45px\"},on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(\"Back\")]),_c('div',{staticClass:\"w100p text-center\"},[_vm._v(_vm._s(_vm.resume))]),_c('deck',{staticStyle:{\"width\":\"280px\",\"height\":\"238px\"},attrs:{\"deck\":_vm.decklist,\"folder\":_vm.folder}}),_c('v-btn',{staticClass:\"w100p shine bg2\",staticStyle:{\"height\":\"45px\"},on:{\"click\":_vm.validate}},[_vm._v(\"Valider\")]),_c('br'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.list),expression:\"list\"}],staticClass:\"w100p h100p\",domProps:{\"value\":(_vm.list)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.list=$event.target.value},_vm.setList]}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"absolute\",style:({ width: _vm.card.position.width + 'px', top: _vm.card.position.y + 'px', left: _vm.card.position.x + 'px' })},[_c('img',{staticClass:\"w100p\",staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":require('@/assets/' + _vm.folder + _vm.card.id + '.webp')},on:{\"click\":function($event){return _vm.$emit('cardclick', _vm.card)}}}),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgRedHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickdown', _vm.card)}}},[_vm._v(\"-\")]):_vm._e(),(_vm.card.buttons)?_c('v-btn',{staticClass:\"bgGreenHover absolute\",staticStyle:{\"bottom\":\"50px\",\"width\":\"50%\"},on:{\"click\":function($event){return _vm.$emit('clickup', _vm.card)}}},[_vm._v(\"+\")]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"absolute\"\r\n        :style=\"{ width: card.position.width + 'px', top: card.position.y + 'px', left: card.position.x + 'px' }\">\r\n        <img class=\"w100p\" style=\"object-fit: cover;\" :src=\"require('@/assets/' + folder + card.id + '.webp')\"\r\n            @click=\"$emit('cardclick', card)\">\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickdown', card)\" class=\"bgRedHover absolute\" style=\"bottom:50px; width:50%\">-</v-btn>\r\n        <v-btn v-if=\"card.buttons\" @click=\"$emit('clickup', card)\" class=\"bgGreenHover absolute\" style=\"bottom:50px; width:50%\">+</v-btn>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    name: 'decklist-card',\r\n    components: {},\r\n    props: ['card', 'folder']\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckListCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckListCard.vue?vue&type=template&id=2de2b056&\"\nimport script from \"./deckListCard.vue?vue&type=script&lang=js&\"\nexport * from \"./deckListCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"w100p bg2 h100p\">\r\n        <div class=\"relative w100p\" style=\"margin-left:300px\">\r\n            <decklist-card v-for=\"(card, index) in cardData\" :key=\"'Decklist card ' + index\" :card=\"card\"\r\n                :folder=\"folder\" @cardclick=\"$emit('cardclick', card)\" @clickdown=\"incruise(card,-1)\" @clickup=\"incruise(card,1)\">\r\n            </decklist-card>\r\n        </div>\r\n        <div style=\"width: 300px;\" class=\"m5px h100p bgWhite fontSize125em\">\r\n            <v-btn class=\"w100p bg\" style=\"height:45px\" @click=\"$emit('cancel')\">Back</v-btn>\r\n            <div class=\"w100p text-center\">{{ resume }}</div>\r\n            <deck :deck=\"decklist\" :folder=\"folder\" style=\"width:280px; height:238px\"> </deck>\r\n            <v-btn class=\"w100p shine bg2\" style=\"height:45px\" @click=\"validate\">Valider</v-btn>\r\n            <br>\r\n            <textarea class=\"w100p h100p\" v-model=\"list\" @input=\"setList\">\r\n        </textarea>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport positioner from './positioner';\r\nimport decklistCard from './deckListCard.vue';\r\nimport deck from './deck';\r\n\r\nexport default {\r\n    name: 'deck-list',\r\n    components: { deck, decklistCard },\r\n    props: ['decklist', 'folder', 'cardlist'],\r\n    data: () => ({\r\n        list: '',\r\n        resume: '',\r\n        listCorrect: '',\r\n        cardData: null,\r\n        stopRefresh: false\r\n    }),\r\n    mounted() {\r\n        this.list = this.decklist.list.split(',').join('\\n');\r\n        this.refresh();\r\n    },\r\n    methods: {\r\n        validate() {\r\n            this.$emit('validate', { list: this.listCorrect });\r\n        },\r\n        refresh() {\r\n            const result = [];\r\n            const resultText = [];\r\n            const cards = this.list.split('\\n');\r\n            const listCorrect = [];\r\n            let index=0;\r\n\r\n            cards.forEach(line => {\r\n                index+= line.length;\r\n                let info = line.split('x');\r\n                let quantity = parseInt(info[0]);\r\n                if (info.length < 2 || isNaN(quantity) || quantity < 1) {\r\n                    resultText.push(line);\r\n                }\r\n                else {\r\n                    const id = this.getId(info[1]);\r\n                    const card = this.cardlist?.find(x => x.id == id);\r\n\r\n                    if (card) {\r\n                        result.push({ id, quantity, buttons:quantity===1 });\r\n                        listCorrect.push(`${quantity}x${id}`);\r\n                        resultText.push(`${quantity}x ${id} ${card.name}`);\r\n                        if(!line.includes(' ')){\r\n                            this.list = this.insertStringAt(this.list, index, ' ' + card.name + '\\n');\r\n                            index+= 2 + card.name.length;\r\n                        }\r\n                    } \r\n                }\r\n\r\n            });\r\n\r\n            const ratio = 107 / 200;\r\n            positioner.getWrapMaxPositions(this.$vuetify.breakpoint.width - 310, this.$vuetify.breakpoint.height - 10, result, ratio);\r\n            result.forEach(card => {\r\n                for (let i = 1; i < card.quantity; i++) {\r\n                    result.push({ \r\n                        id: card.id, \r\n                        buttons: i === card.quantity-1,\r\n                        position: { ...card.position, y: card.position.y + (i * 0.06 * card.position.height) } });\r\n                }\r\n            });\r\n\r\n            this.resume = `${result.length} cards`;\r\n            this.listCorrect = listCorrect.join(',');\r\n            this.cardData = result;\r\n        },\r\n        getId(str) {\r\n            return str.trim().split(' ')[0];\r\n        },\r\n        setList() {\r\n            if (this.stopRefresh)\r\n                return;\r\n            this.stopRefresh = true;\r\n            this.refresh();\r\n            this.stopRefresh = false;\r\n        },\r\n        incruise(card, pitch){\r\n            const index = this.list.indexOf(card.id);\r\n            const quantity = parseInt(this.list.charAt(index-2))+pitch;\r\n            this.list = this.insertStringAt(this.list, index-2, quantity);\r\n            this.setList();\r\n        },\r\n        insertStringAt(content, index, str){\r\n            return content.substring(0, index) + str + content.substring(index+1);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./deckList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./deckList.vue?vue&type=template&id=7a404a48&\"\nimport script from \"./deckList.vue?vue&type=script&lang=js&\"\nexport * from \"./deckList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"relative w100p h100p mask\" :key=\"refreshG\">\r\n\r\n        <!-- DeckList Show-->\r\n        <deck-list v-if=\"decklistShow\" :decklist=\"decklistShow\" :cardlist=\"cardList\" folder=\"Gundam/cards/\"\r\n            style=\"top:50px\" @cardclick=\"showCardDeckList\" @cancel=\"showDeckList(null)\" @validate=\"selectDeckList\">\r\n        </deck-list>\r\n\r\n        <!-- DeckLists -->\r\n        <div v-if=\"!game\">\r\n            <h2>Select deck for the {{ decklistPlayer1 ? 'opponent' : 'player' }}</h2>\r\n            <div class=\"flex flex-wrap flex-space-around fontSize32\">\r\n                <deck v-for=\"(deck, index) in deckList\" :key=\"'Deck' + index\" :deck=\"deck\" folder=\"Gundam/cards/\"\r\n                    @click=\"showDeckList(deck)\">\r\n                </deck>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Grid -->\r\n        <div class=\"hide\">\r\n            <div v-for=\"i in 16\" :key=\"'x' + i\"\r\n                :style=\"{ height: game?.grid.box.height + 'px', top: getGridY(i - 1) + 'px' }\"\r\n                class=\"bgYellow absolute w100p\"></div>\r\n            <div v-for=\"i in 16\" :key=\"'y' + i\"\r\n                :style=\"{ width: game?.grid.box.width + 'px', left: getGridX(i - 1) + 'px' }\"\r\n                class=\"bgRed absolute h100p\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- field -->\r\n        <div v-for=\"box in game?.fields.filter(x => x.show)\" :key=\"box.zone\" :id=\"box.zone\" :class=\"{\r\n            absolute: true, bg3: box.zone.endsWith('2'), bg: box.zone.endsWith('1'), fontSize1em: true, textVerticalCenter: true, 'text-center': true,\r\n            bgYellow2: box.isPlayer1 == game.isPlayer1 && box.location === 'locationHand'\r\n        }\" :style=\"getFieldStyle(box.x, box.y, box.width, box.height)\" @dragover=\"onDragOver\"\r\n            @drop=\"onDrop($event, box)\">\r\n            {{ box.text }}\r\n        </div>\r\n\r\n        <!-- field centerMini -->\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card1.x, game.grid.centerMini.card1.y,\r\n            game.grid.centerMini.card1.width, game.grid.centerMini.card1.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgRed absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.card2.x, game.grid.centerMini.card2.y,\r\n            game.grid.centerMini.card2.width, game.grid.centerMini.card2.height)\">\r\n        </div>\r\n        <div v-if=\"game\" class=\"bgYellow absolute hide\" :style=\"getFieldStyle(game.grid.centerMini.text.x, game.grid.centerMini.text.y,\r\n            game.grid.centerMini.text.width, game.grid.centerMini.text.height)\">\r\n        </div>\r\n\r\n        <!-- textEffect -->\r\n        <div v-if=\"game && game.textEffect\" id=\"textEffect\"\r\n            class=\"bgWhite absolute mask text-center textVerticalCenter fontSize150em\" :style=\"{\r\n                ...getFieldStyle(game.textEffect?.position.x, game.textEffect?.position.y,\r\n                    game.textEffect?.position.width, game.textEffect?.position.height), 'z-index': 11\r\n            }\">\r\n            <div v-html=\"game.textEffect.text\"></div>\r\n        </div>\r\n\r\n        <!-- Show card -->\r\n        <div class=\"flex absolute\" v-if=\"aside\">\r\n            <div class=\"bg\" style=\"width:300px; height:100%;\">\r\n                <div class=\"relative\">\r\n                    <gameCard :card=\"cardCenter\" folder=\"Gundam/cards/\"></gameCard>\r\n                </div>\r\n                <div style=\"height:420px\"></div>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"start\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    Start\r\n                </v-btn>\r\n                <v-btn target=\"_blank\" text class=\"bg m5px\" @click=\"nextTurn\">\r\n                    <v-icon>mdi-arrow-right-thin</v-icon>\r\n                    End Turn\r\n                </v-btn>\r\n                <div class=\"mp5px\" v-html=\"game?.logs\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- cards -->\r\n        <div v-for=\"card in cards\" :key=\"'B' + card.index\" @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\">\r\n            <gameCard :id=\"'C' + card.index\" :card=\"card\" folder=\"Gundam/cards/\" :shine=\"card.selectable && !freeze\"\r\n                :hidestat=\"card.hidestat\" @mouseover=\"showCardMouseOver(card)\" @click=\"showCard(card)\"\r\n                @dragover=\"onDragOver\" @drop=\"onDrop($event, card)\" draggable=\"true\">\r\n            </gameCard>\r\n        </div>\r\n\r\n        <!-- End turn button -->\r\n        <div v-if=\"game\">\r\n            <div class=\"bgYellow absolute cirlce10px\"\r\n                :style=\"{ left: game.grid.x0 + 'px', top: '30px', height: game.grid.hand.height - 25 + 'px', width: game.fields[0].width + 'px' }\">\r\n\r\n                <v-btn target=\"_blank\" text\r\n                    :class=\"{ bg: true, w100p: true, h100p: true, shine: !freeze, fontSize1em: true }\" @click=\"nextTurn\"\r\n                    style=\"min-width:0px;\">\r\n                    End <br>Turn\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Popup -->\r\n        <div v-if=\"game?.popup\" class=\"textVerticalCenter\"\r\n            style=\"z-index:12; width:100%; height: 64px; position:fixed; top:0px; left:0px;\">\r\n\r\n            <div style=\"background-color: #FFFF00F0; width:100%; height:100%;\">\r\n                <h3 class=\"text-center colorBlack textVerticalCenter w100p\" v-html=\"game?.popup.text\"></h3>\r\n                <div class=\"flex-wrap w100p\">\r\n                    <div v-for=\"(card, index) in game?.popup.cards\" :key=\"'PopUpCard' + index\" class=\"mp5px cursorHand\">\r\n                        <img :style=\"getFieldStyleObj(game?.grid.card6)\" @click=\"selectChoiceCard(card)\"\r\n                            :src=\"require('@/assets/Gundam/cards/' + card.id + '.webp')\" />\r\n                    </div>\r\n                </div>\r\n                <span class=\"relative\">\r\n                    <span v-for=\"(choice, index) in game?.popup.choices\" :key=\"'Choice' + index\">\r\n                        <v-btn v-if=\"choice.text\" class=\"m10px\" @click=\"selectChoice(choice)\">\r\n                            {{ choice.text }}\r\n                        </v-btn>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"game && game.tasks\" class=\"absolute hide\" style=\"z-index:12;\">\r\n            {{game.tasks.map(x => x.id)}}\r\n        </div>\r\n\r\n        <!-- Title -->\r\n        <div id=\"divTitleParent\" class=\"absolute bgWhite mask\" style=\"top:80px; width: 100%; height:0px; z-index:13\">\r\n            <div class=\"relative\">\r\n                <div class=\"text-center absolute w100p title\" style=\"left:-000px; top:30px;\">{{ title }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Card center -->\r\n        <gameCard id=\"cardCenter\" :card=\"cardCenter\" folder=\"Gundam/cards/\" @click=\"showCard(null)\"\r\n            style=\"z-index: 12;\">\r\n        </gameCard>\r\n\r\n        <div class=\"absolute hide\">\r\n            hello world\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n    overflow: hidden;\r\n    overscroll-behavior: none;\r\n}\r\n\r\nbody {\r\n    position: relative;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport helperAnimation from '../helpers/helperAnimation';\r\nimport gameManager from './gameManager';\r\nimport gundamManager from './gundam/manager';\r\nimport positioner from './positioner';\r\nimport gameCard from './card';\r\nimport deck from './deck';\r\nimport deckList from './deckList';\r\n\r\nexport default {\r\n    name: 'game-vue',\r\n    props: [],\r\n    components: { gameCard, deck, deckList },\r\n    data: () => ({\r\n        refreshG: 0,\r\n        aside: false,\r\n        freeze: true,\r\n        cards: [],\r\n        cardCenter: { id: 'GD01-028', position: { width: 0 } },\r\n        game: null,\r\n        title: '',\r\n        center: null,\r\n        cardList: null,\r\n        decklistPlayer1: null,\r\n        decklistPlayer2: null,\r\n        decklistShow: null,\r\n        deckList: [\r\n            { name: 'Gundam', card1: 'ST01-001', card2: 'ST01-010', card3: 'ST01-015', list: '4xST01-001,4xST01-002,4xST01-005,4xST01-010,4xST01-012,4xST01-013,4xST01-015,4xGD01-004,4xGD01-008,4xGD01-009,4xGD01-013,4xGD01-015,4xGD01-099,4xGD01-124' },\r\n            { name: 'Mercury', card1: 'GD01-070', card2: 'ST01-011', card3: 'GD01-117', list: '5xST01-007,5xST01-008,5xST01-011,5xST01-016,5xGD01-070,5xGD01-075,5xGD01-076,5xGD01-097,5xGD01-117' },\r\n            { name: 'Zeon', card1: 'GD01-026', card2: 'ST03-011', card3: 'ST03-016', list: '7xST03-007,7xST03-008,6xST03-011,7xST03-016,7xGD01-026,7xGD01-030,6xGD01-031,6xGD01-105' },\r\n            { name: 'Unicorn', card1: 'GD01-005', card2: 'GD01-088', card3: 'GD01-100', list: '7xGD01-005,8xGD01-011,7xGD01-016,7xGD01-018,7xGD01-088,7xGD01-089,7xGD01-100' },\r\n            { name: 'Seed', card1: 'ST04-001', card2: 'ST04-010', card3: 'ST04-015', list: '4xGD01-072, 4xST04-001,4xST04-002,4xST04-005,4xST04-010,5xST04-013,5xST04-015,4xGD01-068,4xGD01-077,4xGD01-081,4xGD01-118,4xGD01-120' },\r\n            { name: 'Wing', card1: 'ST02-001', card2: 'ST02-010', card3: 'GD01-028', list: '4xGD01-028,4xGD01-034,4xGD01-040,4xGD01-041,4xGD01-091,3xGD01-107,4xST02-001,4xST02-002,4xST02-005,4xST02-010,4xST02-012,4xST02-013,3xST02-015' }]\r\n    }),\r\n    mounted() {\r\n        document.body.style.overflow = \"hidden\";\r\n        window.addEventListener(\"resize\", () => {\r\n            this.refreshG++;\r\n        });\r\n        this.center = positioner.getCardSize(this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, 1, 1);\r\n        this.cardList = gundamManager.getCards();\r\n        //this.decklistShow = this.deckList[0];\r\n\r\n        /*this.decklistPlayer1 = this.deckList[3].list;\r\n        this.decklistPlayer2 = this.deckList[3].list;\r\n        this.start();*/\r\n    },\r\n    methods: {\r\n        showDeckList(decklist) {\r\n            this.decklistShow = decklist;\r\n        },\r\n        selectDeckList(decklist) {\r\n            if (!this.decklistPlayer1)\r\n                this.decklistPlayer1 = decklist.list;\r\n            else {\r\n                this.decklistPlayer2 = decklist.list;\r\n                this.start();\r\n            }\r\n            this.decklistShow = null;\r\n        },\r\n        start() {\r\n            this.game = gameManager.createGame(gundamManager, this.$vuetify.breakpoint.width, this.$vuetify.breakpoint.height, this.decklistPlayer1, this.decklistPlayer2);\r\n            this.refreshGame();\r\n        },\r\n        nextTurn() {\r\n            if (this.freeze)\r\n                return;\r\n            this.game = gameManager.nextTurn(this.game);\r\n            this.refreshGame();\r\n        },\r\n        continue() {\r\n            this.freeze = false;\r\n            this.game = gameManager.continue(this.game);\r\n            if (this.game.popup) {\r\n                this.freeze = true;\r\n                return;\r\n            }\r\n            if (this.game.refreshOnlyTextEffect)\r\n                this.animTextEffect();\r\n\r\n            if (this.game.refresh)\r\n                this.refreshGame();\r\n        },\r\n        playCard(card1, card2, drop) {\r\n            if (this.freeze)\r\n                return;\r\n            this.freeze = true;\r\n            this.game = gameManager.playCard(this.game, card1, card2, drop);\r\n            this.refreshGame();\r\n        },\r\n        selectChoice(choice) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoice(this.game, choice);\r\n            this.refreshGame();\r\n        },\r\n        selectChoiceCard(card) {\r\n            this.freeze = true;\r\n            this.game = gameManager.selectChoiceCard(this.game, card);\r\n            this.refreshGame();\r\n        },\r\n        refreshGame() {\r\n            this.freeze = true;\r\n            this.cards = this.game.cards;\r\n            setTimeout(() => { this.setDrag(); }, 10);\r\n\r\n            if (this.game.showTitle)\r\n                this.showTitle(this.game.showTitle);\r\n\r\n            this.refreshG++;\r\n            setTimeout(() => { this.beginAnimation(); }, 10);\r\n        },\r\n        animTextEffect() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            helperAnimation.animateMultiple([{ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false }], animationTime);\r\n        },\r\n        beginAnimation() {\r\n            let animationTime = gundamManager.getAnimDuration();\r\n            const needToAnimateTextEffect = this.game && this.game.textEffect && this.game.textEffect.to ? true : false;\r\n            const cardsToAnimate = this.cards.filter(x => x.to);\r\n            animationTime = !needToAnimateTextEffect && cardsToAnimate.length < 1 ? 10 : gundamManager.getAnimDuration();\r\n            this.freeze = true;\r\n            setTimeout(() => { this.endAnimation(); }, animationTime + 10);\r\n\r\n            if (cardsToAnimate.length < 1)\r\n                return;\r\n\r\n            const animations = cardsToAnimate.map(card => { return { id: 'C' + card.index, from: card.position, to: card.to, isIncrement: false }; });\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                animations.push({ id: 'textEffect', from: this.game.textEffect.position, to: this.game.textEffect.to, isIncrement: false });\r\n            }\r\n            helperAnimation.animateMultiple(animations, animationTime);\r\n\r\n        },\r\n        endAnimation() {\r\n            const wait = this.game.wait ? this.game.wait : 1;\r\n            if (this.game && this.game.textEffect && this.game.textEffect.to) {\r\n                this.game.textEffect.position = this.game.textEffect.to;\r\n                delete (this.game.textEffect.to);\r\n            }\r\n            setTimeout(() => { this.continue() }, wait);\r\n        },\r\n        showTitle(text) {\r\n            this.title = text;\r\n            const animationTime = 200;\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 0 }, { height: 100 }, false, animationTime); }, 10);\r\n            setTimeout(() => { helperAnimation.animate('divTitleParent', { height: 100 }, { height: 0 }, false, animationTime); }, 4.5 * (animationTime + 10));\r\n        },\r\n\r\n        // --------- showCard\r\n        showCardMouseOver(card) {\r\n            if (this.aside)\r\n                this.showCard(card);\r\n        },\r\n        showCardDeckList(card) {\r\n            const newCard = { ...card };\r\n            newCard.position = { ...card.position, x: card.position.x + 300 };\r\n            this.showCard(newCard);\r\n        },\r\n        showCard(card) {\r\n            const center = this.game ? this.game.grid.center : this.center;\r\n            if (!card)\r\n                this.cardCenter = {\r\n                    id: this.cardCenter.id,\r\n                    position: this.cardCenter.position,\r\n                    to: { ...this.cardCenter.position, height: 0 }\r\n                };\r\n            else\r\n                this.cardCenter = {\r\n                    id: card.id,\r\n                    position: card.position,\r\n                    to: {\r\n                        x: center.x,\r\n                        y: center.y,\r\n                        width: center.width,\r\n                        height: center.height,\r\n                        rotation: 0\r\n                    }\r\n                };\r\n\r\n            const animations = [{ id: 'cardCenter', from: this.cardCenter.position, to: this.cardCenter.to, isIncrement: false }];\r\n            helperAnimation.animateMultiple(animations, gundamManager.getAnimDuration());\r\n            setTimeout(() => {\r\n                this.cardCenter.position = this.cardCenter.to;\r\n                delete (this.cardCenter.to);\r\n            }, 510);\r\n\r\n        },\r\n\r\n        // --------- Drag and drop\r\n        setDrag() {\r\n            this.cards.forEach(card => {\r\n                const id = 'C' + card.index;\r\n                this.addEvent(id, 'dragstart', (event) => this.startDrag(event, card));\r\n                this.addEvent(id, 'dragover', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchmove', (event) => this.moveCard(event, card));\r\n                this.addEvent(id, 'touchstart', (event) => this.touchStart(event, card));\r\n                this.addEvent(id, 'touchend', (event) => this.touchEnd(event, card));\r\n            });\r\n        },\r\n        addEvent(id, event, action) {\r\n            const element = document.getElementById(id);\r\n            if (element)\r\n                element.addEventListener(event, (event) => action(event));\r\n        },\r\n        moveCard(event, card) {\r\n            if (!card && card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n\r\n            let x = event.touches ? event.touches[0].clientX : event.clientX;\r\n            let y = event.touches ? event.touches[0].clientY : event.clientY;\r\n\r\n            x -= card.position.width / 2;\r\n            y -= card.position.height / 2;\r\n\r\n            const element = event.target;\r\n            element.style.left = `${x}px`;\r\n            element.style.top = `${y}px`;\r\n            card.positionDrag = { x, y };\r\n        },\r\n        startDrag(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.dataTransfer.effectAllowed = 'move';\r\n            event.dataTransfer.setDragImage(new Image(), 0, 0);\r\n            event.dataTransfer.setData('card', card.index);\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        onDragOver(event) {\r\n            event.preventDefault();\r\n        },\r\n        onDrop(event) {\r\n            if (this.freeze)\r\n                return;\r\n            event.preventDefault();\r\n            const x = event.clientX || event.pageX || (event.touches ? event.touches[0].clientX : null);\r\n            const y = event.clientY || event.pageY || (event.touches ? event.touches[0].clientY : null);\r\n\r\n            event.target.style.zIndex = \"auto\";\r\n            const data = event.dataTransfer.getData(\"card\");\r\n            const card = this.getCard(data);\r\n            if (!card)\r\n                return;\r\n            card.moving = false;\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(x, y, ca.position) && !ca.isPaired);\r\n            const zoneDrop = this.game.fields.find(zone => this.isInside(x, y, zone));\r\n            this.playCard(card, card2, zoneDrop);\r\n        },\r\n\r\n\r\n        // --------- Touch\r\n        touchStart(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = true;\r\n            card.positionOld = this.clone(card.position);\r\n            event.target.style.zIndex = \"1000\";\r\n        },\r\n        touchEnd(event, card) {\r\n            if (this.freeze || card.isPlayer1 !== this.game.isPlayer1 || !card)\r\n                return;\r\n            card.moving = false;\r\n            event.target.style.zIndex = \"auto\";\r\n            const touch = event.changedTouches[0];\r\n\r\n            const card2 = this.cards.find(ca => ca.index !== card.index && this.isInside(touch.clientX, touch.clientY, ca.position) && !ca.isPaired);\r\n            const zone = this.game.fields.find(zone => this.isInside(touch.clientX, touch.clientY, zone));\r\n            this.playCard(card, card2, zone);\r\n        },\r\n        isInside(x, y, box) {\r\n            const minX = box.x;\r\n            const minY = box.y;\r\n            const maxX = minX + box.width;\r\n            const maxY = minY + box.height;\r\n            return (x >= minX && x <= maxX) && (y >= minY && y <= maxY);\r\n        },\r\n\r\n        // Utils\r\n        clone(obj) { return Object.assign({}, obj); },\r\n        showText(text) { alert(text); },\r\n        getGridX(i) { return this.game?.grid['x' + i]; },\r\n        getGridY(i) { return this.game?.grid['y' + i]; },\r\n        getCard(index) {\r\n            return this.cards.find(x => x.index == index);\r\n        },\r\n        getGridPlace(x, y) {\r\n            return {\r\n                width: this.game?.grid.box.width + 'px', height: this.game?.grid.box.height + 'px',\r\n                left: this.getGridX(x) + 'px', top: this.getGridY(y) + 'px'\r\n            };\r\n        },\r\n        getFieldStyleObj(size) {\r\n            return this.getFieldStyle(size.x, size.y, size.width, size.height);\r\n        },\r\n        getFieldStyle(x, y, w, h) {\r\n            return {\r\n                width: w + 'px', height: h + 'px',\r\n                left: x + 'px', top: y + 'px'\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=6a15c0b2&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=6a15c0b2&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a15c0b2\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"bg2 h100p\">\r\n        <menu-bar-gundam :hide=\"true\">\r\n        </menu-bar-gundam>\r\n        <game></game>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'StyledComponent'\r\n}\r\n</script>\r\n\r\n<script>\r\nimport menuBarGundam from '../../components/menuBarGundam';\r\nimport game from '../../games/game';\r\n\r\n  export default {\r\n  name: 'pageGundamTcgFight',\r\n  components: {menuBarGundam, game},\r\n  data: () => ({ }),\r\n  mounted(){},\r\n  methods: { }\r\n  };\r\n  </script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GundamTcgFight.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GundamTcgFight.vue?vue&type=template&id=30d82f38&\"\nimport script from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\nexport * from \"./GundamTcgFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class helperAnimation {\r\n\r\n    static animateElement(element, from, to, duration) {\r\n        const anim = { element, from, to };\r\n        this.animateElements([anim], duration);\r\n    }\r\n    static animateElements(animations, duration) {\r\n        const startTime = performance.now();\r\n\r\n        function update(currentTime) {\r\n            const elapsedTime = currentTime - startTime;\r\n            const t = Math.min(elapsedTime / duration, 1); // de 0 à 1\r\n            const easedProgress = t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n\r\n            animations.forEach(anim => {\r\n                const currentX = anim.from.x + (anim.to.x - anim.from.x) * easedProgress;\r\n                const currentY = anim.from.y + (anim.to.y - anim.from.y) * easedProgress;\r\n                const currentHeight = anim.from.height + (anim.to.height - anim.from.height) * easedProgress;\r\n                const currentWidth = anim.from.width + (anim.to.width - anim.from.width) * easedProgress;\r\n                const currentRotation = anim.from.rotation + (anim.to.rotation - anim.from.rotation) * easedProgress;\r\n\r\n                anim.element.style.left = currentX + \"px\";\r\n                anim.element.style.top = currentY + \"px\";\r\n                anim.element.style.height = currentHeight + \"px\";\r\n                anim.element.style.width = currentWidth + \"px\";\r\n                anim.element.style.transform = `rotate(${currentRotation}deg)`;\r\n            });\r\n\r\n            if (t < 1)\r\n                requestAnimationFrame(update);\r\n        }\r\n\r\n        requestAnimationFrame(update);\r\n    }\r\n\r\n    static easeInOut(t) {\r\n        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\r\n    }\r\n\r\n    static add(val1, val2) {\r\n        return { x: val1.x + val2.x, y: val1.y + val2.y, rotation: val1.rotation + val2.rotation };\r\n    }\r\n    static getRelativeTo0(val1, val2) {\r\n        return { x: val2.x - val1.x, y: val2.y - val1.y };\r\n    }\r\n    static pxStringToInt(value) { return parseInt(value.replace(\"px\", \"\")); }\r\n\r\n    static animate(id, from, to, isIncrement, duration = global.delay) {\r\n        return this.animateMultiple([{ id, from, to, isIncrement }], duration);\r\n    }\r\n\r\n    static animateMultiple(animations, duration = -1) {\r\n        if (duration === -1)\r\n            duration = global.delay;\r\n        const animationsArray = [];\r\n        animations.forEach(anim => {\r\n            if (!anim.to) {\r\n                // console.log(\"to is missing for animation : \" + anim.id);\r\n                return;\r\n            }\r\n            const element = document.getElementById(anim.id);\r\n            if (!element) {\r\n                console.log(\"element can't be found : \" + anim.id);\r\n                return;\r\n            }\r\n            const from = anim.from ?? {\r\n                x: this.pxStringToInt(element.style.left),\r\n                y: this.pxStringToInt(element.style.top),\r\n                rotation: element.style.rotation,\r\n                height: element.style.height,\r\n                width: element.style.width\r\n            };\r\n            from.rotation = from.rotation ?? 0;\r\n            from.height = from.height ?? element.clientHeight;\r\n            const to = anim.isIncrement ? this.add(from, anim.to) : anim.to;\r\n            animationsArray.push({ element, from, to });\r\n        });\r\n        this.animateElements(animationsArray, duration);\r\n    }\r\n\r\n    /*const newSize = initialSize + (targetSize - initialSize) * easedProgress;\r\n      div.style.width = `${newSize}px`;\r\n      div.style.height = `${newSize}px`;*/\r\n\r\n}\r\n\r\nmodule.exports = helperAnimation;\r\n","var map = {\n\t\"./EXB-001.webp\": 43631,\n\t\"./EXBP-001.webp\": 69411,\n\t\"./GD01-004.webp\": 19862,\n\t\"./GD01-004_p1.webp\": 91962,\n\t\"./GD01-005.webp\": 80632,\n\t\"./GD01-008.webp\": 13406,\n\t\"./GD01-009.webp\": 39343,\n\t\"./GD01-011.webp\": 57985,\n\t\"./GD01-013.webp\": 25257,\n\t\"./GD01-015.webp\": 29370,\n\t\"./GD01-016.webp\": 24272,\n\t\"./GD01-018.webp\": 62998,\n\t\"./GD01-026.webp\": 83759,\n\t\"./GD01-026_p1.webp\": 58145,\n\t\"./GD01-028.webp\": 21495,\n\t\"./GD01-030.webp\": 94485,\n\t\"./GD01-031.webp\": 38537,\n\t\"./GD01-034.webp\": 63515,\n\t\"./GD01-040.webp\": 66732,\n\t\"./GD01-041.webp\": 70958,\n\t\"./GD01-068.webp\": 46040,\n\t\"./GD01-070.webp\": 45504,\n\t\"./GD01-070_p1.webp\": 85993,\n\t\"./GD01-072.webp\": 8042,\n\t\"./GD01-075.webp\": 52313,\n\t\"./GD01-076.webp\": 85876,\n\t\"./GD01-077.webp\": 97867,\n\t\"./GD01-081.webp\": 18546,\n\t\"./GD01-088.webp\": 14026,\n\t\"./GD01-088_p1.webp\": 68437,\n\t\"./GD01-089.webp\": 27418,\n\t\"./GD01-091.webp\": 81708,\n\t\"./GD01-097.webp\": 34893,\n\t\"./GD01-099.webp\": 49483,\n\t\"./GD01-100.webp\": 93330,\n\t\"./GD01-100_p1.webp\": 92990,\n\t\"./GD01-105.webp\": 67155,\n\t\"./GD01-107.webp\": 66642,\n\t\"./GD01-107_p1.webp\": 60768,\n\t\"./GD01-117.webp\": 79955,\n\t\"./GD01-118.webp\": 70779,\n\t\"./GD01-118_p1.webp\": 57707,\n\t\"./GD01-120.webp\": 90273,\n\t\"./GD01-124.webp\": 8279,\n\t\"./R-001.webp\": 96567,\n\t\"./R-002.webp\": 38857,\n\t\"./ST01-001.webp\": 16906,\n\t\"./ST01-001_p1.webp\": 6864,\n\t\"./ST01-002.webp\": 23582,\n\t\"./ST01-005.webp\": 7162,\n\t\"./ST01-007.webp\": 56694,\n\t\"./ST01-008.webp\": 70791,\n\t\"./ST01-010.webp\": 45022,\n\t\"./ST01-011.webp\": 56581,\n\t\"./ST01-011_p1.webp\": 1978,\n\t\"./ST01-012.webp\": 13866,\n\t\"./ST01-013.webp\": 79915,\n\t\"./ST01-015.webp\": 51310,\n\t\"./ST01-016.webp\": 86882,\n\t\"./ST02-001.webp\": 58864,\n\t\"./ST02-001_p1.webp\": 76074,\n\t\"./ST02-002.webp\": 23941,\n\t\"./ST02-005.webp\": 55045,\n\t\"./ST02-010.webp\": 99834,\n\t\"./ST02-012.webp\": 57160,\n\t\"./ST02-013.webp\": 55214,\n\t\"./ST02-015.webp\": 34078,\n\t\"./ST03-007.webp\": 82235,\n\t\"./ST03-008.webp\": 55340,\n\t\"./ST03-011.webp\": 56486,\n\t\"./ST03-011_p1.webp\": 92329,\n\t\"./ST03-016.webp\": 77816,\n\t\"./ST04-001.webp\": 22859,\n\t\"./ST04-001_p1.webp\": 46858,\n\t\"./ST04-002.webp\": 18971,\n\t\"./ST04-005.webp\": 54511,\n\t\"./ST04-010.webp\": 80363,\n\t\"./ST04-013.webp\": 14005,\n\t\"./ST04-015.webp\": 81633,\n\t\"./T-001.webp\": 32442,\n\t\"./T-002.webp\": 46514,\n\t\"./T-003.webp\": 88739,\n\t\"./T-006.webp\": 17071\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85182;","var map = {\n\t\"./Daggerheart/class/bard-banner.webp\": 85519,\n\t\"./Daggerheart/class/druid-banner.webp\": 60992,\n\t\"./Daggerheart/class/guardian-banner.webp\": 42548,\n\t\"./Daggerheart/class/ranger-banner.webp\": 85811,\n\t\"./Daggerheart/class/rogue-banner.webp\": 73300,\n\t\"./Daggerheart/class/seraph-banner.webp\": 55354,\n\t\"./Daggerheart/class/sorcerer-banner.webp\": 17294,\n\t\"./Daggerheart/class/warrior-banner.webp\": 18201,\n\t\"./Daggerheart/class/wizard-banner.webp\": 52234,\n\t\"./Daggerheart/domain/banner-arcana.webp\": 63611,\n\t\"./Daggerheart/domain/banner-blade.webp\": 62931,\n\t\"./Daggerheart/domain/banner-bone.webp\": 33989,\n\t\"./Daggerheart/domain/banner-codex.webp\": 79151,\n\t\"./Daggerheart/domain/banner-grace.webp\": 64559,\n\t\"./Daggerheart/domain/banner-midnight.webp\": 36595,\n\t\"./Daggerheart/domain/banner-sage.webp\": 24162,\n\t\"./Daggerheart/domain/banner-splendor.webp\": 52593,\n\t\"./Daggerheart/domain/banner-valor.webp\": 89751,\n\t\"./Daggerheart/domain/logo-arcana.webp\": 99903,\n\t\"./Daggerheart/domain/logo-blade.webp\": 1753,\n\t\"./Daggerheart/domain/logo-bone.webp\": 37935,\n\t\"./Daggerheart/domain/logo-codex.webp\": 40820,\n\t\"./Daggerheart/domain/logo-grace.webp\": 54010,\n\t\"./Daggerheart/domain/logo-midnight.webp\": 7925,\n\t\"./Daggerheart/domain/logo-sage.webp\": 99224,\n\t\"./Daggerheart/domain/logo-splendor.webp\": 1373,\n\t\"./Daggerheart/domain/logo-valor.webp\": 39249,\n\t\"./Daggerheart/other/cost.webp\": 80987,\n\t\"./Gundam/cards/EXB-001.webp\": 43631,\n\t\"./Gundam/cards/EXBP-001.webp\": 69411,\n\t\"./Gundam/cards/GD01-004.webp\": 19862,\n\t\"./Gundam/cards/GD01-004_p1.webp\": 91962,\n\t\"./Gundam/cards/GD01-005.webp\": 80632,\n\t\"./Gundam/cards/GD01-008.webp\": 13406,\n\t\"./Gundam/cards/GD01-009.webp\": 39343,\n\t\"./Gundam/cards/GD01-011.webp\": 57985,\n\t\"./Gundam/cards/GD01-013.webp\": 25257,\n\t\"./Gundam/cards/GD01-015.webp\": 29370,\n\t\"./Gundam/cards/GD01-016.webp\": 24272,\n\t\"./Gundam/cards/GD01-018.webp\": 62998,\n\t\"./Gundam/cards/GD01-026.webp\": 83759,\n\t\"./Gundam/cards/GD01-026_p1.webp\": 58145,\n\t\"./Gundam/cards/GD01-028.webp\": 21495,\n\t\"./Gundam/cards/GD01-030.webp\": 94485,\n\t\"./Gundam/cards/GD01-031.webp\": 38537,\n\t\"./Gundam/cards/GD01-034.webp\": 63515,\n\t\"./Gundam/cards/GD01-040.webp\": 66732,\n\t\"./Gundam/cards/GD01-041.webp\": 70958,\n\t\"./Gundam/cards/GD01-068.webp\": 46040,\n\t\"./Gundam/cards/GD01-070.webp\": 45504,\n\t\"./Gundam/cards/GD01-070_p1.webp\": 85993,\n\t\"./Gundam/cards/GD01-072.webp\": 8042,\n\t\"./Gundam/cards/GD01-075.webp\": 52313,\n\t\"./Gundam/cards/GD01-076.webp\": 85876,\n\t\"./Gundam/cards/GD01-077.webp\": 97867,\n\t\"./Gundam/cards/GD01-081.webp\": 18546,\n\t\"./Gundam/cards/GD01-088.webp\": 14026,\n\t\"./Gundam/cards/GD01-088_p1.webp\": 68437,\n\t\"./Gundam/cards/GD01-089.webp\": 27418,\n\t\"./Gundam/cards/GD01-091.webp\": 81708,\n\t\"./Gundam/cards/GD01-097.webp\": 34893,\n\t\"./Gundam/cards/GD01-099.webp\": 49483,\n\t\"./Gundam/cards/GD01-100.webp\": 93330,\n\t\"./Gundam/cards/GD01-100_p1.webp\": 92990,\n\t\"./Gundam/cards/GD01-105.webp\": 67155,\n\t\"./Gundam/cards/GD01-107.webp\": 66642,\n\t\"./Gundam/cards/GD01-107_p1.webp\": 60768,\n\t\"./Gundam/cards/GD01-117.webp\": 79955,\n\t\"./Gundam/cards/GD01-118.webp\": 70779,\n\t\"./Gundam/cards/GD01-118_p1.webp\": 57707,\n\t\"./Gundam/cards/GD01-120.webp\": 90273,\n\t\"./Gundam/cards/GD01-124.webp\": 8279,\n\t\"./Gundam/cards/R-001.webp\": 96567,\n\t\"./Gundam/cards/R-002.webp\": 38857,\n\t\"./Gundam/cards/ST01-001.webp\": 16906,\n\t\"./Gundam/cards/ST01-001_p1.webp\": 6864,\n\t\"./Gundam/cards/ST01-002.webp\": 23582,\n\t\"./Gundam/cards/ST01-005.webp\": 7162,\n\t\"./Gundam/cards/ST01-007.webp\": 56694,\n\t\"./Gundam/cards/ST01-008.webp\": 70791,\n\t\"./Gundam/cards/ST01-010.webp\": 45022,\n\t\"./Gundam/cards/ST01-011.webp\": 56581,\n\t\"./Gundam/cards/ST01-011_p1.webp\": 1978,\n\t\"./Gundam/cards/ST01-012.webp\": 13866,\n\t\"./Gundam/cards/ST01-013.webp\": 79915,\n\t\"./Gundam/cards/ST01-015.webp\": 51310,\n\t\"./Gundam/cards/ST01-016.webp\": 86882,\n\t\"./Gundam/cards/ST02-001.webp\": 58864,\n\t\"./Gundam/cards/ST02-001_p1.webp\": 76074,\n\t\"./Gundam/cards/ST02-002.webp\": 23941,\n\t\"./Gundam/cards/ST02-005.webp\": 55045,\n\t\"./Gundam/cards/ST02-010.webp\": 99834,\n\t\"./Gundam/cards/ST02-012.webp\": 57160,\n\t\"./Gundam/cards/ST02-013.webp\": 55214,\n\t\"./Gundam/cards/ST02-015.webp\": 34078,\n\t\"./Gundam/cards/ST03-007.webp\": 82235,\n\t\"./Gundam/cards/ST03-008.webp\": 55340,\n\t\"./Gundam/cards/ST03-011.webp\": 56486,\n\t\"./Gundam/cards/ST03-011_p1.webp\": 92329,\n\t\"./Gundam/cards/ST03-016.webp\": 77816,\n\t\"./Gundam/cards/ST04-001.webp\": 22859,\n\t\"./Gundam/cards/ST04-001_p1.webp\": 46858,\n\t\"./Gundam/cards/ST04-002.webp\": 18971,\n\t\"./Gundam/cards/ST04-005.webp\": 54511,\n\t\"./Gundam/cards/ST04-010.webp\": 80363,\n\t\"./Gundam/cards/ST04-013.webp\": 14005,\n\t\"./Gundam/cards/ST04-015.webp\": 81633,\n\t\"./Gundam/cards/T-001.webp\": 32442,\n\t\"./Gundam/cards/T-002.webp\": 46514,\n\t\"./Gundam/cards/T-003.webp\": 88739,\n\t\"./Gundam/cards/T-006.webp\": 17071,\n\t\"./blue.webp\": 70148,\n\t\"./dark.webp\": 87975,\n\t\"./konamiCode.webp\": 95768\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97226;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["on","attrs","model","staticStyle","_c","require","_vm","_s","key","$vuetify","width","link","Text","Icon","unselect","staticClass","callback","showDrawer","_v","external","staticRenderFns","name","components","linkButton","props","data","store","version","searchString","links","Url","mounted","$version","methods","component","render","this","_self","decklistShow","selectDeckList","i","height","getGridY","getGridX","fields","filter","class","absolute","box","fontSize1em","textVerticalCenter","bgYellow2","style","getFieldStyle","grid","game","centerMini","card2","x","y","_e","text","textEffect","position","domProps","card","selectable","$event","showCard","onDragOver","left","x0","w100p","shine","getFieldStyleObj","choice","GameGundamEffect","static","cards","removeEndTurn","forEach","lost","fx","id","push","global","log","join","player","card1","trigger","effectsRemainings","getEffectsRemaining","length","map","getEffectText","delay","isShowingEffect","cardHighlight","find","index","gameTask","addTasks","tasks","taskRefreshField","isPlayer1","apply","taskCardsToMiniCenter","concat","stop","effect","result","toString","value","target","effect2","ap","hp","effects","effectsRemaining","nothing","toBeRemoved","applyEffect","oneTurn","includes","multiTriggers","onpair","onlink","opponent","getPlayer","needNewCard2","card2Obj","cardChoice","field","isCardUnit","alert","logEffect","JSON","stringify","console","taskPopup","deletePopup","hand","move","locationTrash","pair","isPaired","locationHand","setActive","Math","min","hpMax","shield","splice","location","positions","taskMove","to","getAndRemoveFirst","deck","select","bottomCard","popup","base","level","effectClone","clone","locationField","locationShield","taskPlayCard","zone","resourcesEx","resourcesAvailable","resAString","resourcesMax","breach","targets","attribute","canAttack","onplay","attackActiveEnnemy","immuneAp","_defineProperty","locationEmpty","locationDeck","locationBase","locationResource","locationPair","locationFrom","locationTo","cardSpawn","spawnIfNot","addIn","player1","player2","zindex","from","getLocationArrayProperty","removeByIndex","end","isTemporaryCard","active","hidestat","needToRefreshAllField","cardUnit","cardPilot","isCardPilot","isLink","effectResult","handleEffects","targetStr","replace","message","getNextIndex","degree","rotation","array","list","slice","sort","random","actionPlayer","actionOpponent","type","isCardCommand","logs","obj","Object","assign","needTaskEndRefresh","task","isEqual","task1","task2","taskid","reverse","t","refresh","tasksString","wait","taskEndRefresh","refreshOnlyTextEffect","manager","refreshFieldAndHand","taskTextHide","showTitle","spawnOrMove","taskCenter","taskCardToCenter","addListInArrayAfterIndex","destination","card3","taskTextShow","center","taskAttack","attack","attacker","cardPlayer","playCard","regularPlay","positioner","border","border2","divide","widthB","heightB","boxbig","getCardSize","cardHeightPercent","card6","x1","y1","createZone","x15","y8","y7","y9","y6","y10","y5","trash","y11","y4","resource","y12","y3","y13","y0","x14","x2","y2","show","p1","p2","useZoneSize","wrapCut","zoneHeight","cardSize","bgposition","getWrapPosition","getPairPosition","count","desiredWidth","desiredHeight","total","cardWidth","cardWidthHalf","sens","factorRotation","mid","isPair","midX","floor","ceil","abs","playerSens","round","heightIncruise","totalWidth","elementWidth","halfWidth","half","indexCenter","getCardPositionXY","indexLine","totalLine","cardSizeLine","positionLine","getXCenter","sizeWidth","ratio","margin","maxSize","size","getCardSizeWrap","marginHorizontal","lineIndex","lineRequired","widthMargin","heightMargin","ratioInverted","heightDesired","widthDesired","gameManager","decklistPlayer1","decklistPlayer2","getCards","createGrid","deckLength","getDeckLenth","createPlayer","getPositions","createField","getHandStartLength","decklist","split","line","info","quantity","parseInt","Error","createCard","sortRandom","empty","setup","createGame","getAnimDuration","nextTurn","endTurn","playerId","taskTitleShow","taskMoveAndShowCenter","handleTasks","endAnimation","positionDrag","positionOld","selectChoiceCard","selectChoice","cardPlay","isSamePlayer","wrongCost","cost","sendBack","playCost","isPilot","isCommand","pilotOrCommand","askPilotOrCommand","playCardCost","isCardBase","sendCardBackToSquareOne","taskPairCard","taskApplyEffect","command","max","choices","cardAttack","getPlayerTurnOpponent","blockers","block","selectedAsBlocker","blocker","isValidTarget","startAttackAnimation","burst","battle","damage","activeBreach","destroyUnit","avoidDelay","dead","delayForTarget","ondestroyed","cardHandler","isCostAvailable","isTurnPlayer","noDropZone","playFromHand","prepareAttack","attackCard","createUniqueRare","createDefaultBase","playerOpponent","rareKeyWord","rareCards","rareCard","firstCard","getPlayerTurn","removeOneTurnEffect","baseText","number","cardsToRemoveIndex","setSelectable","play","startsWith","doMuligan","removeIds","top","transform","cursor","$emit","h100p","folder","preventDefault","cardData","resume","expression","setList","decklistCard","listCorrect","stopRefresh","validate","resultText","isNaN","getId","cardlist","buttons","insertStringAt","getWrapMaxPositions","breakpoint","str","trim","incruise","pitch","indexOf","charAt","content","substring","gameCard","deckList","refreshG","aside","freeze","cardCenter","title","cardList","document","body","overflow","window","addEventListener","gundamManager","showDeckList","start","refreshGame","continue","animTextEffect","drop","setTimeout","setDrag","beginAnimation","animationTime","helperAnimation","isIncrement","needToAnimateTextEffect","cardsToAnimate","animations","showCardMouseOver","showCardDeckList","newCard","addEvent","event","startDrag","moveCard","touchStart","touchEnd","action","element","getElementById","touches","clientX","clientY","dataTransfer","dropEffect","effectAllowed","setDragImage","Image","setData","moving","zIndex","onDrop","pageX","pageY","getData","getCard","ca","isInside","zoneDrop","touch","changedTouches","minX","minY","maxX","maxY","showText","getGridPlace","w","h","menuBarGundam","duration","anim","animateElements","startTime","performance","now","update","currentTime","elapsedTime","easedProgress","pow","currentX","currentY","currentHeight","currentWidth","currentRotation","requestAnimationFrame","val1","val2","animateMultiple","animationsArray","pxStringToInt","clientHeight","add","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve","_typeof","Symbol","iterator","constructor","prototype","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPropertyKey","arg","toPropertyKey","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}